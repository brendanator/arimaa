// Compiled by ClojureScript 0.0-2727 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2727";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [cljs.core.constant$keyword$1,cljs.core._STAR_flush_on_newline_STAR_,cljs.core.constant$keyword$2,cljs.core._STAR_print_readably_STAR_,cljs.core.constant$keyword$3,cljs.core._STAR_print_meta_STAR_,cljs.core.constant$keyword$4,cljs.core._STAR_print_dup_STAR_,cljs.core.constant$keyword$5,cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__17344__delegate = function (args){
return console.log.apply(console,(function (){var G__17343 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__17343) : cljs.core.into_array.call(null,G__17343));
})());
};
var G__17344 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__17345__i = 0, G__17345__a = new Array(arguments.length -  0);
while (G__17345__i < G__17345__a.length) {G__17345__a[G__17345__i] = arguments[G__17345__i + 0]; ++G__17345__i;}
  args = new cljs.core.IndexedSeq(G__17345__a,0);
} 
return G__17344__delegate.call(this,args);};
G__17344.cljs$lang$maxFixedArity = 0;
G__17344.cljs$lang$applyTo = (function (arglist__17346){
var args = cljs.core.seq(arglist__17346);
return G__17344__delegate(args);
});
G__17344.cljs$core$IFn$_invoke$arity$variadic = G__17344__delegate;
return G__17344;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__17348 = x;
return goog.isString(G__17348);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__17350 = x__$1;
return goog.typeOf(G__17350);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__3738__auto__ = ty;
if(cljs.core.truth_(and__3738__auto__)){
return ty.cljs$lang$type;
} else {
return and__3738__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__17352 = obj;
return goog.typeOf(G__17352);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__17354 = Symbol;
return goog.typeOf(G__17354);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__4637__auto___17356 = len;
var i_17357 = (0);
while(true){
if((i_17357 < n__4637__auto___17356)){
(new_arr[i_17357] = (arr[i_17357]));

var G__17358 = (i_17357 + (1));
i_17357 = G__17358;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__17359 = (i + (1));
i = G__17359;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__17368__delegate = function (array,i,idxs){
var G__17365 = aget;
var G__17366 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__17367 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__17365,G__17366,G__17367) : cljs.core.apply.call(null,G__17365,G__17366,G__17367));
};
var G__17368 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__17369__i = 0, G__17369__a = new Array(arguments.length -  2);
while (G__17369__i < G__17369__a.length) {G__17369__a[G__17369__i] = arguments[G__17369__i + 2]; ++G__17369__i;}
  idxs = new cljs.core.IndexedSeq(G__17369__a,0);
} 
return G__17368__delegate.call(this,array,i,idxs);};
G__17368.cljs$lang$maxFixedArity = 2;
G__17368.cljs$lang$applyTo = (function (arglist__17370){
var array = cljs.core.first(arglist__17370);
arglist__17370 = cljs.core.next(arglist__17370);
var i = cljs.core.first(arglist__17370);
var idxs = cljs.core.rest(arglist__17370);
return G__17368__delegate(array,i,idxs);
});
G__17368.cljs$core$IFn$_invoke$arity$variadic = G__17368__delegate;
return G__17368;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__17371 = null;
if (arguments.length > 2) {
var G__17372__i = 0, G__17372__a = new Array(arguments.length -  2);
while (G__17372__i < G__17372__a.length) {G__17372__a[G__17372__i] = arguments[G__17372__i + 2]; ++G__17372__i;}
G__17371 = new cljs.core.IndexedSeq(G__17372__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__17371);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__17381__delegate = function (array,idx,idx2,idxv){
var G__17377 = aset;
var G__17378 = (array[idx]);
var G__17379 = idx2;
var G__17380 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__17377,G__17378,G__17379,G__17380) : cljs.core.apply.call(null,G__17377,G__17378,G__17379,G__17380));
};
var G__17381 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__17382__i = 0, G__17382__a = new Array(arguments.length -  3);
while (G__17382__i < G__17382__a.length) {G__17382__a[G__17382__i] = arguments[G__17382__i + 3]; ++G__17382__i;}
  idxv = new cljs.core.IndexedSeq(G__17382__a,0);
} 
return G__17381__delegate.call(this,array,idx,idx2,idxv);};
G__17381.cljs$lang$maxFixedArity = 3;
G__17381.cljs$lang$applyTo = (function (arglist__17383){
var array = cljs.core.first(arglist__17383);
arglist__17383 = cljs.core.next(arglist__17383);
var idx = cljs.core.first(arglist__17383);
arglist__17383 = cljs.core.next(arglist__17383);
var idx2 = cljs.core.first(arglist__17383);
var idxv = cljs.core.rest(arglist__17383);
return G__17381__delegate(array,idx,idx2,idxv);
});
G__17381.cljs$core$IFn$_invoke$arity$variadic = G__17381__delegate;
return G__17381;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__17384 = null;
if (arguments.length > 3) {
var G__17385__i = 0, G__17385__a = new Array(arguments.length -  3);
while (G__17385__i < G__17385__a.length) {G__17385__a[G__17385__i] = arguments[G__17385__i + 3]; ++G__17385__i;}
G__17384 = new cljs.core.IndexedSeq(G__17385__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__17384);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__17391 = (function (a,x){
a.push(x);

return a;
});
var G__17392 = [];
var G__17393 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__17391,G__17392,G__17393) : cljs.core.reduce.call(null,G__17391,G__17392,G__17393));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__17394__i = 0, G__17394__a = new Array(arguments.length -  2);
while (G__17394__i < G__17394__a.length) {G__17394__a[G__17394__i] = arguments[G__17394__i + 2]; ++G__17394__i;}
  args = new cljs.core.IndexedSeq(G__17394__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__17395){
var obj = cljs.core.first(arglist__17395);
arglist__17395 = cljs.core.next(arglist__17395);
var s = cljs.core.first(arglist__17395);
var args = cljs.core.rest(arglist__17395);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj17397 = {};
return obj17397;
})();


cljs.core.IFn = (function (){var obj17399 = {};
return obj17399;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__3738__auto__ = this$;
if(and__3738__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__3738__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__4394__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3750__auto__ = (cljs.core._invoke[(function (){var G__17445 = x__4394__auto__;
return goog.typeOf(G__17445);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._invoke["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__3738__auto__ = this$;
if(and__3738__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__3738__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__4394__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3750__auto__ = (cljs.core._invoke[(function (){var G__17447 = x__4394__auto__;
return goog.typeOf(G__17447);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._invoke["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__3738__auto__ = this$;
if(and__3738__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__3738__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__4394__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3750__auto__ = (cljs.core._invoke[(function (){var G__17449 = x__4394__auto__;
return goog.typeOf(G__17449);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._invoke["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__3738__auto__ = this$;
if(and__3738__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__3738__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__4394__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3750__auto__ = (cljs.core._invoke[(function (){var G__17451 = x__4394__auto__;
return goog.typeOf(G__17451);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._invoke["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__3738__auto__ = this$;
if(and__3738__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__3738__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__4394__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3750__auto__ = (cljs.core._invoke[(function (){var G__17453 = x__4394__auto__;
return goog.typeOf(G__17453);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._invoke["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__3738__auto__ = this$;
if(and__3738__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__3738__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__4394__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3750__auto__ = (cljs.core._invoke[(function (){var G__17455 = x__4394__auto__;
return goog.typeOf(G__17455);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._invoke["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__3738__auto__ = this$;
if(and__3738__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__3738__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__4394__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3750__auto__ = (cljs.core._invoke[(function (){var G__17457 = x__4394__auto__;
return goog.typeOf(G__17457);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._invoke["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__3738__auto__ = this$;
if(and__3738__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__3738__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__4394__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3750__auto__ = (cljs.core._invoke[(function (){var G__17459 = x__4394__auto__;
return goog.typeOf(G__17459);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._invoke["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__3738__auto__ = this$;
if(and__3738__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__3738__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__4394__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3750__auto__ = (cljs.core._invoke[(function (){var G__17461 = x__4394__auto__;
return goog.typeOf(G__17461);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._invoke["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__3738__auto__ = this$;
if(and__3738__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__3738__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__4394__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3750__auto__ = (cljs.core._invoke[(function (){var G__17463 = x__4394__auto__;
return goog.typeOf(G__17463);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._invoke["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__3738__auto__ = this$;
if(and__3738__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__3738__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__4394__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3750__auto__ = (cljs.core._invoke[(function (){var G__17465 = x__4394__auto__;
return goog.typeOf(G__17465);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._invoke["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__3738__auto__ = this$;
if(and__3738__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__3738__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__4394__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3750__auto__ = (cljs.core._invoke[(function (){var G__17467 = x__4394__auto__;
return goog.typeOf(G__17467);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._invoke["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__3738__auto__ = this$;
if(and__3738__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__3738__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__4394__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3750__auto__ = (cljs.core._invoke[(function (){var G__17469 = x__4394__auto__;
return goog.typeOf(G__17469);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._invoke["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__3738__auto__ = this$;
if(and__3738__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__3738__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__4394__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3750__auto__ = (cljs.core._invoke[(function (){var G__17471 = x__4394__auto__;
return goog.typeOf(G__17471);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._invoke["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__3738__auto__ = this$;
if(and__3738__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__3738__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__4394__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3750__auto__ = (cljs.core._invoke[(function (){var G__17473 = x__4394__auto__;
return goog.typeOf(G__17473);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._invoke["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__3738__auto__ = this$;
if(and__3738__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__3738__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__4394__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3750__auto__ = (cljs.core._invoke[(function (){var G__17475 = x__4394__auto__;
return goog.typeOf(G__17475);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._invoke["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__3738__auto__ = this$;
if(and__3738__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__3738__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__4394__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3750__auto__ = (cljs.core._invoke[(function (){var G__17477 = x__4394__auto__;
return goog.typeOf(G__17477);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._invoke["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__3738__auto__ = this$;
if(and__3738__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__3738__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__4394__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3750__auto__ = (cljs.core._invoke[(function (){var G__17479 = x__4394__auto__;
return goog.typeOf(G__17479);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._invoke["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__3738__auto__ = this$;
if(and__3738__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__3738__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__4394__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3750__auto__ = (cljs.core._invoke[(function (){var G__17481 = x__4394__auto__;
return goog.typeOf(G__17481);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._invoke["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__3738__auto__ = this$;
if(and__3738__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__3738__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__4394__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3750__auto__ = (cljs.core._invoke[(function (){var G__17483 = x__4394__auto__;
return goog.typeOf(G__17483);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._invoke["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__3738__auto__ = this$;
if(and__3738__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__3738__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__4394__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3750__auto__ = (cljs.core._invoke[(function (){var G__17485 = x__4394__auto__;
return goog.typeOf(G__17485);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._invoke["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__3738__auto__ = this$;
if(and__3738__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__3738__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__4394__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3750__auto__ = (cljs.core._invoke[(function (){var G__17487 = x__4394__auto__;
return goog.typeOf(G__17487);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._invoke["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj17489 = {};
return obj17489;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__3738__auto__ = value;
if(and__3738__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__3738__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__4394__auto__ = (((value == null))?null:value);
return (function (){var or__3750__auto__ = (cljs.core._clone[(function (){var G__17493 = x__4394__auto__;
return goog.typeOf(G__17493);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._clone["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj17495 = {};
return obj17495;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__3738__auto__ = coll;
if(and__3738__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__3738__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__4394__auto__ = (((coll == null))?null:coll);
return (function (){var or__3750__auto__ = (cljs.core._count[(function (){var G__17499 = x__4394__auto__;
return goog.typeOf(G__17499);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._count["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj17501 = {};
return obj17501;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__3738__auto__ = coll;
if(and__3738__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__3738__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__4394__auto__ = (((coll == null))?null:coll);
return (function (){var or__3750__auto__ = (cljs.core._empty[(function (){var G__17505 = x__4394__auto__;
return goog.typeOf(G__17505);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._empty["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj17507 = {};
return obj17507;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__3738__auto__ = coll;
if(and__3738__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__3738__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__4394__auto__ = (((coll == null))?null:coll);
return (function (){var or__3750__auto__ = (cljs.core._conj[(function (){var G__17511 = x__4394__auto__;
return goog.typeOf(G__17511);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._conj["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj17513 = {};
return obj17513;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__3738__auto__ = coll;
if(and__3738__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__3738__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__4394__auto__ = (((coll == null))?null:coll);
return (function (){var or__3750__auto__ = (cljs.core._nth[(function (){var G__17519 = x__4394__auto__;
return goog.typeOf(G__17519);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._nth["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__3738__auto__ = coll;
if(and__3738__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__3738__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__4394__auto__ = (((coll == null))?null:coll);
return (function (){var or__3750__auto__ = (cljs.core._nth[(function (){var G__17521 = x__4394__auto__;
return goog.typeOf(G__17521);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._nth["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj17523 = {};
return obj17523;
})();


cljs.core.ISeq = (function (){var obj17525 = {};
return obj17525;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__3738__auto__ = coll;
if(and__3738__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__3738__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__4394__auto__ = (((coll == null))?null:coll);
return (function (){var or__3750__auto__ = (cljs.core._first[(function (){var G__17529 = x__4394__auto__;
return goog.typeOf(G__17529);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._first["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__3738__auto__ = coll;
if(and__3738__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__3738__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__4394__auto__ = (((coll == null))?null:coll);
return (function (){var or__3750__auto__ = (cljs.core._rest[(function (){var G__17533 = x__4394__auto__;
return goog.typeOf(G__17533);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._rest["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj17535 = {};
return obj17535;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__3738__auto__ = coll;
if(and__3738__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__3738__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__4394__auto__ = (((coll == null))?null:coll);
return (function (){var or__3750__auto__ = (cljs.core._next[(function (){var G__17539 = x__4394__auto__;
return goog.typeOf(G__17539);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._next["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj17541 = {};
return obj17541;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__3738__auto__ = o;
if(and__3738__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__3738__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__4394__auto__ = (((o == null))?null:o);
return (function (){var or__3750__auto__ = (cljs.core._lookup[(function (){var G__17547 = x__4394__auto__;
return goog.typeOf(G__17547);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._lookup["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__3738__auto__ = o;
if(and__3738__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__3738__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__4394__auto__ = (((o == null))?null:o);
return (function (){var or__3750__auto__ = (cljs.core._lookup[(function (){var G__17549 = x__4394__auto__;
return goog.typeOf(G__17549);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._lookup["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj17551 = {};
return obj17551;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__3738__auto__ = coll;
if(and__3738__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__3738__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__4394__auto__ = (((coll == null))?null:coll);
return (function (){var or__3750__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__17555 = x__4394__auto__;
return goog.typeOf(G__17555);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__3738__auto__ = coll;
if(and__3738__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__3738__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__4394__auto__ = (((coll == null))?null:coll);
return (function (){var or__3750__auto__ = (cljs.core._assoc[(function (){var G__17559 = x__4394__auto__;
return goog.typeOf(G__17559);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._assoc["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj17561 = {};
return obj17561;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__3738__auto__ = coll;
if(and__3738__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__3738__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__4394__auto__ = (((coll == null))?null:coll);
return (function (){var or__3750__auto__ = (cljs.core._dissoc[(function (){var G__17565 = x__4394__auto__;
return goog.typeOf(G__17565);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._dissoc["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj17567 = {};
return obj17567;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__3738__auto__ = coll;
if(and__3738__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__3738__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__4394__auto__ = (((coll == null))?null:coll);
return (function (){var or__3750__auto__ = (cljs.core._key[(function (){var G__17571 = x__4394__auto__;
return goog.typeOf(G__17571);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._key["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__3738__auto__ = coll;
if(and__3738__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__3738__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__4394__auto__ = (((coll == null))?null:coll);
return (function (){var or__3750__auto__ = (cljs.core._val[(function (){var G__17575 = x__4394__auto__;
return goog.typeOf(G__17575);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._val["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj17577 = {};
return obj17577;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__3738__auto__ = coll;
if(and__3738__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__3738__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__4394__auto__ = (((coll == null))?null:coll);
return (function (){var or__3750__auto__ = (cljs.core._disjoin[(function (){var G__17581 = x__4394__auto__;
return goog.typeOf(G__17581);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._disjoin["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj17583 = {};
return obj17583;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__3738__auto__ = coll;
if(and__3738__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__3738__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__4394__auto__ = (((coll == null))?null:coll);
return (function (){var or__3750__auto__ = (cljs.core._peek[(function (){var G__17587 = x__4394__auto__;
return goog.typeOf(G__17587);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._peek["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__3738__auto__ = coll;
if(and__3738__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__3738__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__4394__auto__ = (((coll == null))?null:coll);
return (function (){var or__3750__auto__ = (cljs.core._pop[(function (){var G__17591 = x__4394__auto__;
return goog.typeOf(G__17591);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._pop["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj17593 = {};
return obj17593;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__3738__auto__ = coll;
if(and__3738__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__3738__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__4394__auto__ = (((coll == null))?null:coll);
return (function (){var or__3750__auto__ = (cljs.core._assoc_n[(function (){var G__17597 = x__4394__auto__;
return goog.typeOf(G__17597);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj17599 = {};
return obj17599;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__3738__auto__ = o;
if(and__3738__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__3738__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__4394__auto__ = (((o == null))?null:o);
return (function (){var or__3750__auto__ = (cljs.core._deref[(function (){var G__17603 = x__4394__auto__;
return goog.typeOf(G__17603);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._deref["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj17605 = {};
return obj17605;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__3738__auto__ = o;
if(and__3738__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__3738__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__4394__auto__ = (((o == null))?null:o);
return (function (){var or__3750__auto__ = (cljs.core._deref_with_timeout[(function (){var G__17609 = x__4394__auto__;
return goog.typeOf(G__17609);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj17611 = {};
return obj17611;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__3738__auto__ = o;
if(and__3738__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__3738__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__4394__auto__ = (((o == null))?null:o);
return (function (){var or__3750__auto__ = (cljs.core._meta[(function (){var G__17615 = x__4394__auto__;
return goog.typeOf(G__17615);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._meta["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj17617 = {};
return obj17617;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__3738__auto__ = o;
if(and__3738__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__3738__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__4394__auto__ = (((o == null))?null:o);
return (function (){var or__3750__auto__ = (cljs.core._with_meta[(function (){var G__17621 = x__4394__auto__;
return goog.typeOf(G__17621);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._with_meta["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj17623 = {};
return obj17623;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__3738__auto__ = coll;
if(and__3738__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__3738__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__4394__auto__ = (((coll == null))?null:coll);
return (function (){var or__3750__auto__ = (cljs.core._reduce[(function (){var G__17629 = x__4394__auto__;
return goog.typeOf(G__17629);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._reduce["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__3738__auto__ = coll;
if(and__3738__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__3738__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__4394__auto__ = (((coll == null))?null:coll);
return (function (){var or__3750__auto__ = (cljs.core._reduce[(function (){var G__17631 = x__4394__auto__;
return goog.typeOf(G__17631);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._reduce["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj17633 = {};
return obj17633;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__3738__auto__ = coll;
if(and__3738__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__3738__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__4394__auto__ = (((coll == null))?null:coll);
return (function (){var or__3750__auto__ = (cljs.core._kv_reduce[(function (){var G__17637 = x__4394__auto__;
return goog.typeOf(G__17637);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj17639 = {};
return obj17639;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__3738__auto__ = o;
if(and__3738__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__3738__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__4394__auto__ = (((o == null))?null:o);
return (function (){var or__3750__auto__ = (cljs.core._equiv[(function (){var G__17643 = x__4394__auto__;
return goog.typeOf(G__17643);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._equiv["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj17645 = {};
return obj17645;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__3738__auto__ = o;
if(and__3738__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__3738__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__4394__auto__ = (((o == null))?null:o);
return (function (){var or__3750__auto__ = (cljs.core._hash[(function (){var G__17649 = x__4394__auto__;
return goog.typeOf(G__17649);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._hash["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj17651 = {};
return obj17651;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__3738__auto__ = o;
if(and__3738__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__3738__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__4394__auto__ = (((o == null))?null:o);
return (function (){var or__3750__auto__ = (cljs.core._seq[(function (){var G__17655 = x__4394__auto__;
return goog.typeOf(G__17655);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._seq["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj17657 = {};
return obj17657;
})();


cljs.core.IList = (function (){var obj17659 = {};
return obj17659;
})();


cljs.core.IRecord = (function (){var obj17661 = {};
return obj17661;
})();


cljs.core.IReversible = (function (){var obj17663 = {};
return obj17663;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__3738__auto__ = coll;
if(and__3738__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__3738__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__4394__auto__ = (((coll == null))?null:coll);
return (function (){var or__3750__auto__ = (cljs.core._rseq[(function (){var G__17667 = x__4394__auto__;
return goog.typeOf(G__17667);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._rseq["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj17669 = {};
return obj17669;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__3738__auto__ = coll;
if(and__3738__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__3738__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__4394__auto__ = (((coll == null))?null:coll);
return (function (){var or__3750__auto__ = (cljs.core._sorted_seq[(function (){var G__17673 = x__4394__auto__;
return goog.typeOf(G__17673);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__3738__auto__ = coll;
if(and__3738__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__3738__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__4394__auto__ = (((coll == null))?null:coll);
return (function (){var or__3750__auto__ = (cljs.core._sorted_seq_from[(function (){var G__17677 = x__4394__auto__;
return goog.typeOf(G__17677);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__3738__auto__ = coll;
if(and__3738__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__3738__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__4394__auto__ = (((coll == null))?null:coll);
return (function (){var or__3750__auto__ = (cljs.core._entry_key[(function (){var G__17681 = x__4394__auto__;
return goog.typeOf(G__17681);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._entry_key["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__3738__auto__ = coll;
if(and__3738__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__3738__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__4394__auto__ = (((coll == null))?null:coll);
return (function (){var or__3750__auto__ = (cljs.core._comparator[(function (){var G__17685 = x__4394__auto__;
return goog.typeOf(G__17685);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._comparator["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj17687 = {};
return obj17687;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__3738__auto__ = writer;
if(and__3738__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__3738__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__4394__auto__ = (((writer == null))?null:writer);
return (function (){var or__3750__auto__ = (cljs.core._write[(function (){var G__17691 = x__4394__auto__;
return goog.typeOf(G__17691);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._write["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__3738__auto__ = writer;
if(and__3738__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__3738__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__4394__auto__ = (((writer == null))?null:writer);
return (function (){var or__3750__auto__ = (cljs.core._flush[(function (){var G__17695 = x__4394__auto__;
return goog.typeOf(G__17695);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._flush["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj17697 = {};
return obj17697;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__3738__auto__ = o;
if(and__3738__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__3738__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__4394__auto__ = (((o == null))?null:o);
return (function (){var or__3750__auto__ = (cljs.core._pr_writer[(function (){var G__17701 = x__4394__auto__;
return goog.typeOf(G__17701);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj17703 = {};
return obj17703;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__3738__auto__ = d;
if(and__3738__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__3738__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__4394__auto__ = (((d == null))?null:d);
return (function (){var or__3750__auto__ = (cljs.core._realized_QMARK_[(function (){var G__17707 = x__4394__auto__;
return goog.typeOf(G__17707);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj17709 = {};
return obj17709;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__3738__auto__ = this$;
if(and__3738__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__3738__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__4394__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3750__auto__ = (cljs.core._notify_watches[(function (){var G__17713 = x__4394__auto__;
return goog.typeOf(G__17713);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__3738__auto__ = this$;
if(and__3738__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__3738__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__4394__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3750__auto__ = (cljs.core._add_watch[(function (){var G__17717 = x__4394__auto__;
return goog.typeOf(G__17717);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._add_watch["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__3738__auto__ = this$;
if(and__3738__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__3738__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__4394__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3750__auto__ = (cljs.core._remove_watch[(function (){var G__17721 = x__4394__auto__;
return goog.typeOf(G__17721);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj17723 = {};
return obj17723;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__3738__auto__ = coll;
if(and__3738__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__3738__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__4394__auto__ = (((coll == null))?null:coll);
return (function (){var or__3750__auto__ = (cljs.core._as_transient[(function (){var G__17727 = x__4394__auto__;
return goog.typeOf(G__17727);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._as_transient["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj17729 = {};
return obj17729;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__3738__auto__ = tcoll;
if(and__3738__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__3738__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__4394__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3750__auto__ = (cljs.core._conj_BANG_[(function (){var G__17733 = x__4394__auto__;
return goog.typeOf(G__17733);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__3738__auto__ = tcoll;
if(and__3738__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__3738__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__4394__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3750__auto__ = (cljs.core._persistent_BANG_[(function (){var G__17737 = x__4394__auto__;
return goog.typeOf(G__17737);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj17739 = {};
return obj17739;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__3738__auto__ = tcoll;
if(and__3738__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__3738__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__4394__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3750__auto__ = (cljs.core._assoc_BANG_[(function (){var G__17743 = x__4394__auto__;
return goog.typeOf(G__17743);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj17745 = {};
return obj17745;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__3738__auto__ = tcoll;
if(and__3738__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__3738__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__4394__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3750__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__17749 = x__4394__auto__;
return goog.typeOf(G__17749);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj17751 = {};
return obj17751;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__3738__auto__ = tcoll;
if(and__3738__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__3738__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__4394__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3750__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__17755 = x__4394__auto__;
return goog.typeOf(G__17755);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__3738__auto__ = tcoll;
if(and__3738__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__3738__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__4394__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3750__auto__ = (cljs.core._pop_BANG_[(function (){var G__17759 = x__4394__auto__;
return goog.typeOf(G__17759);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj17761 = {};
return obj17761;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__3738__auto__ = tcoll;
if(and__3738__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__3738__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__4394__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3750__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__17765 = x__4394__auto__;
return goog.typeOf(G__17765);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj17767 = {};
return obj17767;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__3738__auto__ = x;
if(and__3738__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__3738__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__4394__auto__ = (((x == null))?null:x);
return (function (){var or__3750__auto__ = (cljs.core._compare[(function (){var G__17771 = x__4394__auto__;
return goog.typeOf(G__17771);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._compare["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj17773 = {};
return obj17773;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__3738__auto__ = coll;
if(and__3738__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__3738__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__4394__auto__ = (((coll == null))?null:coll);
return (function (){var or__3750__auto__ = (cljs.core._drop_first[(function (){var G__17777 = x__4394__auto__;
return goog.typeOf(G__17777);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._drop_first["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj17779 = {};
return obj17779;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__3738__auto__ = coll;
if(and__3738__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__3738__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__4394__auto__ = (((coll == null))?null:coll);
return (function (){var or__3750__auto__ = (cljs.core._chunked_first[(function (){var G__17783 = x__4394__auto__;
return goog.typeOf(G__17783);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__3738__auto__ = coll;
if(and__3738__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__3738__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__4394__auto__ = (((coll == null))?null:coll);
return (function (){var or__3750__auto__ = (cljs.core._chunked_rest[(function (){var G__17787 = x__4394__auto__;
return goog.typeOf(G__17787);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj17789 = {};
return obj17789;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__3738__auto__ = coll;
if(and__3738__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__3738__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__4394__auto__ = (((coll == null))?null:coll);
return (function (){var or__3750__auto__ = (cljs.core._chunked_next[(function (){var G__17793 = x__4394__auto__;
return goog.typeOf(G__17793);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj17795 = {};
return obj17795;
})();

cljs.core._name = (function _name(x){
if((function (){var and__3738__auto__ = x;
if(and__3738__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__3738__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__4394__auto__ = (((x == null))?null:x);
return (function (){var or__3750__auto__ = (cljs.core._name[(function (){var G__17799 = x__4394__auto__;
return goog.typeOf(G__17799);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._name["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__3738__auto__ = x;
if(and__3738__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__3738__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__4394__auto__ = (((x == null))?null:x);
return (function (){var or__3750__auto__ = (cljs.core._namespace[(function (){var G__17803 = x__4394__auto__;
return goog.typeOf(G__17803);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._namespace["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj17805 = {};
return obj17805;
})();


cljs.core.IReset = (function (){var obj17807 = {};
return obj17807;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__3738__auto__ = o;
if(and__3738__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__3738__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__4394__auto__ = (((o == null))?null:o);
return (function (){var or__3750__auto__ = (cljs.core._reset_BANG_[(function (){var G__17811 = x__4394__auto__;
return goog.typeOf(G__17811);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj17813 = {};
return obj17813;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__3738__auto__ = o;
if(and__3738__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__3738__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__4394__auto__ = (((o == null))?null:o);
return (function (){var or__3750__auto__ = (cljs.core._swap_BANG_[(function (){var G__17823 = x__4394__auto__;
return goog.typeOf(G__17823);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__3738__auto__ = o;
if(and__3738__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__3738__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__4394__auto__ = (((o == null))?null:o);
return (function (){var or__3750__auto__ = (cljs.core._swap_BANG_[(function (){var G__17825 = x__4394__auto__;
return goog.typeOf(G__17825);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__3738__auto__ = o;
if(and__3738__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__3738__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__4394__auto__ = (((o == null))?null:o);
return (function (){var or__3750__auto__ = (cljs.core._swap_BANG_[(function (){var G__17827 = x__4394__auto__;
return goog.typeOf(G__17827);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__3738__auto__ = o;
if(and__3738__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__3738__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__4394__auto__ = (((o == null))?null:o);
return (function (){var or__3750__auto__ = (cljs.core._swap_BANG_[(function (){var G__17829 = x__4394__auto__;
return goog.typeOf(G__17829);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj17831 = {};
return obj17831;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__3738__auto__ = o;
if(and__3738__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__3738__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__4394__auto__ = (((o == null))?null:o);
return (function (){var or__3750__auto__ = (cljs.core._vreset_BANG_[(function (){var G__17835 = x__4394__auto__;
return goog.typeOf(G__17835);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj17837 = {};
return obj17837;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__3738__auto__ = coll;
if(and__3738__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__3738__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__4394__auto__ = (((coll == null))?null:coll);
return (function (){var or__3750__auto__ = (cljs.core._iterator[(function (){var G__17841 = x__4394__auto__;
return goog.typeOf(G__17841);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._iterator["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__17844 = (4294967295);
var G__17845 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__17844,G__17845) : Math.imul.call(null,G__17844,G__17845));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__17848 = a;
var G__17849 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__17848,G__17849) : Math.imul.call(null,G__17848,G__17849));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__17850 = (i + (2));
var G__17851 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__17850;
h1 = G__17851;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj17853 = {};
return obj17853;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__17854 = (i + (1));
var G__17855 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__17854;
hash = G__17855;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj17859 = {};
return obj17859;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__17862 = o;
if(G__17862){
var bit__4424__auto__ = (G__17862.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__4424__auto__) || (G__17862.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__17863 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__17863) : Math.floor.call(null,G__17863));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3738__auto__ = cljs.core.not(a.ns);
if(and__3738__auto__){
return b.ns;
} else {
return and__3738__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__17870 = a.ns;
var G__17871 = b.ns;
return goog.array.defaultCompare(G__17870,G__17871);
})();
if(((0) === nsc)){
var G__17872 = a.name;
var G__17873 = b.name;
return goog.array.defaultCompare(G__17872,G__17873);
} else {
return nsc;
}
}
} else {
var G__17874 = a.name;
var G__17875 = b.name;
return goog.array.defaultCompare(G__17874,G__17875);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__4171__auto__ = self__._hash;
if(!((h__4171__auto__ == null))){
return h__4171__auto__;
} else {
var h__4171__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__4171__auto____$1;

return h__4171__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__17877 = null;
var G__17877__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__17877__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__17877 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__17877__2.call(this,self__,coll);
case 3:
return G__17877__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17877.cljs$core$IFn$_invoke$arity$2 = G__17877__2;
G__17877.cljs$core$IFn$_invoke$arity$3 = G__17877__3;
return G__17877;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args17876){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args17876)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__17925 = null;
var G__17925__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__17925__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__17925__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__17925__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__17925__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__17925__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__17925__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__17925__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__17925__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__17925__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__17925__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__17925__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__17925__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__17925__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__17925__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__17925__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__17925__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__17925__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__17925__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__17925__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__17925__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__17925__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__17881 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__17882 = a;
var G__17883 = b;
var G__17884 = c;
var G__17885 = d;
var G__17886 = e;
var G__17887 = f;
var G__17888 = g;
var G__17889 = h;
var G__17890 = i;
var G__17891 = j;
var G__17892 = k;
var G__17893 = l;
var G__17894 = m;
var G__17895 = n;
var G__17896 = o;
var G__17897 = p;
var G__17898 = q;
var G__17899 = r;
var G__17900 = s;
var G__17901 = t;
var G__17902 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__17881,G__17882,G__17883,G__17884,G__17885,G__17886,G__17887,G__17888,G__17889,G__17890,G__17891,G__17892,G__17893,G__17894,G__17895,G__17896,G__17897,G__17898,G__17899,G__17900,G__17901,G__17902) : cljs.core.apply.call(null,G__17881,G__17882,G__17883,G__17884,G__17885,G__17886,G__17887,G__17888,G__17889,G__17890,G__17891,G__17892,G__17893,G__17894,G__17895,G__17896,G__17897,G__17898,G__17899,G__17900,G__17901,G__17902));
});
G__17925 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__17925__1.call(this,self__);
case 2:
return G__17925__2.call(this,self__,a);
case 3:
return G__17925__3.call(this,self__,a,b);
case 4:
return G__17925__4.call(this,self__,a,b,c);
case 5:
return G__17925__5.call(this,self__,a,b,c,d);
case 6:
return G__17925__6.call(this,self__,a,b,c,d,e);
case 7:
return G__17925__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__17925__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__17925__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__17925__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__17925__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__17925__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__17925__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__17925__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__17925__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__17925__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__17925__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__17925__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__17925__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__17925__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__17925__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__17925__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17925.cljs$core$IFn$_invoke$arity$1 = G__17925__1;
G__17925.cljs$core$IFn$_invoke$arity$2 = G__17925__2;
G__17925.cljs$core$IFn$_invoke$arity$3 = G__17925__3;
G__17925.cljs$core$IFn$_invoke$arity$4 = G__17925__4;
G__17925.cljs$core$IFn$_invoke$arity$5 = G__17925__5;
G__17925.cljs$core$IFn$_invoke$arity$6 = G__17925__6;
G__17925.cljs$core$IFn$_invoke$arity$7 = G__17925__7;
G__17925.cljs$core$IFn$_invoke$arity$8 = G__17925__8;
G__17925.cljs$core$IFn$_invoke$arity$9 = G__17925__9;
G__17925.cljs$core$IFn$_invoke$arity$10 = G__17925__10;
G__17925.cljs$core$IFn$_invoke$arity$11 = G__17925__11;
G__17925.cljs$core$IFn$_invoke$arity$12 = G__17925__12;
G__17925.cljs$core$IFn$_invoke$arity$13 = G__17925__13;
G__17925.cljs$core$IFn$_invoke$arity$14 = G__17925__14;
G__17925.cljs$core$IFn$_invoke$arity$15 = G__17925__15;
G__17925.cljs$core$IFn$_invoke$arity$16 = G__17925__16;
G__17925.cljs$core$IFn$_invoke$arity$17 = G__17925__17;
G__17925.cljs$core$IFn$_invoke$arity$18 = G__17925__18;
G__17925.cljs$core$IFn$_invoke$arity$19 = G__17925__19;
G__17925.cljs$core$IFn$_invoke$arity$20 = G__17925__20;
G__17925.cljs$core$IFn$_invoke$arity$21 = G__17925__21;
G__17925.cljs$core$IFn$_invoke$arity$22 = G__17925__22;
return G__17925;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args17880){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args17880)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__17903 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__17904 = a;
var G__17905 = b;
var G__17906 = c;
var G__17907 = d;
var G__17908 = e;
var G__17909 = f;
var G__17910 = g;
var G__17911 = h;
var G__17912 = i;
var G__17913 = j;
var G__17914 = k;
var G__17915 = l;
var G__17916 = m;
var G__17917 = n;
var G__17918 = o;
var G__17919 = p;
var G__17920 = q;
var G__17921 = r;
var G__17922 = s;
var G__17923 = t;
var G__17924 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__17903,G__17904,G__17905,G__17906,G__17907,G__17908,G__17909,G__17910,G__17911,G__17912,G__17913,G__17914,G__17915,G__17916,G__17917,G__17918,G__17919,G__17920,G__17921,G__17922,G__17923,G__17924) : cljs.core.apply.call(null,G__17903,G__17904,G__17905,G__17906,G__17907,G__17908,G__17909,G__17910,G__17911,G__17912,G__17913,G__17914,G__17915,G__17916,G__17917,G__17918,G__17919,G__17920,G__17921,G__17922,G__17923,G__17924));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__17927 = x;
if(G__17927){
var bit__4431__auto__ = null;
if(cljs.core.truth_((function (){var or__3750__auto__ = bit__4431__auto__;
if(cljs.core.truth_(or__3750__auto__)){
return or__3750__auto__;
} else {
return G__17927.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__17927.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__17927);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__17927);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__17929 = value;
if(G__17929){
var bit__4431__auto__ = (G__17929.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__4431__auto__) || (G__17929.cljs$core$ICloneable$)){
return true;
} else {
if((!G__17929.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__17929);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__17929);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__17931 = coll;
if(G__17931){
var bit__4424__auto__ = (G__17931.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4424__auto__) || (G__17931.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__17933 = coll;
if(G__17933){
var bit__4424__auto__ = (G__17933.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4424__auto__) || (G__17933.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__17935 = coll;
if(G__17935){
var bit__4424__auto__ = (G__17935.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4424__auto__) || (G__17935.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__17937 = coll;
if(G__17937){
var bit__4424__auto__ = (G__17937.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4424__auto__) || (G__17937.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__17942__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__17943 = y;
var G__17944 = cljs.core.first(more);
var G__17945 = cljs.core.next(more);
x = G__17943;
y = G__17944;
more = G__17945;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__17942 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__17946__i = 0, G__17946__a = new Array(arguments.length -  2);
while (G__17946__i < G__17946__a.length) {G__17946__a[G__17946__i] = arguments[G__17946__i + 2]; ++G__17946__i;}
  more = new cljs.core.IndexedSeq(G__17946__a,0);
} 
return G__17942__delegate.call(this,x,y,more);};
G__17942.cljs$lang$maxFixedArity = 2;
G__17942.cljs$lang$applyTo = (function (arglist__17947){
var x = cljs.core.first(arglist__17947);
arglist__17947 = cljs.core.next(arglist__17947);
var y = cljs.core.first(arglist__17947);
var more = cljs.core.rest(arglist__17947);
return G__17942__delegate(x,y,more);
});
G__17942.cljs$core$IFn$_invoke$arity$variadic = G__17942__delegate;
return G__17942;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__17948 = null;
if (arguments.length > 2) {
var G__17949__i = 0, G__17949__a = new Array(arguments.length -  2);
while (G__17949__i < G__17949__a.length) {G__17949__a[G__17949__i] = arguments[G__17949__i + 2]; ++G__17949__i;}
G__17948 = new cljs.core.IndexedSeq(G__17949__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__17948);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__17950 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__17950) : cljs.core.es6_iterator_seq.call(null,G__17950));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__17951 = (n + (1));
var G__17952 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__17953 = cljs.core.next(coll__$1);
n = G__17951;
hash_code = G__17952;
coll__$1 = G__17953;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__17954 = (n + (1));
var G__17955 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__17956 = cljs.core.next(coll__$1);
n = G__17954;
hash_code = G__17955;
coll__$1 = G__17956;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__17957 = o;
return goog.getUid(G__17957);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__17959 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17959) : cljs.core.deref.call(null,G__17959));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__17966 = val;
var G__17967 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17966,G__17967) : f.call(null,G__17966,G__17967));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__17972 = nval;
var G__17973 = (n + (1));
val = G__17972;
n = G__17973;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__17968 = val__$1;
var G__17969 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17968,G__17969) : f.call(null,G__17968,G__17969));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__17974 = nval;
var G__17975 = (n + (1));
val__$1 = G__17974;
n = G__17975;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__17970 = val__$1;
var G__17971 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17970,G__17971) : f.call(null,G__17970,G__17971));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__17976 = nval;
var G__17977 = (n + (1));
val__$1 = G__17976;
n = G__17977;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__17984 = val;
var G__17985 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17984,G__17985) : f.call(null,G__17984,G__17985));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__17990 = nval;
var G__17991 = (n + (1));
val = G__17990;
n = G__17991;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__17986 = val__$1;
var G__17987 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17986,G__17987) : f.call(null,G__17986,G__17987));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__17992 = nval;
var G__17993 = (n + (1));
val__$1 = G__17992;
n = G__17993;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__17988 = val__$1;
var G__17989 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17988,G__17989) : f.call(null,G__17988,G__17989));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__17994 = nval;
var G__17995 = (n + (1));
val__$1 = G__17994;
n = G__17995;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__17997 = x;
if(G__17997){
var bit__4431__auto__ = (G__17997.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4431__auto__) || (G__17997.cljs$core$ICounted$)){
return true;
} else {
if((!G__17997.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__17997);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__17997);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__17999 = x;
if(G__17999){
var bit__4431__auto__ = (G__17999.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4431__auto__) || (G__17999.cljs$core$IIndexed$)){
return true;
} else {
if((!G__17999.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__17999);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__17999);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__18000 = coll__$1;
var G__18001 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__18000,G__18001) : cljs.core.equiv_sequential.call(null,G__18000,G__18001));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__18002 = o;
var G__18003 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__18002,G__18003) : cljs.core.cons.call(null,G__18002,G__18003));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4728__auto__ = this;
return cljs.core.es6_iterator(this__4728__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__18006 = coll__$1;
var G__18007 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__18006,G__18007) : cljs.core.equiv_sequential.call(null,G__18006,G__18007));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__18008 = cljs.core.List.EMPTY;
var G__18009 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__18008,G__18009) : cljs.core.with_meta.call(null,G__18008,G__18009));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__18010 = f;
var G__18011 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__18010,G__18011) : cljs.core.seq_reduce.call(null,G__18010,G__18011));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__18012 = f;
var G__18013 = start;
var G__18014 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__18012,G__18013,G__18014) : cljs.core.seq_reduce.call(null,G__18012,G__18013,G__18014));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__18015 = o;
var G__18016 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__18015,G__18016) : cljs.core.cons.call(null,G__18015,G__18016));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4728__auto__ = this;
return cljs.core.es6_iterator(this__4728__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__18017 = sn;
s = G__18017;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__18022__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__18023 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__18024 = cljs.core.first(xs);
var G__18025 = cljs.core.next(xs);
coll = G__18023;
x = G__18024;
xs = G__18025;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__18022 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__18026__i = 0, G__18026__a = new Array(arguments.length -  2);
while (G__18026__i < G__18026__a.length) {G__18026__a[G__18026__i] = arguments[G__18026__i + 2]; ++G__18026__i;}
  xs = new cljs.core.IndexedSeq(G__18026__a,0);
} 
return G__18022__delegate.call(this,coll,x,xs);};
G__18022.cljs$lang$maxFixedArity = 2;
G__18022.cljs$lang$applyTo = (function (arglist__18027){
var coll = cljs.core.first(arglist__18027);
arglist__18027 = cljs.core.next(arglist__18027);
var x = cljs.core.first(arglist__18027);
var xs = cljs.core.rest(arglist__18027);
return G__18022__delegate(coll,x,xs);
});
G__18022.cljs$core$IFn$_invoke$arity$variadic = G__18022__delegate;
return G__18022;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__18028 = null;
if (arguments.length > 2) {
var G__18029__i = 0, G__18029__a = new Array(arguments.length -  2);
while (G__18029__i < G__18029__a.length) {G__18029__a[G__18029__i] = arguments[G__18029__i + 2]; ++G__18029__i;}
G__18028 = new cljs.core.IndexedSeq(G__18029__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__18028);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__18030 = cljs.core.next(s);
var G__18031 = (acc + (1));
s = G__18030;
acc = G__18031;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__18033 = coll;
if(G__18033){
var bit__4424__auto__ = (G__18033.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4424__auto__) || (G__18033.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__18034 = cljs.core.next(coll);
var G__18035 = (n - (1));
coll = G__18034;
n = G__18035;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__18036 = cljs.core.next(coll);
var G__18037 = (n - (1));
var G__18038 = not_found;
coll = G__18036;
n = G__18037;
not_found = G__18038;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__18043 = coll;
if(G__18043){
var bit__4424__auto__ = (G__18043.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4424__auto__) || (G__18043.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__18044 = coll;
if(G__18044){
var bit__4431__auto__ = (G__18044.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4431__auto__) || (G__18044.cljs$core$ISeq$)){
return true;
} else {
if((!G__18044.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__18044);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__18044);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__18045 = coll;
if(G__18045){
var bit__4424__auto__ = (G__18045.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4424__auto__) || (G__18045.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__18046 = coll;
if(G__18046){
var bit__4431__auto__ = (G__18046.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4431__auto__) || (G__18046.cljs$core$ISeq$)){
return true;
} else {
if((!G__18046.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__18046);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__18046);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__18047 = (n__$1 - (1));
var G__18048 = cljs.core.rest(xs);
n__$1 = G__18047;
xs = G__18048;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__18051 = o;
if(G__18051){
var bit__4424__auto__ = (G__18051.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4424__auto__) || (G__18051.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__18052 = o;
if(G__18052){
var bit__4424__auto__ = (G__18052.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4424__auto__) || (G__18052.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__18056__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__18057 = ret;
var G__18058 = cljs.core.first(kvs);
var G__18059 = cljs.core.second(kvs);
var G__18060 = cljs.core.nnext(kvs);
coll = G__18057;
k = G__18058;
v = G__18059;
kvs = G__18060;
continue;
} else {
return ret;
}
break;
}
};
var G__18056 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__18061__i = 0, G__18061__a = new Array(arguments.length -  3);
while (G__18061__i < G__18061__a.length) {G__18061__a[G__18061__i] = arguments[G__18061__i + 3]; ++G__18061__i;}
  kvs = new cljs.core.IndexedSeq(G__18061__a,0);
} 
return G__18056__delegate.call(this,coll,k,v,kvs);};
G__18056.cljs$lang$maxFixedArity = 3;
G__18056.cljs$lang$applyTo = (function (arglist__18062){
var coll = cljs.core.first(arglist__18062);
arglist__18062 = cljs.core.next(arglist__18062);
var k = cljs.core.first(arglist__18062);
arglist__18062 = cljs.core.next(arglist__18062);
var v = cljs.core.first(arglist__18062);
var kvs = cljs.core.rest(arglist__18062);
return G__18056__delegate(coll,k,v,kvs);
});
G__18056.cljs$core$IFn$_invoke$arity$variadic = G__18056__delegate;
return G__18056;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__18063 = null;
if (arguments.length > 3) {
var G__18064__i = 0, G__18064__a = new Array(arguments.length -  3);
while (G__18064__i < G__18064__a.length) {G__18064__a[G__18064__i] = arguments[G__18064__i + 3]; ++G__18064__i;}
G__18063 = new cljs.core.IndexedSeq(G__18064__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__18063);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__18067__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__18068 = ret;
var G__18069 = cljs.core.first(ks);
var G__18070 = cljs.core.next(ks);
coll = G__18068;
k = G__18069;
ks = G__18070;
continue;
} else {
return ret;
}
}
break;
}
};
var G__18067 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__18071__i = 0, G__18071__a = new Array(arguments.length -  2);
while (G__18071__i < G__18071__a.length) {G__18071__a[G__18071__i] = arguments[G__18071__i + 2]; ++G__18071__i;}
  ks = new cljs.core.IndexedSeq(G__18071__a,0);
} 
return G__18067__delegate.call(this,coll,k,ks);};
G__18067.cljs$lang$maxFixedArity = 2;
G__18067.cljs$lang$applyTo = (function (arglist__18072){
var coll = cljs.core.first(arglist__18072);
arglist__18072 = cljs.core.next(arglist__18072);
var k = cljs.core.first(arglist__18072);
var ks = cljs.core.rest(arglist__18072);
return G__18067__delegate(coll,k,ks);
});
G__18067.cljs$core$IFn$_invoke$arity$variadic = G__18067__delegate;
return G__18067;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__18073 = null;
if (arguments.length > 2) {
var G__18074__i = 0, G__18074__a = new Array(arguments.length -  2);
while (G__18074__i < G__18074__a.length) {G__18074__a[G__18074__i] = arguments[G__18074__i + 2]; ++G__18074__i;}
G__18073 = new cljs.core.IndexedSeq(G__18074__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__18073);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__3750__auto__ = (function (){var G__18079 = f;
return goog.isFunction(G__18079);
})();
if(cljs.core.truth_(or__3750__auto__)){
return or__3750__auto__;
} else {
var G__18080 = f;
if(G__18080){
var bit__4431__auto__ = null;
if(cljs.core.truth_((function (){var or__3750__auto____$1 = bit__4431__auto__;
if(cljs.core.truth_(or__3750__auto____$1)){
return or__3750__auto____$1;
} else {
return G__18080.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__18080.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__18080);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__18080);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__18546 = null;
var G__18546__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__18546__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18082 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__18082) : self__.afn.call(null,G__18082));
});
var G__18546__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18083 = a;
var G__18084 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__18083,G__18084) : self__.afn.call(null,G__18083,G__18084));
});
var G__18546__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18085 = a;
var G__18086 = b;
var G__18087 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__18085,G__18086,G__18087) : self__.afn.call(null,G__18085,G__18086,G__18087));
});
var G__18546__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18088 = a;
var G__18089 = b;
var G__18090 = c;
var G__18091 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__18088,G__18089,G__18090,G__18091) : self__.afn.call(null,G__18088,G__18089,G__18090,G__18091));
});
var G__18546__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18092 = a;
var G__18093 = b;
var G__18094 = c;
var G__18095 = d;
var G__18096 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__18092,G__18093,G__18094,G__18095,G__18096) : self__.afn.call(null,G__18092,G__18093,G__18094,G__18095,G__18096));
});
var G__18546__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18097 = a;
var G__18098 = b;
var G__18099 = c;
var G__18100 = d;
var G__18101 = e;
var G__18102 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__18097,G__18098,G__18099,G__18100,G__18101,G__18102) : self__.afn.call(null,G__18097,G__18098,G__18099,G__18100,G__18101,G__18102));
});
var G__18546__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18103 = a;
var G__18104 = b;
var G__18105 = c;
var G__18106 = d;
var G__18107 = e;
var G__18108 = f;
var G__18109 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__18103,G__18104,G__18105,G__18106,G__18107,G__18108,G__18109) : self__.afn.call(null,G__18103,G__18104,G__18105,G__18106,G__18107,G__18108,G__18109));
});
var G__18546__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18110 = a;
var G__18111 = b;
var G__18112 = c;
var G__18113 = d;
var G__18114 = e;
var G__18115 = f;
var G__18116 = g;
var G__18117 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__18110,G__18111,G__18112,G__18113,G__18114,G__18115,G__18116,G__18117) : self__.afn.call(null,G__18110,G__18111,G__18112,G__18113,G__18114,G__18115,G__18116,G__18117));
});
var G__18546__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18118 = a;
var G__18119 = b;
var G__18120 = c;
var G__18121 = d;
var G__18122 = e;
var G__18123 = f;
var G__18124 = g;
var G__18125 = h;
var G__18126 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__18118,G__18119,G__18120,G__18121,G__18122,G__18123,G__18124,G__18125,G__18126) : self__.afn.call(null,G__18118,G__18119,G__18120,G__18121,G__18122,G__18123,G__18124,G__18125,G__18126));
});
var G__18546__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18127 = a;
var G__18128 = b;
var G__18129 = c;
var G__18130 = d;
var G__18131 = e;
var G__18132 = f;
var G__18133 = g;
var G__18134 = h;
var G__18135 = i;
var G__18136 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__18127,G__18128,G__18129,G__18130,G__18131,G__18132,G__18133,G__18134,G__18135,G__18136) : self__.afn.call(null,G__18127,G__18128,G__18129,G__18130,G__18131,G__18132,G__18133,G__18134,G__18135,G__18136));
});
var G__18546__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18137 = a;
var G__18138 = b;
var G__18139 = c;
var G__18140 = d;
var G__18141 = e;
var G__18142 = f;
var G__18143 = g;
var G__18144 = h;
var G__18145 = i;
var G__18146 = j;
var G__18147 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__18137,G__18138,G__18139,G__18140,G__18141,G__18142,G__18143,G__18144,G__18145,G__18146,G__18147) : self__.afn.call(null,G__18137,G__18138,G__18139,G__18140,G__18141,G__18142,G__18143,G__18144,G__18145,G__18146,G__18147));
});
var G__18546__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18148 = a;
var G__18149 = b;
var G__18150 = c;
var G__18151 = d;
var G__18152 = e;
var G__18153 = f;
var G__18154 = g;
var G__18155 = h;
var G__18156 = i;
var G__18157 = j;
var G__18158 = k;
var G__18159 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__18148,G__18149,G__18150,G__18151,G__18152,G__18153,G__18154,G__18155,G__18156,G__18157,G__18158,G__18159) : self__.afn.call(null,G__18148,G__18149,G__18150,G__18151,G__18152,G__18153,G__18154,G__18155,G__18156,G__18157,G__18158,G__18159));
});
var G__18546__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18160 = a;
var G__18161 = b;
var G__18162 = c;
var G__18163 = d;
var G__18164 = e;
var G__18165 = f;
var G__18166 = g;
var G__18167 = h;
var G__18168 = i;
var G__18169 = j;
var G__18170 = k;
var G__18171 = l;
var G__18172 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__18160,G__18161,G__18162,G__18163,G__18164,G__18165,G__18166,G__18167,G__18168,G__18169,G__18170,G__18171,G__18172) : self__.afn.call(null,G__18160,G__18161,G__18162,G__18163,G__18164,G__18165,G__18166,G__18167,G__18168,G__18169,G__18170,G__18171,G__18172));
});
var G__18546__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18173 = a;
var G__18174 = b;
var G__18175 = c;
var G__18176 = d;
var G__18177 = e;
var G__18178 = f;
var G__18179 = g;
var G__18180 = h;
var G__18181 = i;
var G__18182 = j;
var G__18183 = k;
var G__18184 = l;
var G__18185 = m;
var G__18186 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__18173,G__18174,G__18175,G__18176,G__18177,G__18178,G__18179,G__18180,G__18181,G__18182,G__18183,G__18184,G__18185,G__18186) : self__.afn.call(null,G__18173,G__18174,G__18175,G__18176,G__18177,G__18178,G__18179,G__18180,G__18181,G__18182,G__18183,G__18184,G__18185,G__18186));
});
var G__18546__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18187 = a;
var G__18188 = b;
var G__18189 = c;
var G__18190 = d;
var G__18191 = e;
var G__18192 = f;
var G__18193 = g;
var G__18194 = h;
var G__18195 = i;
var G__18196 = j;
var G__18197 = k;
var G__18198 = l;
var G__18199 = m;
var G__18200 = n;
var G__18201 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__18187,G__18188,G__18189,G__18190,G__18191,G__18192,G__18193,G__18194,G__18195,G__18196,G__18197,G__18198,G__18199,G__18200,G__18201) : self__.afn.call(null,G__18187,G__18188,G__18189,G__18190,G__18191,G__18192,G__18193,G__18194,G__18195,G__18196,G__18197,G__18198,G__18199,G__18200,G__18201));
});
var G__18546__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18202 = a;
var G__18203 = b;
var G__18204 = c;
var G__18205 = d;
var G__18206 = e;
var G__18207 = f;
var G__18208 = g;
var G__18209 = h;
var G__18210 = i;
var G__18211 = j;
var G__18212 = k;
var G__18213 = l;
var G__18214 = m;
var G__18215 = n;
var G__18216 = o;
var G__18217 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__18202,G__18203,G__18204,G__18205,G__18206,G__18207,G__18208,G__18209,G__18210,G__18211,G__18212,G__18213,G__18214,G__18215,G__18216,G__18217) : self__.afn.call(null,G__18202,G__18203,G__18204,G__18205,G__18206,G__18207,G__18208,G__18209,G__18210,G__18211,G__18212,G__18213,G__18214,G__18215,G__18216,G__18217));
});
var G__18546__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18218 = a;
var G__18219 = b;
var G__18220 = c;
var G__18221 = d;
var G__18222 = e;
var G__18223 = f;
var G__18224 = g;
var G__18225 = h;
var G__18226 = i;
var G__18227 = j;
var G__18228 = k;
var G__18229 = l;
var G__18230 = m;
var G__18231 = n;
var G__18232 = o;
var G__18233 = p;
var G__18234 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__18218,G__18219,G__18220,G__18221,G__18222,G__18223,G__18224,G__18225,G__18226,G__18227,G__18228,G__18229,G__18230,G__18231,G__18232,G__18233,G__18234) : self__.afn.call(null,G__18218,G__18219,G__18220,G__18221,G__18222,G__18223,G__18224,G__18225,G__18226,G__18227,G__18228,G__18229,G__18230,G__18231,G__18232,G__18233,G__18234));
});
var G__18546__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18235 = a;
var G__18236 = b;
var G__18237 = c;
var G__18238 = d;
var G__18239 = e;
var G__18240 = f;
var G__18241 = g;
var G__18242 = h;
var G__18243 = i;
var G__18244 = j;
var G__18245 = k;
var G__18246 = l;
var G__18247 = m;
var G__18248 = n;
var G__18249 = o;
var G__18250 = p;
var G__18251 = q;
var G__18252 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__18235,G__18236,G__18237,G__18238,G__18239,G__18240,G__18241,G__18242,G__18243,G__18244,G__18245,G__18246,G__18247,G__18248,G__18249,G__18250,G__18251,G__18252) : self__.afn.call(null,G__18235,G__18236,G__18237,G__18238,G__18239,G__18240,G__18241,G__18242,G__18243,G__18244,G__18245,G__18246,G__18247,G__18248,G__18249,G__18250,G__18251,G__18252));
});
var G__18546__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18253 = a;
var G__18254 = b;
var G__18255 = c;
var G__18256 = d;
var G__18257 = e;
var G__18258 = f;
var G__18259 = g;
var G__18260 = h;
var G__18261 = i;
var G__18262 = j;
var G__18263 = k;
var G__18264 = l;
var G__18265 = m;
var G__18266 = n;
var G__18267 = o;
var G__18268 = p;
var G__18269 = q;
var G__18270 = r;
var G__18271 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__18253,G__18254,G__18255,G__18256,G__18257,G__18258,G__18259,G__18260,G__18261,G__18262,G__18263,G__18264,G__18265,G__18266,G__18267,G__18268,G__18269,G__18270,G__18271) : self__.afn.call(null,G__18253,G__18254,G__18255,G__18256,G__18257,G__18258,G__18259,G__18260,G__18261,G__18262,G__18263,G__18264,G__18265,G__18266,G__18267,G__18268,G__18269,G__18270,G__18271));
});
var G__18546__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18272 = a;
var G__18273 = b;
var G__18274 = c;
var G__18275 = d;
var G__18276 = e;
var G__18277 = f;
var G__18278 = g;
var G__18279 = h;
var G__18280 = i;
var G__18281 = j;
var G__18282 = k;
var G__18283 = l;
var G__18284 = m;
var G__18285 = n;
var G__18286 = o;
var G__18287 = p;
var G__18288 = q;
var G__18289 = r;
var G__18290 = s;
var G__18291 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__18272,G__18273,G__18274,G__18275,G__18276,G__18277,G__18278,G__18279,G__18280,G__18281,G__18282,G__18283,G__18284,G__18285,G__18286,G__18287,G__18288,G__18289,G__18290,G__18291) : self__.afn.call(null,G__18272,G__18273,G__18274,G__18275,G__18276,G__18277,G__18278,G__18279,G__18280,G__18281,G__18282,G__18283,G__18284,G__18285,G__18286,G__18287,G__18288,G__18289,G__18290,G__18291));
});
var G__18546__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18292 = self__.afn;
var G__18293 = a;
var G__18294 = b;
var G__18295 = c;
var G__18296 = d;
var G__18297 = e;
var G__18298 = f;
var G__18299 = g;
var G__18300 = h;
var G__18301 = i;
var G__18302 = j;
var G__18303 = k;
var G__18304 = l;
var G__18305 = m;
var G__18306 = n;
var G__18307 = o;
var G__18308 = p;
var G__18309 = q;
var G__18310 = r;
var G__18311 = s;
var G__18312 = t;
var G__18313 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__18292,G__18293,G__18294,G__18295,G__18296,G__18297,G__18298,G__18299,G__18300,G__18301,G__18302,G__18303,G__18304,G__18305,G__18306,G__18307,G__18308,G__18309,G__18310,G__18311,G__18312,G__18313) : cljs.core.apply.call(null,G__18292,G__18293,G__18294,G__18295,G__18296,G__18297,G__18298,G__18299,G__18300,G__18301,G__18302,G__18303,G__18304,G__18305,G__18306,G__18307,G__18308,G__18309,G__18310,G__18311,G__18312,G__18313));
});
G__18546 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__18546__1.call(this,self__);
case 2:
return G__18546__2.call(this,self__,a);
case 3:
return G__18546__3.call(this,self__,a,b);
case 4:
return G__18546__4.call(this,self__,a,b,c);
case 5:
return G__18546__5.call(this,self__,a,b,c,d);
case 6:
return G__18546__6.call(this,self__,a,b,c,d,e);
case 7:
return G__18546__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__18546__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__18546__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__18546__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__18546__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__18546__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__18546__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__18546__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__18546__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__18546__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__18546__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__18546__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__18546__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__18546__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__18546__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__18546__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__18546.cljs$core$IFn$_invoke$arity$1 = G__18546__1;
G__18546.cljs$core$IFn$_invoke$arity$2 = G__18546__2;
G__18546.cljs$core$IFn$_invoke$arity$3 = G__18546__3;
G__18546.cljs$core$IFn$_invoke$arity$4 = G__18546__4;
G__18546.cljs$core$IFn$_invoke$arity$5 = G__18546__5;
G__18546.cljs$core$IFn$_invoke$arity$6 = G__18546__6;
G__18546.cljs$core$IFn$_invoke$arity$7 = G__18546__7;
G__18546.cljs$core$IFn$_invoke$arity$8 = G__18546__8;
G__18546.cljs$core$IFn$_invoke$arity$9 = G__18546__9;
G__18546.cljs$core$IFn$_invoke$arity$10 = G__18546__10;
G__18546.cljs$core$IFn$_invoke$arity$11 = G__18546__11;
G__18546.cljs$core$IFn$_invoke$arity$12 = G__18546__12;
G__18546.cljs$core$IFn$_invoke$arity$13 = G__18546__13;
G__18546.cljs$core$IFn$_invoke$arity$14 = G__18546__14;
G__18546.cljs$core$IFn$_invoke$arity$15 = G__18546__15;
G__18546.cljs$core$IFn$_invoke$arity$16 = G__18546__16;
G__18546.cljs$core$IFn$_invoke$arity$17 = G__18546__17;
G__18546.cljs$core$IFn$_invoke$arity$18 = G__18546__18;
G__18546.cljs$core$IFn$_invoke$arity$19 = G__18546__19;
G__18546.cljs$core$IFn$_invoke$arity$20 = G__18546__20;
G__18546.cljs$core$IFn$_invoke$arity$21 = G__18546__21;
G__18546.cljs$core$IFn$_invoke$arity$22 = G__18546__22;
return G__18546;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args18081){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args18081)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__18314 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__18314) : self__.afn.call(null,G__18314));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__18315 = a;
var G__18316 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__18315,G__18316) : self__.afn.call(null,G__18315,G__18316));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__18317 = a;
var G__18318 = b;
var G__18319 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__18317,G__18318,G__18319) : self__.afn.call(null,G__18317,G__18318,G__18319));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__18320 = a;
var G__18321 = b;
var G__18322 = c;
var G__18323 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__18320,G__18321,G__18322,G__18323) : self__.afn.call(null,G__18320,G__18321,G__18322,G__18323));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__18324 = a;
var G__18325 = b;
var G__18326 = c;
var G__18327 = d;
var G__18328 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__18324,G__18325,G__18326,G__18327,G__18328) : self__.afn.call(null,G__18324,G__18325,G__18326,G__18327,G__18328));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__18329 = a;
var G__18330 = b;
var G__18331 = c;
var G__18332 = d;
var G__18333 = e;
var G__18334 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__18329,G__18330,G__18331,G__18332,G__18333,G__18334) : self__.afn.call(null,G__18329,G__18330,G__18331,G__18332,G__18333,G__18334));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__18335 = a;
var G__18336 = b;
var G__18337 = c;
var G__18338 = d;
var G__18339 = e;
var G__18340 = f;
var G__18341 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__18335,G__18336,G__18337,G__18338,G__18339,G__18340,G__18341) : self__.afn.call(null,G__18335,G__18336,G__18337,G__18338,G__18339,G__18340,G__18341));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__18342 = a;
var G__18343 = b;
var G__18344 = c;
var G__18345 = d;
var G__18346 = e;
var G__18347 = f;
var G__18348 = g;
var G__18349 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__18342,G__18343,G__18344,G__18345,G__18346,G__18347,G__18348,G__18349) : self__.afn.call(null,G__18342,G__18343,G__18344,G__18345,G__18346,G__18347,G__18348,G__18349));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__18350 = a;
var G__18351 = b;
var G__18352 = c;
var G__18353 = d;
var G__18354 = e;
var G__18355 = f;
var G__18356 = g;
var G__18357 = h;
var G__18358 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__18350,G__18351,G__18352,G__18353,G__18354,G__18355,G__18356,G__18357,G__18358) : self__.afn.call(null,G__18350,G__18351,G__18352,G__18353,G__18354,G__18355,G__18356,G__18357,G__18358));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__18359 = a;
var G__18360 = b;
var G__18361 = c;
var G__18362 = d;
var G__18363 = e;
var G__18364 = f;
var G__18365 = g;
var G__18366 = h;
var G__18367 = i;
var G__18368 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__18359,G__18360,G__18361,G__18362,G__18363,G__18364,G__18365,G__18366,G__18367,G__18368) : self__.afn.call(null,G__18359,G__18360,G__18361,G__18362,G__18363,G__18364,G__18365,G__18366,G__18367,G__18368));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__18369 = a;
var G__18370 = b;
var G__18371 = c;
var G__18372 = d;
var G__18373 = e;
var G__18374 = f;
var G__18375 = g;
var G__18376 = h;
var G__18377 = i;
var G__18378 = j;
var G__18379 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__18369,G__18370,G__18371,G__18372,G__18373,G__18374,G__18375,G__18376,G__18377,G__18378,G__18379) : self__.afn.call(null,G__18369,G__18370,G__18371,G__18372,G__18373,G__18374,G__18375,G__18376,G__18377,G__18378,G__18379));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__18380 = a;
var G__18381 = b;
var G__18382 = c;
var G__18383 = d;
var G__18384 = e;
var G__18385 = f;
var G__18386 = g;
var G__18387 = h;
var G__18388 = i;
var G__18389 = j;
var G__18390 = k;
var G__18391 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__18380,G__18381,G__18382,G__18383,G__18384,G__18385,G__18386,G__18387,G__18388,G__18389,G__18390,G__18391) : self__.afn.call(null,G__18380,G__18381,G__18382,G__18383,G__18384,G__18385,G__18386,G__18387,G__18388,G__18389,G__18390,G__18391));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__18392 = a;
var G__18393 = b;
var G__18394 = c;
var G__18395 = d;
var G__18396 = e;
var G__18397 = f;
var G__18398 = g;
var G__18399 = h;
var G__18400 = i;
var G__18401 = j;
var G__18402 = k;
var G__18403 = l;
var G__18404 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__18392,G__18393,G__18394,G__18395,G__18396,G__18397,G__18398,G__18399,G__18400,G__18401,G__18402,G__18403,G__18404) : self__.afn.call(null,G__18392,G__18393,G__18394,G__18395,G__18396,G__18397,G__18398,G__18399,G__18400,G__18401,G__18402,G__18403,G__18404));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__18405 = a;
var G__18406 = b;
var G__18407 = c;
var G__18408 = d;
var G__18409 = e;
var G__18410 = f;
var G__18411 = g;
var G__18412 = h;
var G__18413 = i;
var G__18414 = j;
var G__18415 = k;
var G__18416 = l;
var G__18417 = m;
var G__18418 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__18405,G__18406,G__18407,G__18408,G__18409,G__18410,G__18411,G__18412,G__18413,G__18414,G__18415,G__18416,G__18417,G__18418) : self__.afn.call(null,G__18405,G__18406,G__18407,G__18408,G__18409,G__18410,G__18411,G__18412,G__18413,G__18414,G__18415,G__18416,G__18417,G__18418));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__18419 = a;
var G__18420 = b;
var G__18421 = c;
var G__18422 = d;
var G__18423 = e;
var G__18424 = f;
var G__18425 = g;
var G__18426 = h;
var G__18427 = i;
var G__18428 = j;
var G__18429 = k;
var G__18430 = l;
var G__18431 = m;
var G__18432 = n;
var G__18433 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__18419,G__18420,G__18421,G__18422,G__18423,G__18424,G__18425,G__18426,G__18427,G__18428,G__18429,G__18430,G__18431,G__18432,G__18433) : self__.afn.call(null,G__18419,G__18420,G__18421,G__18422,G__18423,G__18424,G__18425,G__18426,G__18427,G__18428,G__18429,G__18430,G__18431,G__18432,G__18433));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__18434 = a;
var G__18435 = b;
var G__18436 = c;
var G__18437 = d;
var G__18438 = e;
var G__18439 = f;
var G__18440 = g;
var G__18441 = h;
var G__18442 = i;
var G__18443 = j;
var G__18444 = k;
var G__18445 = l;
var G__18446 = m;
var G__18447 = n;
var G__18448 = o;
var G__18449 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__18434,G__18435,G__18436,G__18437,G__18438,G__18439,G__18440,G__18441,G__18442,G__18443,G__18444,G__18445,G__18446,G__18447,G__18448,G__18449) : self__.afn.call(null,G__18434,G__18435,G__18436,G__18437,G__18438,G__18439,G__18440,G__18441,G__18442,G__18443,G__18444,G__18445,G__18446,G__18447,G__18448,G__18449));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__18450 = a;
var G__18451 = b;
var G__18452 = c;
var G__18453 = d;
var G__18454 = e;
var G__18455 = f;
var G__18456 = g;
var G__18457 = h;
var G__18458 = i;
var G__18459 = j;
var G__18460 = k;
var G__18461 = l;
var G__18462 = m;
var G__18463 = n;
var G__18464 = o;
var G__18465 = p;
var G__18466 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__18450,G__18451,G__18452,G__18453,G__18454,G__18455,G__18456,G__18457,G__18458,G__18459,G__18460,G__18461,G__18462,G__18463,G__18464,G__18465,G__18466) : self__.afn.call(null,G__18450,G__18451,G__18452,G__18453,G__18454,G__18455,G__18456,G__18457,G__18458,G__18459,G__18460,G__18461,G__18462,G__18463,G__18464,G__18465,G__18466));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__18467 = a;
var G__18468 = b;
var G__18469 = c;
var G__18470 = d;
var G__18471 = e;
var G__18472 = f;
var G__18473 = g;
var G__18474 = h;
var G__18475 = i;
var G__18476 = j;
var G__18477 = k;
var G__18478 = l;
var G__18479 = m;
var G__18480 = n;
var G__18481 = o;
var G__18482 = p;
var G__18483 = q;
var G__18484 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__18467,G__18468,G__18469,G__18470,G__18471,G__18472,G__18473,G__18474,G__18475,G__18476,G__18477,G__18478,G__18479,G__18480,G__18481,G__18482,G__18483,G__18484) : self__.afn.call(null,G__18467,G__18468,G__18469,G__18470,G__18471,G__18472,G__18473,G__18474,G__18475,G__18476,G__18477,G__18478,G__18479,G__18480,G__18481,G__18482,G__18483,G__18484));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__18485 = a;
var G__18486 = b;
var G__18487 = c;
var G__18488 = d;
var G__18489 = e;
var G__18490 = f;
var G__18491 = g;
var G__18492 = h;
var G__18493 = i;
var G__18494 = j;
var G__18495 = k;
var G__18496 = l;
var G__18497 = m;
var G__18498 = n;
var G__18499 = o;
var G__18500 = p;
var G__18501 = q;
var G__18502 = r;
var G__18503 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__18485,G__18486,G__18487,G__18488,G__18489,G__18490,G__18491,G__18492,G__18493,G__18494,G__18495,G__18496,G__18497,G__18498,G__18499,G__18500,G__18501,G__18502,G__18503) : self__.afn.call(null,G__18485,G__18486,G__18487,G__18488,G__18489,G__18490,G__18491,G__18492,G__18493,G__18494,G__18495,G__18496,G__18497,G__18498,G__18499,G__18500,G__18501,G__18502,G__18503));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__18504 = a;
var G__18505 = b;
var G__18506 = c;
var G__18507 = d;
var G__18508 = e;
var G__18509 = f;
var G__18510 = g;
var G__18511 = h;
var G__18512 = i;
var G__18513 = j;
var G__18514 = k;
var G__18515 = l;
var G__18516 = m;
var G__18517 = n;
var G__18518 = o;
var G__18519 = p;
var G__18520 = q;
var G__18521 = r;
var G__18522 = s;
var G__18523 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__18504,G__18505,G__18506,G__18507,G__18508,G__18509,G__18510,G__18511,G__18512,G__18513,G__18514,G__18515,G__18516,G__18517,G__18518,G__18519,G__18520,G__18521,G__18522,G__18523) : self__.afn.call(null,G__18504,G__18505,G__18506,G__18507,G__18508,G__18509,G__18510,G__18511,G__18512,G__18513,G__18514,G__18515,G__18516,G__18517,G__18518,G__18519,G__18520,G__18521,G__18522,G__18523));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__18524 = self__.afn;
var G__18525 = a;
var G__18526 = b;
var G__18527 = c;
var G__18528 = d;
var G__18529 = e;
var G__18530 = f;
var G__18531 = g;
var G__18532 = h;
var G__18533 = i;
var G__18534 = j;
var G__18535 = k;
var G__18536 = l;
var G__18537 = m;
var G__18538 = n;
var G__18539 = o;
var G__18540 = p;
var G__18541 = q;
var G__18542 = r;
var G__18543 = s;
var G__18544 = t;
var G__18545 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__18524,G__18525,G__18526,G__18527,G__18528,G__18529,G__18530,G__18531,G__18532,G__18533,G__18534,G__18535,G__18536,G__18537,G__18538,G__18539,G__18540,G__18541,G__18542,G__18543,G__18544,G__18545) : cljs.core.apply.call(null,G__18524,G__18525,G__18526,G__18527,G__18528,G__18529,G__18530,G__18531,G__18532,G__18533,G__18534,G__18535,G__18536,G__18537,G__18538,G__18539,G__18540,G__18541,G__18542,G__18543,G__18544,G__18545));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__18550 = o;
if(G__18550){
var bit__4431__auto__ = (G__18550.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__4431__auto__) || (G__18550.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__18550.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__18550);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__18550);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__3738__auto__ = !((o == null));
if(and__3738__auto__){
var G__18554 = o;
if(G__18554){
var bit__4431__auto__ = (G__18554.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4431__auto__) || (G__18554.cljs$core$IMeta$)){
return true;
} else {
if((!G__18554.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__18554);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__18554);
}
} else {
return and__3738__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__18557__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__18558 = ret;
var G__18559 = cljs.core.first(ks);
var G__18560 = cljs.core.next(ks);
coll = G__18558;
k = G__18559;
ks = G__18560;
continue;
} else {
return ret;
}
}
break;
}
};
var G__18557 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__18561__i = 0, G__18561__a = new Array(arguments.length -  2);
while (G__18561__i < G__18561__a.length) {G__18561__a[G__18561__i] = arguments[G__18561__i + 2]; ++G__18561__i;}
  ks = new cljs.core.IndexedSeq(G__18561__a,0);
} 
return G__18557__delegate.call(this,coll,k,ks);};
G__18557.cljs$lang$maxFixedArity = 2;
G__18557.cljs$lang$applyTo = (function (arglist__18562){
var coll = cljs.core.first(arglist__18562);
arglist__18562 = cljs.core.next(arglist__18562);
var k = cljs.core.first(arglist__18562);
var ks = cljs.core.rest(arglist__18562);
return G__18557__delegate(coll,k,ks);
});
G__18557.cljs$core$IFn$_invoke$arity$variadic = G__18557__delegate;
return G__18557;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__18563 = null;
if (arguments.length > 2) {
var G__18564__i = 0, G__18564__a = new Array(arguments.length -  2);
while (G__18564__i < G__18564__a.length) {G__18564__a[G__18564__i] = arguments[G__18564__i + 2]; ++G__18564__i;}
G__18563 = new cljs.core.IndexedSeq(G__18564__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__18563);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__18566 = x;
if(G__18566){
var bit__4431__auto__ = (G__18566.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__4431__auto__) || (G__18566.cljs$core$ICollection$)){
return true;
} else {
if((!G__18566.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__18566);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__18566);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__18568 = x;
if(G__18568){
var bit__4431__auto__ = (G__18568.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__4431__auto__) || (G__18568.cljs$core$ISet$)){
return true;
} else {
if((!G__18568.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__18568);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__18568);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__18570 = x;
if(G__18570){
var bit__4431__auto__ = (G__18570.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__4431__auto__) || (G__18570.cljs$core$IAssociative$)){
return true;
} else {
if((!G__18570.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__18570);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__18570);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__18572 = x;
if(G__18572){
var bit__4431__auto__ = (G__18572.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__4431__auto__) || (G__18572.cljs$core$ISequential$)){
return true;
} else {
if((!G__18572.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__18572);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__18572);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__18574 = x;
if(G__18574){
var bit__4431__auto__ = (G__18574.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__4431__auto__) || (G__18574.cljs$core$ISorted$)){
return true;
} else {
if((!G__18574.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__18574);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__18574);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__18576 = x;
if(G__18576){
var bit__4431__auto__ = (G__18576.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4431__auto__) || (G__18576.cljs$core$IReduce$)){
return true;
} else {
if((!G__18576.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__18576);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__18576);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__18578 = x;
if(G__18578){
var bit__4431__auto__ = (G__18578.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4431__auto__) || (G__18578.cljs$core$IMap$)){
return true;
} else {
if((!G__18578.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__18578);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__18578);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__18580 = x;
if(G__18580){
var bit__4431__auto__ = (G__18580.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__4431__auto__) || (G__18580.cljs$core$IVector$)){
return true;
} else {
if((!G__18580.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__18580);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__18580);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__18582 = x;
if(G__18582){
var bit__4424__auto__ = (G__18582.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__4424__auto__) || (G__18582.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj18588 = {};
return obj18588;
});
var js_obj__1 = (function() { 
var G__18591__delegate = function (keyvals){
var G__18589 = goog.object.create;
var G__18590 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__18589,G__18590) : cljs.core.apply.call(null,G__18589,G__18590));
};
var G__18591 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__18592__i = 0, G__18592__a = new Array(arguments.length -  0);
while (G__18592__i < G__18592__a.length) {G__18592__a[G__18592__i] = arguments[G__18592__i + 0]; ++G__18592__i;}
  keyvals = new cljs.core.IndexedSeq(G__18592__a,0);
} 
return G__18591__delegate.call(this,keyvals);};
G__18591.cljs$lang$maxFixedArity = 0;
G__18591.cljs$lang$applyTo = (function (arglist__18593){
var keyvals = cljs.core.seq(arglist__18593);
return G__18591__delegate(keyvals);
});
G__18591.cljs$core$IFn$_invoke$arity$variadic = G__18591__delegate;
return G__18591;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__18594 = null;
if (arguments.length > 0) {
var G__18595__i = 0, G__18595__a = new Array(arguments.length -  0);
while (G__18595__i < G__18595__a.length) {G__18595__a[G__18595__i] = arguments[G__18595__i + 0]; ++G__18595__i;}
G__18594 = new cljs.core.IndexedSeq(G__18595__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__18594);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__18598_18600 = obj;
var G__18599_18601 = ((function (G__18598_18600,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__18598_18600,keys))
;
goog.object.forEach(G__18598_18600,G__18599_18601);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__18602 = (i__$1 + (1));
var G__18603 = (j__$1 + (1));
var G__18604 = (len__$1 - (1));
i__$1 = G__18602;
j__$1 = G__18603;
len__$1 = G__18604;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__18605 = (i__$1 - (1));
var G__18606 = (j__$1 - (1));
var G__18607 = (len__$1 - (1));
i__$1 = G__18605;
j__$1 = G__18606;
len__$1 = G__18607;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj18609 = {};
return obj18609;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__18611 = s;
if(G__18611){
var bit__4431__auto__ = (G__18611.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4431__auto__) || (G__18611.cljs$core$ISeq$)){
return true;
} else {
if((!G__18611.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__18611);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__18611);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__18613 = s;
if(G__18613){
var bit__4431__auto__ = (G__18613.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4431__auto__) || (G__18613.cljs$core$ISeqable$)){
return true;
} else {
if((!G__18613.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__18613);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__18613);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__3750__auto__ = cljs.core.fn_QMARK_(f);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var G__18617 = f;
if(G__18617){
var bit__4431__auto__ = (G__18617.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__4431__auto__) || (G__18617.cljs$core$IFn$)){
return true;
} else {
if((!G__18617.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__18617);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__18617);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__18630 = n;
return isNaN(G__18630);
})())) && (!((n === Infinity))) && (((function (){var G__18631 = n;
return parseFloat(G__18631);
})() === (function (){var G__18632 = n;
var G__18633 = (10);
return parseInt(G__18632,G__18633);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__18634__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__18635 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__18636 = etc;
s = G__18635;
xs = G__18636;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__18634 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__18637__i = 0, G__18637__a = new Array(arguments.length -  2);
while (G__18637__i < G__18637__a.length) {G__18637__a[G__18637__i] = arguments[G__18637__i + 2]; ++G__18637__i;}
  more = new cljs.core.IndexedSeq(G__18637__a,0);
} 
return G__18634__delegate.call(this,x,y,more);};
G__18634.cljs$lang$maxFixedArity = 2;
G__18634.cljs$lang$applyTo = (function (arglist__18638){
var x = cljs.core.first(arglist__18638);
arglist__18638 = cljs.core.next(arglist__18638);
var y = cljs.core.first(arglist__18638);
var more = cljs.core.rest(arglist__18638);
return G__18634__delegate(x,y,more);
});
G__18634.cljs$core$IFn$_invoke$arity$variadic = G__18634__delegate;
return G__18634;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__18639 = null;
if (arguments.length > 2) {
var G__18640__i = 0, G__18640__a = new Array(arguments.length -  2);
while (G__18640__i < G__18640__a.length) {G__18640__a[G__18640__i] = arguments[G__18640__i + 2]; ++G__18640__i;}
G__18639 = new cljs.core.IndexedSeq(G__18640__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__18639);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__18644 = x;
if(G__18644){
var bit__4424__auto__ = (G__18644.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__4424__auto__) || (G__18644.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__18645 = x;
var G__18646 = y;
return goog.array.defaultCompare(G__18645,G__18646);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__18651 = xs;
var G__18652 = ys;
var G__18653 = len;
var G__18654 = (n + (1));
xs = G__18651;
ys = G__18652;
len = G__18653;
n = G__18654;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__18659 = x;
var G__18660 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18659,G__18660) : f.call(null,G__18659,G__18660));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__18661 = y;
var G__18662 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18661,G__18662) : f.call(null,G__18661,G__18662));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__18668 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__18668) : cljs.core.to_array.call(null,G__18668));
})();
var G__18669_18671 = a;
var G__18670_18672 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__18669_18671,G__18670_18672);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__18678 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__18678) : keyfn.call(null,G__18678));
})(),(function (){var G__18679 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__18679) : keyfn.call(null,G__18679));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__18685 = f;
var G__18686 = cljs.core.first(s);
var G__18687 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__18685,G__18686,G__18687) : cljs.core.reduce.call(null,G__18685,G__18686,G__18687));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__18688 = val__$1;
var G__18689 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18688,G__18689) : f.call(null,G__18688,G__18689));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__18690 = nval;
var G__18691 = cljs.core.next(coll__$1);
val__$1 = G__18690;
coll__$1 = G__18691;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__18695 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__18695) : cljs.core.to_array.call(null,G__18695));
})();
var G__18696_18698 = a;
goog.array.shuffle(G__18696_18698);

var G__18697 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__18697) : cljs.core.vec.call(null,G__18697));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__18701 = coll;
if(G__18701){
var bit__4424__auto__ = (G__18701.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4424__auto__) || (G__18701.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__18702 = coll;
if(G__18702){
var bit__4424__auto__ = (G__18702.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4424__auto__) || (G__18702.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__18711 = null;
var G__18711__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__18711__1 = (function (x){
var G__18708 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__18708) : cf.call(null,G__18708));
});
var G__18711__2 = (function (x,y){
var G__18709 = x;
var G__18710 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18709,G__18710) : f.call(null,G__18709,G__18710));
});
G__18711 = function(x,y){
switch(arguments.length){
case 0:
return G__18711__0.call(this);
case 1:
return G__18711__1.call(this,x);
case 2:
return G__18711__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__18711.cljs$core$IFn$_invoke$arity$0 = G__18711__0;
G__18711.cljs$core$IFn$_invoke$arity$1 = G__18711__1;
G__18711.cljs$core$IFn$_invoke$arity$2 = G__18711__2;
return G__18711;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__18718 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__18718) : xform.call(null,G__18718));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__18719 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__18719) : f__$1.call(null,G__18719));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__18720__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__18720 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__18721__i = 0, G__18721__a = new Array(arguments.length -  2);
while (G__18721__i < G__18721__a.length) {G__18721__a[G__18721__i] = arguments[G__18721__i + 2]; ++G__18721__i;}
  more = new cljs.core.IndexedSeq(G__18721__a,0);
} 
return G__18720__delegate.call(this,x,y,more);};
G__18720.cljs$lang$maxFixedArity = 2;
G__18720.cljs$lang$applyTo = (function (arglist__18722){
var x = cljs.core.first(arglist__18722);
arglist__18722 = cljs.core.next(arglist__18722);
var y = cljs.core.first(arglist__18722);
var more = cljs.core.rest(arglist__18722);
return G__18720__delegate(x,y,more);
});
G__18720.cljs$core$IFn$_invoke$arity$variadic = G__18720__delegate;
return G__18720;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__18723 = null;
if (arguments.length > 2) {
var G__18724__i = 0, G__18724__a = new Array(arguments.length -  2);
while (G__18724__i < G__18724__a.length) {G__18724__a[G__18724__i] = arguments[G__18724__i + 2]; ++G__18724__i;}
G__18723 = new cljs.core.IndexedSeq(G__18724__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__18723);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__18725__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__18725 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__18726__i = 0, G__18726__a = new Array(arguments.length -  2);
while (G__18726__i < G__18726__a.length) {G__18726__a[G__18726__i] = arguments[G__18726__i + 2]; ++G__18726__i;}
  more = new cljs.core.IndexedSeq(G__18726__a,0);
} 
return G__18725__delegate.call(this,x,y,more);};
G__18725.cljs$lang$maxFixedArity = 2;
G__18725.cljs$lang$applyTo = (function (arglist__18727){
var x = cljs.core.first(arglist__18727);
arglist__18727 = cljs.core.next(arglist__18727);
var y = cljs.core.first(arglist__18727);
var more = cljs.core.rest(arglist__18727);
return G__18725__delegate(x,y,more);
});
G__18725.cljs$core$IFn$_invoke$arity$variadic = G__18725__delegate;
return G__18725;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__18728 = null;
if (arguments.length > 2) {
var G__18729__i = 0, G__18729__a = new Array(arguments.length -  2);
while (G__18729__i < G__18729__a.length) {G__18729__a[G__18729__i] = arguments[G__18729__i + 2]; ++G__18729__i;}
G__18728 = new cljs.core.IndexedSeq(G__18729__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__18728);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__18730__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__18730 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__18731__i = 0, G__18731__a = new Array(arguments.length -  2);
while (G__18731__i < G__18731__a.length) {G__18731__a[G__18731__i] = arguments[G__18731__i + 2]; ++G__18731__i;}
  more = new cljs.core.IndexedSeq(G__18731__a,0);
} 
return G__18730__delegate.call(this,x,y,more);};
G__18730.cljs$lang$maxFixedArity = 2;
G__18730.cljs$lang$applyTo = (function (arglist__18732){
var x = cljs.core.first(arglist__18732);
arglist__18732 = cljs.core.next(arglist__18732);
var y = cljs.core.first(arglist__18732);
var more = cljs.core.rest(arglist__18732);
return G__18730__delegate(x,y,more);
});
G__18730.cljs$core$IFn$_invoke$arity$variadic = G__18730__delegate;
return G__18730;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__18733 = null;
if (arguments.length > 2) {
var G__18734__i = 0, G__18734__a = new Array(arguments.length -  2);
while (G__18734__i < G__18734__a.length) {G__18734__a[G__18734__i] = arguments[G__18734__i + 2]; ++G__18734__i;}
G__18733 = new cljs.core.IndexedSeq(G__18734__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__18733);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__18739__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__18739 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__18740__i = 0, G__18740__a = new Array(arguments.length -  2);
while (G__18740__i < G__18740__a.length) {G__18740__a[G__18740__i] = arguments[G__18740__i + 2]; ++G__18740__i;}
  more = new cljs.core.IndexedSeq(G__18740__a,0);
} 
return G__18739__delegate.call(this,x,y,more);};
G__18739.cljs$lang$maxFixedArity = 2;
G__18739.cljs$lang$applyTo = (function (arglist__18741){
var x = cljs.core.first(arglist__18741);
arglist__18741 = cljs.core.next(arglist__18741);
var y = cljs.core.first(arglist__18741);
var more = cljs.core.rest(arglist__18741);
return G__18739__delegate(x,y,more);
});
G__18739.cljs$core$IFn$_invoke$arity$variadic = G__18739__delegate;
return G__18739;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__18742 = null;
if (arguments.length > 2) {
var G__18743__i = 0, G__18743__a = new Array(arguments.length -  2);
while (G__18743__i < G__18743__a.length) {G__18743__a[G__18743__i] = arguments[G__18743__i + 2]; ++G__18743__i;}
G__18742 = new cljs.core.IndexedSeq(G__18743__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__18742);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__18744__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__18745 = y;
var G__18746 = cljs.core.first(more);
var G__18747 = cljs.core.next(more);
x = G__18745;
y = G__18746;
more = G__18747;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__18744 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__18748__i = 0, G__18748__a = new Array(arguments.length -  2);
while (G__18748__i < G__18748__a.length) {G__18748__a[G__18748__i] = arguments[G__18748__i + 2]; ++G__18748__i;}
  more = new cljs.core.IndexedSeq(G__18748__a,0);
} 
return G__18744__delegate.call(this,x,y,more);};
G__18744.cljs$lang$maxFixedArity = 2;
G__18744.cljs$lang$applyTo = (function (arglist__18749){
var x = cljs.core.first(arglist__18749);
arglist__18749 = cljs.core.next(arglist__18749);
var y = cljs.core.first(arglist__18749);
var more = cljs.core.rest(arglist__18749);
return G__18744__delegate(x,y,more);
});
G__18744.cljs$core$IFn$_invoke$arity$variadic = G__18744__delegate;
return G__18744;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__18750 = null;
if (arguments.length > 2) {
var G__18751__i = 0, G__18751__a = new Array(arguments.length -  2);
while (G__18751__i < G__18751__a.length) {G__18751__a[G__18751__i] = arguments[G__18751__i + 2]; ++G__18751__i;}
G__18750 = new cljs.core.IndexedSeq(G__18751__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__18750);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__18752__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__18753 = y;
var G__18754 = cljs.core.first(more);
var G__18755 = cljs.core.next(more);
x = G__18753;
y = G__18754;
more = G__18755;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__18752 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__18756__i = 0, G__18756__a = new Array(arguments.length -  2);
while (G__18756__i < G__18756__a.length) {G__18756__a[G__18756__i] = arguments[G__18756__i + 2]; ++G__18756__i;}
  more = new cljs.core.IndexedSeq(G__18756__a,0);
} 
return G__18752__delegate.call(this,x,y,more);};
G__18752.cljs$lang$maxFixedArity = 2;
G__18752.cljs$lang$applyTo = (function (arglist__18757){
var x = cljs.core.first(arglist__18757);
arglist__18757 = cljs.core.next(arglist__18757);
var y = cljs.core.first(arglist__18757);
var more = cljs.core.rest(arglist__18757);
return G__18752__delegate(x,y,more);
});
G__18752.cljs$core$IFn$_invoke$arity$variadic = G__18752__delegate;
return G__18752;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__18758 = null;
if (arguments.length > 2) {
var G__18759__i = 0, G__18759__a = new Array(arguments.length -  2);
while (G__18759__i < G__18759__a.length) {G__18759__a[G__18759__i] = arguments[G__18759__i + 2]; ++G__18759__i;}
G__18758 = new cljs.core.IndexedSeq(G__18759__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__18758);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__18760__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__18761 = y;
var G__18762 = cljs.core.first(more);
var G__18763 = cljs.core.next(more);
x = G__18761;
y = G__18762;
more = G__18763;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__18760 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__18764__i = 0, G__18764__a = new Array(arguments.length -  2);
while (G__18764__i < G__18764__a.length) {G__18764__a[G__18764__i] = arguments[G__18764__i + 2]; ++G__18764__i;}
  more = new cljs.core.IndexedSeq(G__18764__a,0);
} 
return G__18760__delegate.call(this,x,y,more);};
G__18760.cljs$lang$maxFixedArity = 2;
G__18760.cljs$lang$applyTo = (function (arglist__18765){
var x = cljs.core.first(arglist__18765);
arglist__18765 = cljs.core.next(arglist__18765);
var y = cljs.core.first(arglist__18765);
var more = cljs.core.rest(arglist__18765);
return G__18760__delegate(x,y,more);
});
G__18760.cljs$core$IFn$_invoke$arity$variadic = G__18760__delegate;
return G__18760;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__18766 = null;
if (arguments.length > 2) {
var G__18767__i = 0, G__18767__a = new Array(arguments.length -  2);
while (G__18767__i < G__18767__a.length) {G__18767__a[G__18767__i] = arguments[G__18767__i + 2]; ++G__18767__i;}
G__18766 = new cljs.core.IndexedSeq(G__18767__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__18766);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__18768__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__18769 = y;
var G__18770 = cljs.core.first(more);
var G__18771 = cljs.core.next(more);
x = G__18769;
y = G__18770;
more = G__18771;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__18768 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__18772__i = 0, G__18772__a = new Array(arguments.length -  2);
while (G__18772__i < G__18772__a.length) {G__18772__a[G__18772__i] = arguments[G__18772__i + 2]; ++G__18772__i;}
  more = new cljs.core.IndexedSeq(G__18772__a,0);
} 
return G__18768__delegate.call(this,x,y,more);};
G__18768.cljs$lang$maxFixedArity = 2;
G__18768.cljs$lang$applyTo = (function (arglist__18773){
var x = cljs.core.first(arglist__18773);
arglist__18773 = cljs.core.next(arglist__18773);
var y = cljs.core.first(arglist__18773);
var more = cljs.core.rest(arglist__18773);
return G__18768__delegate(x,y,more);
});
G__18768.cljs$core$IFn$_invoke$arity$variadic = G__18768__delegate;
return G__18768;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__18774 = null;
if (arguments.length > 2) {
var G__18775__i = 0, G__18775__a = new Array(arguments.length -  2);
while (G__18775__i < G__18775__a.length) {G__18775__a[G__18775__i] = arguments[G__18775__i + 2]; ++G__18775__i;}
G__18774 = new cljs.core.IndexedSeq(G__18775__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__18774);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__4067__auto__ = x;
var y__4068__auto__ = y;
return ((x__4067__auto__ > y__4068__auto__) ? x__4067__auto__ : y__4068__auto__);
});
var max__3 = (function() { 
var G__18776__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__4067__auto__ = x;
var y__4068__auto__ = y;
return ((x__4067__auto__ > y__4068__auto__) ? x__4067__auto__ : y__4068__auto__);
})(),more);
};
var G__18776 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__18777__i = 0, G__18777__a = new Array(arguments.length -  2);
while (G__18777__i < G__18777__a.length) {G__18777__a[G__18777__i] = arguments[G__18777__i + 2]; ++G__18777__i;}
  more = new cljs.core.IndexedSeq(G__18777__a,0);
} 
return G__18776__delegate.call(this,x,y,more);};
G__18776.cljs$lang$maxFixedArity = 2;
G__18776.cljs$lang$applyTo = (function (arglist__18778){
var x = cljs.core.first(arglist__18778);
arglist__18778 = cljs.core.next(arglist__18778);
var y = cljs.core.first(arglist__18778);
var more = cljs.core.rest(arglist__18778);
return G__18776__delegate(x,y,more);
});
G__18776.cljs$core$IFn$_invoke$arity$variadic = G__18776__delegate;
return G__18776;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__18779 = null;
if (arguments.length > 2) {
var G__18780__i = 0, G__18780__a = new Array(arguments.length -  2);
while (G__18780__i < G__18780__a.length) {G__18780__a[G__18780__i] = arguments[G__18780__i + 2]; ++G__18780__i;}
G__18779 = new cljs.core.IndexedSeq(G__18780__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__18779);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__4074__auto__ = x;
var y__4075__auto__ = y;
return ((x__4074__auto__ < y__4075__auto__) ? x__4074__auto__ : y__4075__auto__);
});
var min__3 = (function() { 
var G__18781__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__4074__auto__ = x;
var y__4075__auto__ = y;
return ((x__4074__auto__ < y__4075__auto__) ? x__4074__auto__ : y__4075__auto__);
})(),more);
};
var G__18781 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__18782__i = 0, G__18782__a = new Array(arguments.length -  2);
while (G__18782__i < G__18782__a.length) {G__18782__a[G__18782__i] = arguments[G__18782__i + 2]; ++G__18782__i;}
  more = new cljs.core.IndexedSeq(G__18782__a,0);
} 
return G__18781__delegate.call(this,x,y,more);};
G__18781.cljs$lang$maxFixedArity = 2;
G__18781.cljs$lang$applyTo = (function (arglist__18783){
var x = cljs.core.first(arglist__18783);
arglist__18783 = cljs.core.next(arglist__18783);
var y = cljs.core.first(arglist__18783);
var more = cljs.core.rest(arglist__18783);
return G__18781__delegate(x,y,more);
});
G__18781.cljs$core$IFn$_invoke$arity$variadic = G__18781__delegate;
return G__18781;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__18784 = null;
if (arguments.length > 2) {
var G__18785__i = 0, G__18785__a = new Array(arguments.length -  2);
while (G__18785__i < G__18785__a.length) {G__18785__a[G__18785__i] = arguments[G__18785__i + 2]; ++G__18785__i;}
G__18784 = new cljs.core.IndexedSeq(G__18785__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__18784);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__18786__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__18786 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__18787__i = 0, G__18787__a = new Array(arguments.length -  2);
while (G__18787__i < G__18787__a.length) {G__18787__a[G__18787__i] = arguments[G__18787__i + 2]; ++G__18787__i;}
  more = new cljs.core.IndexedSeq(G__18787__a,0);
} 
return G__18786__delegate.call(this,x,y,more);};
G__18786.cljs$lang$maxFixedArity = 2;
G__18786.cljs$lang$applyTo = (function (arglist__18788){
var x = cljs.core.first(arglist__18788);
arglist__18788 = cljs.core.next(arglist__18788);
var y = cljs.core.first(arglist__18788);
var more = cljs.core.rest(arglist__18788);
return G__18786__delegate(x,y,more);
});
G__18786.cljs$core$IFn$_invoke$arity$variadic = G__18786__delegate;
return G__18786;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__18789 = null;
if (arguments.length > 2) {
var G__18790__i = 0, G__18790__a = new Array(arguments.length -  2);
while (G__18790__i < G__18790__a.length) {G__18790__a[G__18790__i] = arguments[G__18790__i + 2]; ++G__18790__i;}
G__18789 = new cljs.core.IndexedSeq(G__18790__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__18789);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__18791__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__18791 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__18792__i = 0, G__18792__a = new Array(arguments.length -  2);
while (G__18792__i < G__18792__a.length) {G__18792__a[G__18792__i] = arguments[G__18792__i + 2]; ++G__18792__i;}
  more = new cljs.core.IndexedSeq(G__18792__a,0);
} 
return G__18791__delegate.call(this,x,y,more);};
G__18791.cljs$lang$maxFixedArity = 2;
G__18791.cljs$lang$applyTo = (function (arglist__18793){
var x = cljs.core.first(arglist__18793);
arglist__18793 = cljs.core.next(arglist__18793);
var y = cljs.core.first(arglist__18793);
var more = cljs.core.rest(arglist__18793);
return G__18791__delegate(x,y,more);
});
G__18791.cljs$core$IFn$_invoke$arity$variadic = G__18791__delegate;
return G__18791;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__18794 = null;
if (arguments.length > 2) {
var G__18795__i = 0, G__18795__a = new Array(arguments.length -  2);
while (G__18795__i < G__18795__a.length) {G__18795__a[G__18795__i] = arguments[G__18795__i + 2]; ++G__18795__i;}
G__18794 = new cljs.core.IndexedSeq(G__18795__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__18794);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__18800__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__18800 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__18801__i = 0, G__18801__a = new Array(arguments.length -  2);
while (G__18801__i < G__18801__a.length) {G__18801__a[G__18801__i] = arguments[G__18801__i + 2]; ++G__18801__i;}
  more = new cljs.core.IndexedSeq(G__18801__a,0);
} 
return G__18800__delegate.call(this,x,y,more);};
G__18800.cljs$lang$maxFixedArity = 2;
G__18800.cljs$lang$applyTo = (function (arglist__18802){
var x = cljs.core.first(arglist__18802);
arglist__18802 = cljs.core.next(arglist__18802);
var y = cljs.core.first(arglist__18802);
var more = cljs.core.rest(arglist__18802);
return G__18800__delegate(x,y,more);
});
G__18800.cljs$core$IFn$_invoke$arity$variadic = G__18800__delegate;
return G__18800;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__18803 = null;
if (arguments.length > 2) {
var G__18804__i = 0, G__18804__a = new Array(arguments.length -  2);
while (G__18804__i < G__18804__a.length) {G__18804__a[G__18804__i] = arguments[G__18804__i + 2]; ++G__18804__i;}
G__18803 = new cljs.core.IndexedSeq(G__18804__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__18803);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__18805__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__18805 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__18806__i = 0, G__18806__a = new Array(arguments.length -  2);
while (G__18806__i < G__18806__a.length) {G__18806__a[G__18806__i] = arguments[G__18806__i + 2]; ++G__18806__i;}
  more = new cljs.core.IndexedSeq(G__18806__a,0);
} 
return G__18805__delegate.call(this,x,y,more);};
G__18805.cljs$lang$maxFixedArity = 2;
G__18805.cljs$lang$applyTo = (function (arglist__18807){
var x = cljs.core.first(arglist__18807);
arglist__18807 = cljs.core.next(arglist__18807);
var y = cljs.core.first(arglist__18807);
var more = cljs.core.rest(arglist__18807);
return G__18805__delegate(x,y,more);
});
G__18805.cljs$core$IFn$_invoke$arity$variadic = G__18805__delegate;
return G__18805;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__18808 = null;
if (arguments.length > 2) {
var G__18809__i = 0, G__18809__a = new Array(arguments.length -  2);
while (G__18809__i < G__18809__a.length) {G__18809__a[G__18809__i] = arguments[G__18809__i + 2]; ++G__18809__i;}
G__18808 = new cljs.core.IndexedSeq(G__18809__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__18808);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__18810__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__18810 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__18811__i = 0, G__18811__a = new Array(arguments.length -  2);
while (G__18811__i < G__18811__a.length) {G__18811__a[G__18811__i] = arguments[G__18811__i + 2]; ++G__18811__i;}
  more = new cljs.core.IndexedSeq(G__18811__a,0);
} 
return G__18810__delegate.call(this,x,y,more);};
G__18810.cljs$lang$maxFixedArity = 2;
G__18810.cljs$lang$applyTo = (function (arglist__18812){
var x = cljs.core.first(arglist__18812);
arglist__18812 = cljs.core.next(arglist__18812);
var y = cljs.core.first(arglist__18812);
var more = cljs.core.rest(arglist__18812);
return G__18810__delegate(x,y,more);
});
G__18810.cljs$core$IFn$_invoke$arity$variadic = G__18810__delegate;
return G__18810;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__18813 = null;
if (arguments.length > 2) {
var G__18814__i = 0, G__18814__a = new Array(arguments.length -  2);
while (G__18814__i < G__18814__a.length) {G__18814__a[G__18814__i] = arguments[G__18814__i + 2]; ++G__18814__i;}
G__18813 = new cljs.core.IndexedSeq(G__18814__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__18813);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__18817 = x;
var G__18818 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__18817,G__18818) : cljs.core.mod.call(null,G__18817,G__18818));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__18819__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__18819 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__18820__i = 0, G__18820__a = new Array(arguments.length -  2);
while (G__18820__i < G__18820__a.length) {G__18820__a[G__18820__i] = arguments[G__18820__i + 2]; ++G__18820__i;}
  more = new cljs.core.IndexedSeq(G__18820__a,0);
} 
return G__18819__delegate.call(this,x,y,more);};
G__18819.cljs$lang$maxFixedArity = 2;
G__18819.cljs$lang$applyTo = (function (arglist__18821){
var x = cljs.core.first(arglist__18821);
arglist__18821 = cljs.core.next(arglist__18821);
var y = cljs.core.first(arglist__18821);
var more = cljs.core.rest(arglist__18821);
return G__18819__delegate(x,y,more);
});
G__18819.cljs$core$IFn$_invoke$arity$variadic = G__18819__delegate;
return G__18819;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__18822 = null;
if (arguments.length > 2) {
var G__18823__i = 0, G__18823__a = new Array(arguments.length -  2);
while (G__18823__i < G__18823__a.length) {G__18823__a[G__18823__i] = arguments[G__18823__i + 2]; ++G__18823__i;}
G__18822 = new cljs.core.IndexedSeq(G__18823__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__18822);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__18824__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__18824 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__18825__i = 0, G__18825__a = new Array(arguments.length -  2);
while (G__18825__i < G__18825__a.length) {G__18825__a[G__18825__i] = arguments[G__18825__i + 2]; ++G__18825__i;}
  more = new cljs.core.IndexedSeq(G__18825__a,0);
} 
return G__18824__delegate.call(this,x,y,more);};
G__18824.cljs$lang$maxFixedArity = 2;
G__18824.cljs$lang$applyTo = (function (arglist__18826){
var x = cljs.core.first(arglist__18826);
arglist__18826 = cljs.core.next(arglist__18826);
var y = cljs.core.first(arglist__18826);
var more = cljs.core.rest(arglist__18826);
return G__18824__delegate(x,y,more);
});
G__18824.cljs$core$IFn$_invoke$arity$variadic = G__18824__delegate;
return G__18824;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__18827 = null;
if (arguments.length > 2) {
var G__18828__i = 0, G__18828__a = new Array(arguments.length -  2);
while (G__18828__i < G__18828__a.length) {G__18828__a[G__18828__i] = arguments[G__18828__i + 2]; ++G__18828__i;}
G__18827 = new cljs.core.IndexedSeq(G__18828__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__18827);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__18831 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__18831) : Math.floor.call(null,G__18831));
} else {
var G__18832 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__18832) : Math.ceil.call(null,G__18832));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__18833__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__18833 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__18834__i = 0, G__18834__a = new Array(arguments.length -  2);
while (G__18834__i < G__18834__a.length) {G__18834__a[G__18834__i] = arguments[G__18834__i + 2]; ++G__18834__i;}
  more = new cljs.core.IndexedSeq(G__18834__a,0);
} 
return G__18833__delegate.call(this,x,y,more);};
G__18833.cljs$lang$maxFixedArity = 2;
G__18833.cljs$lang$applyTo = (function (arglist__18835){
var x = cljs.core.first(arglist__18835);
arglist__18835 = cljs.core.next(arglist__18835);
var y = cljs.core.first(arglist__18835);
var more = cljs.core.rest(arglist__18835);
return G__18833__delegate(x,y,more);
});
G__18833.cljs$core$IFn$_invoke$arity$variadic = G__18833__delegate;
return G__18833;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__18836 = null;
if (arguments.length > 2) {
var G__18837__i = 0, G__18837__a = new Array(arguments.length -  2);
while (G__18837__i < G__18837__a.length) {G__18837__a[G__18837__i] = arguments[G__18837__i + 2]; ++G__18837__i;}
G__18836 = new cljs.core.IndexedSeq(G__18837__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__18836);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__18838__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__18838 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__18839__i = 0, G__18839__a = new Array(arguments.length -  2);
while (G__18839__i < G__18839__a.length) {G__18839__a[G__18839__i] = arguments[G__18839__i + 2]; ++G__18839__i;}
  more = new cljs.core.IndexedSeq(G__18839__a,0);
} 
return G__18838__delegate.call(this,x,y,more);};
G__18838.cljs$lang$maxFixedArity = 2;
G__18838.cljs$lang$applyTo = (function (arglist__18840){
var x = cljs.core.first(arglist__18840);
arglist__18840 = cljs.core.next(arglist__18840);
var y = cljs.core.first(arglist__18840);
var more = cljs.core.rest(arglist__18840);
return G__18838__delegate(x,y,more);
});
G__18838.cljs$core$IFn$_invoke$arity$variadic = G__18838__delegate;
return G__18838;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__18841 = null;
if (arguments.length > 2) {
var G__18842__i = 0, G__18842__a = new Array(arguments.length -  2);
while (G__18842__i < G__18842__a.length) {G__18842__a[G__18842__i] = arguments[G__18842__i + 2]; ++G__18842__i;}
G__18841 = new cljs.core.IndexedSeq(G__18842__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__18841);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__18843__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__18843 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__18844__i = 0, G__18844__a = new Array(arguments.length -  2);
while (G__18844__i < G__18844__a.length) {G__18844__a[G__18844__i] = arguments[G__18844__i + 2]; ++G__18844__i;}
  more = new cljs.core.IndexedSeq(G__18844__a,0);
} 
return G__18843__delegate.call(this,x,y,more);};
G__18843.cljs$lang$maxFixedArity = 2;
G__18843.cljs$lang$applyTo = (function (arglist__18845){
var x = cljs.core.first(arglist__18845);
arglist__18845 = cljs.core.next(arglist__18845);
var y = cljs.core.first(arglist__18845);
var more = cljs.core.rest(arglist__18845);
return G__18843__delegate(x,y,more);
});
G__18843.cljs$core$IFn$_invoke$arity$variadic = G__18843__delegate;
return G__18843;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__18846 = null;
if (arguments.length > 2) {
var G__18847__i = 0, G__18847__a = new Array(arguments.length -  2);
while (G__18847__i < G__18847__a.length) {G__18847__a[G__18847__i] = arguments[G__18847__i + 2]; ++G__18847__i;}
G__18846 = new cljs.core.IndexedSeq(G__18847__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__18846);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__18848__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__18848 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__18849__i = 0, G__18849__a = new Array(arguments.length -  2);
while (G__18849__i < G__18849__a.length) {G__18849__a[G__18849__i] = arguments[G__18849__i + 2]; ++G__18849__i;}
  more = new cljs.core.IndexedSeq(G__18849__a,0);
} 
return G__18848__delegate.call(this,x,y,more);};
G__18848.cljs$lang$maxFixedArity = 2;
G__18848.cljs$lang$applyTo = (function (arglist__18850){
var x = cljs.core.first(arglist__18850);
arglist__18850 = cljs.core.next(arglist__18850);
var y = cljs.core.first(arglist__18850);
var more = cljs.core.rest(arglist__18850);
return G__18848__delegate(x,y,more);
});
G__18848.cljs$core$IFn$_invoke$arity$variadic = G__18848__delegate;
return G__18848;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__18851 = null;
if (arguments.length > 2) {
var G__18852__i = 0, G__18852__a = new Array(arguments.length -  2);
while (G__18852__i < G__18852__a.length) {G__18852__a[G__18852__i] = arguments[G__18852__i + 2]; ++G__18852__i;}
G__18851 = new cljs.core.IndexedSeq(G__18852__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__18851);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__18857__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__18858 = y;
var G__18859 = cljs.core.first(more);
var G__18860 = cljs.core.next(more);
x = G__18858;
y = G__18859;
more = G__18860;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__18857 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__18861__i = 0, G__18861__a = new Array(arguments.length -  2);
while (G__18861__i < G__18861__a.length) {G__18861__a[G__18861__i] = arguments[G__18861__i + 2]; ++G__18861__i;}
  more = new cljs.core.IndexedSeq(G__18861__a,0);
} 
return G__18857__delegate.call(this,x,y,more);};
G__18857.cljs$lang$maxFixedArity = 2;
G__18857.cljs$lang$applyTo = (function (arglist__18862){
var x = cljs.core.first(arglist__18862);
arglist__18862 = cljs.core.next(arglist__18862);
var y = cljs.core.first(arglist__18862);
var more = cljs.core.rest(arglist__18862);
return G__18857__delegate(x,y,more);
});
G__18857.cljs$core$IFn$_invoke$arity$variadic = G__18857__delegate;
return G__18857;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__18863 = null;
if (arguments.length > 2) {
var G__18864__i = 0, G__18864__a = new Array(arguments.length -  2);
while (G__18864__i < G__18864__a.length) {G__18864__a[G__18864__i] = arguments[G__18864__i + 2]; ++G__18864__i;}
G__18863 = new cljs.core.IndexedSeq(G__18864__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__18863);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__18865 = (n__$1 - (1));
var G__18866 = cljs.core.next(xs);
n__$1 = G__18865;
xs = G__18866;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__18870 = x;
return goog.string.buildString(G__18870);
}
});
var str__2 = (function() { 
var G__18871__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__18872 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__18873 = cljs.core.next(more);
sb = G__18872;
more = G__18873;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__18871 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__18874__i = 0, G__18874__a = new Array(arguments.length -  1);
while (G__18874__i < G__18874__a.length) {G__18874__a[G__18874__i] = arguments[G__18874__i + 1]; ++G__18874__i;}
  ys = new cljs.core.IndexedSeq(G__18874__a,0);
} 
return G__18871__delegate.call(this,x,ys);};
G__18871.cljs$lang$maxFixedArity = 1;
G__18871.cljs$lang$applyTo = (function (arglist__18875){
var x = cljs.core.first(arglist__18875);
var ys = cljs.core.rest(arglist__18875);
return G__18871__delegate(x,ys);
});
G__18871.cljs$core$IFn$_invoke$arity$variadic = G__18871__delegate;
return G__18871;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__18876 = null;
if (arguments.length > 1) {
var G__18877__i = 0, G__18877__a = new Array(arguments.length -  1);
while (G__18877__i < G__18877__a.length) {G__18877__a[G__18877__i] = arguments[G__18877__i + 1]; ++G__18877__i;}
G__18876 = new cljs.core.IndexedSeq(G__18877__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__18876);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__18878 = cljs.core.next(xs);
var G__18879 = cljs.core.next(ys);
xs = G__18878;
ys = G__18879;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__18880 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__18881 = cljs.core.next(s);
res = G__18880;
s = G__18881;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__18886 = ((h + (cljs.core.hash((function (){var G__18884 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__18884) : cljs.core.key.call(null,G__18884));
})()) ^ cljs.core.hash((function (){var G__18885 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__18885) : cljs.core.val.call(null,G__18885));
})()))) % (4503599627370496));
var G__18887 = cljs.core.next(s);
h = G__18886;
s = G__18887;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__18888 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__18889 = cljs.core.next(s__$1);
h = G__18888;
s__$1 = G__18889;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__18900_18910 = cljs.core.seq(fn_map);
var chunk__18901_18911 = null;
var count__18902_18912 = (0);
var i__18903_18913 = (0);
while(true){
if((i__18903_18913 < count__18902_18912)){
var vec__18904_18914 = chunk__18901_18911.cljs$core$IIndexed$_nth$arity$2(null,i__18903_18913);
var key_name_18915 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18904_18914,(0),null);
var f_18916 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18904_18914,(1),null);
var str_name_18917 = (function (){var G__18905 = key_name_18915;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__18905) : cljs.core.name.call(null,G__18905));
})();
(obj[str_name_18917] = f_18916);

var G__18918 = seq__18900_18910;
var G__18919 = chunk__18901_18911;
var G__18920 = count__18902_18912;
var G__18921 = (i__18903_18913 + (1));
seq__18900_18910 = G__18918;
chunk__18901_18911 = G__18919;
count__18902_18912 = G__18920;
i__18903_18913 = G__18921;
continue;
} else {
var temp__4126__auto___18922 = cljs.core.seq(seq__18900_18910);
if(temp__4126__auto___18922){
var seq__18900_18923__$1 = temp__4126__auto___18922;
if(cljs.core.chunked_seq_QMARK_(seq__18900_18923__$1)){
var c__4537__auto___18924 = (function (){var G__18906 = seq__18900_18923__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__18906) : cljs.core.chunk_first.call(null,G__18906));
})();
var G__18925 = (function (){var G__18907 = seq__18900_18923__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__18907) : cljs.core.chunk_rest.call(null,G__18907));
})();
var G__18926 = c__4537__auto___18924;
var G__18927 = cljs.core.count(c__4537__auto___18924);
var G__18928 = (0);
seq__18900_18910 = G__18925;
chunk__18901_18911 = G__18926;
count__18902_18912 = G__18927;
i__18903_18913 = G__18928;
continue;
} else {
var vec__18908_18929 = cljs.core.first(seq__18900_18923__$1);
var key_name_18930 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18908_18929,(0),null);
var f_18931 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18908_18929,(1),null);
var str_name_18932 = (function (){var G__18909 = key_name_18930;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__18909) : cljs.core.name.call(null,G__18909));
})();
(obj[str_name_18932] = f_18931);

var G__18933 = cljs.core.next(seq__18900_18923__$1);
var G__18934 = null;
var G__18935 = (0);
var G__18936 = (0);
seq__18900_18910 = G__18933;
chunk__18901_18911 = G__18934;
count__18902_18912 = G__18935;
i__18903_18913 = G__18936;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4171__auto__ = self__.__hash;
if(!((h__4171__auto__ == null))){
return h__4171__auto__;
} else {
var h__4171__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4171__auto____$1;

return h__4171__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4728__auto__ = this;
return cljs.core.es6_iterator(this__4728__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4728__auto__ = this;
return cljs.core.es6_iterator(this__4728__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__18938 = coll;
if(G__18938){
var bit__4431__auto__ = (G__18938.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__4431__auto__) || (G__18938.cljs$core$IReversible$)){
return true;
} else {
if((!G__18938.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__18938);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__18938);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__18939 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__18939;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__18940 = (i - (1));
var G__18941 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__18940;
r = G__18941;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__18942__i = 0, G__18942__a = new Array(arguments.length -  0);
while (G__18942__i < G__18942__a.length) {G__18942__a[G__18942__i] = arguments[G__18942__i + 0]; ++G__18942__i;}
  xs = new cljs.core.IndexedSeq(G__18942__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__18943){
var xs = cljs.core.seq(arglist__18943);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4171__auto__ = self__.__hash;
if(!((h__4171__auto__ == null))){
return h__4171__auto__;
} else {
var h__4171__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4171__auto____$1;

return h__4171__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4728__auto__ = this;
return cljs.core.es6_iterator(this__4728__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__3750__auto__ = (coll == null);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var G__18947 = coll;
if(G__18947){
var bit__4424__auto__ = (G__18947.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4424__auto__) || (G__18947.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__18949 = x;
if(G__18949){
var bit__4431__auto__ = (G__18949.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__4431__auto__) || (G__18949.cljs$core$IList$)){
return true;
} else {
if((!G__18949.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__18949);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__18949);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3738__auto__ = cljs.core.not(a.ns);
if(and__3738__auto__){
return b.ns;
} else {
return and__3738__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__18956 = a.ns;
var G__18957 = b.ns;
return goog.array.defaultCompare(G__18956,G__18957);
})();
if(((0) === nsc)){
var G__18958 = a.name;
var G__18959 = b.name;
return goog.array.defaultCompare(G__18958,G__18959);
} else {
return nsc;
}
}
} else {
var G__18960 = a.name;
var G__18961 = b.name;
return goog.array.defaultCompare(G__18960,G__18961);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__4171__auto__ = self__._hash;
if(!((h__4171__auto__ == null))){
return h__4171__auto__;
} else {
var h__4171__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__4171__auto____$1;

return h__4171__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__18963 = null;
var G__18963__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__18963__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__18963 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__18963__2.call(this,self__,coll);
case 3:
return G__18963__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__18963.cljs$core$IFn$_invoke$arity$2 = G__18963__2;
G__18963.cljs$core$IFn$_invoke$arity$3 = G__18963__3;
return G__18963;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args18962){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args18962)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__18965 = x;
if(G__18965){
var bit__4424__auto__ = (G__18965.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4424__auto__) || (G__18965.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__18967 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__18967) : cljs.core.name.call(null,G__18967));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4171__auto__ = self__.__hash;
if(!((h__4171__auto__ == null))){
return h__4171__auto__;
} else {
var h__4171__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4171__auto____$1;

return h__4171__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__18968 = ls.sval();
ls = G__18968;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4728__auto__ = this;
return cljs.core.es6_iterator(this__4728__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4171__auto__ = self__.__hash;
if(!((h__4171__auto__ == null))){
return h__4171__auto__;
} else {
var h__4171__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4171__auto____$1;

return h__4171__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4728__auto__ = this;
return cljs.core.es6_iterator(this__4728__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__18970 = s;
if(G__18970){
var bit__4424__auto__ = (G__18970.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__4424__auto__) || (G__18970.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__18971 = cljs.core.next(s__$1);
s__$1 = G__18971;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_18972 = (0);
var xs_18973 = cljs.core.seq(coll);
while(true){
if(xs_18973){
(ret[i_18972] = cljs.core.to_array(cljs.core.first(xs_18973)));

var G__18974 = (i_18972 + (1));
var G__18975 = cljs.core.next(xs_18973);
i_18972 = G__18974;
xs_18973 = G__18975;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__18978 = (i + (1));
var G__18979 = cljs.core.next(s__$1);
i = G__18978;
s__$1 = G__18979;
continue;
} else {
return a;
}
break;
}
} else {
var n__4637__auto___18980 = size;
var i_18981 = (0);
while(true){
if((i_18981 < n__4637__auto___18980)){
(a[i_18981] = init_val_or_seq);

var G__18982 = (i_18981 + (1));
i_18981 = G__18982;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__18985 = (i + (1));
var G__18986 = cljs.core.next(s__$1);
i = G__18985;
s__$1 = G__18986;
continue;
} else {
return a;
}
break;
}
} else {
var n__4637__auto___18987 = size;
var i_18988 = (0);
while(true){
if((i_18988 < n__4637__auto___18987)){
(a[i_18988] = init_val_or_seq);

var G__18989 = (i_18988 + (1));
i_18988 = G__18989;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__18992 = (i + (1));
var G__18993 = cljs.core.next(s__$1);
i = G__18992;
s__$1 = G__18993;
continue;
} else {
return a;
}
break;
}
} else {
var n__4637__auto___18994 = size;
var i_18995 = (0);
while(true){
if((i_18995 < n__4637__auto___18994)){
(a[i_18995] = init_val_or_seq);

var G__18996 = (i_18995 + (1));
i_18995 = G__18996;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__18999 = (i + (1));
var G__19000 = cljs.core.next(s__$1);
i = G__18999;
s__$1 = G__19000;
continue;
} else {
return a;
}
break;
}
} else {
var n__4637__auto___19001 = size;
var i_19002 = (0);
while(true){
if((i_19002 < n__4637__auto___19001)){
(a[i_19002] = init_val_or_seq);

var G__19003 = (i_19002 + (1));
i_19002 = G__19003;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__19004 = cljs.core.next(s__$1);
var G__19005 = (i - (1));
var G__19006 = (sum + (1));
s__$1 = G__19004;
i = G__19005;
sum = G__19006;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__19026__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__19026 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__19027__i = 0, G__19027__a = new Array(arguments.length -  2);
while (G__19027__i < G__19027__a.length) {G__19027__a[G__19027__i] = arguments[G__19027__i + 2]; ++G__19027__i;}
  zs = new cljs.core.IndexedSeq(G__19027__a,0);
} 
return G__19026__delegate.call(this,x,y,zs);};
G__19026.cljs$lang$maxFixedArity = 2;
G__19026.cljs$lang$applyTo = (function (arglist__19028){
var x = cljs.core.first(arglist__19028);
arglist__19028 = cljs.core.next(arglist__19028);
var y = cljs.core.first(arglist__19028);
var zs = cljs.core.rest(arglist__19028);
return G__19026__delegate(x,y,zs);
});
G__19026.cljs$core$IFn$_invoke$arity$variadic = G__19026__delegate;
return G__19026;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__19029 = null;
if (arguments.length > 2) {
var G__19030__i = 0, G__19030__a = new Array(arguments.length -  2);
while (G__19030__i < G__19030__a.length) {G__19030__a[G__19030__i] = arguments[G__19030__i + 2]; ++G__19030__i;}
G__19029 = new cljs.core.IndexedSeq(G__19030__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19029);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__19031__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__19031 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__19032__i = 0, G__19032__a = new Array(arguments.length -  4);
while (G__19032__i < G__19032__a.length) {G__19032__a[G__19032__i] = arguments[G__19032__i + 4]; ++G__19032__i;}
  more = new cljs.core.IndexedSeq(G__19032__a,0);
} 
return G__19031__delegate.call(this,a,b,c,d,more);};
G__19031.cljs$lang$maxFixedArity = 4;
G__19031.cljs$lang$applyTo = (function (arglist__19033){
var a = cljs.core.first(arglist__19033);
arglist__19033 = cljs.core.next(arglist__19033);
var b = cljs.core.first(arglist__19033);
arglist__19033 = cljs.core.next(arglist__19033);
var c = cljs.core.first(arglist__19033);
arglist__19033 = cljs.core.next(arglist__19033);
var d = cljs.core.first(arglist__19033);
var more = cljs.core.rest(arglist__19033);
return G__19031__delegate(a,b,c,d,more);
});
G__19031.cljs$core$IFn$_invoke$arity$variadic = G__19031__delegate;
return G__19031;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__19034 = null;
if (arguments.length > 4) {
var G__19035__i = 0, G__19035__a = new Array(arguments.length -  4);
while (G__19035__i < G__19035__a.length) {G__19035__a[G__19035__i] = arguments[G__19035__i + 4]; ++G__19035__i;}
G__19034 = new cljs.core.IndexedSeq(G__19035__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__19034);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__19036__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__19037 = ntcoll;
var G__19038 = cljs.core.first(vals);
var G__19039 = cljs.core.next(vals);
tcoll = G__19037;
val = G__19038;
vals = G__19039;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__19036 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__19040__i = 0, G__19040__a = new Array(arguments.length -  2);
while (G__19040__i < G__19040__a.length) {G__19040__a[G__19040__i] = arguments[G__19040__i + 2]; ++G__19040__i;}
  vals = new cljs.core.IndexedSeq(G__19040__a,0);
} 
return G__19036__delegate.call(this,tcoll,val,vals);};
G__19036.cljs$lang$maxFixedArity = 2;
G__19036.cljs$lang$applyTo = (function (arglist__19041){
var tcoll = cljs.core.first(arglist__19041);
arglist__19041 = cljs.core.next(arglist__19041);
var val = cljs.core.first(arglist__19041);
var vals = cljs.core.rest(arglist__19041);
return G__19036__delegate(tcoll,val,vals);
});
G__19036.cljs$core$IFn$_invoke$arity$variadic = G__19036__delegate;
return G__19036;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__19042 = null;
if (arguments.length > 2) {
var G__19043__i = 0, G__19043__a = new Array(arguments.length -  2);
while (G__19043__i < G__19043__a.length) {G__19043__a[G__19043__i] = arguments[G__19043__i + 2]; ++G__19043__i;}
G__19042 = new cljs.core.IndexedSeq(G__19043__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__19042);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__19044__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__19045 = ntcoll;
var G__19046 = cljs.core.first(kvs);
var G__19047 = cljs.core.second(kvs);
var G__19048 = cljs.core.nnext(kvs);
tcoll = G__19045;
key = G__19046;
val = G__19047;
kvs = G__19048;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__19044 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__19049__i = 0, G__19049__a = new Array(arguments.length -  3);
while (G__19049__i < G__19049__a.length) {G__19049__a[G__19049__i] = arguments[G__19049__i + 3]; ++G__19049__i;}
  kvs = new cljs.core.IndexedSeq(G__19049__a,0);
} 
return G__19044__delegate.call(this,tcoll,key,val,kvs);};
G__19044.cljs$lang$maxFixedArity = 3;
G__19044.cljs$lang$applyTo = (function (arglist__19050){
var tcoll = cljs.core.first(arglist__19050);
arglist__19050 = cljs.core.next(arglist__19050);
var key = cljs.core.first(arglist__19050);
arglist__19050 = cljs.core.next(arglist__19050);
var val = cljs.core.first(arglist__19050);
var kvs = cljs.core.rest(arglist__19050);
return G__19044__delegate(tcoll,key,val,kvs);
});
G__19044.cljs$core$IFn$_invoke$arity$variadic = G__19044__delegate;
return G__19044;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__19051 = null;
if (arguments.length > 3) {
var G__19052__i = 0, G__19052__a = new Array(arguments.length -  3);
while (G__19052__i < G__19052__a.length) {G__19052__a[G__19052__i] = arguments[G__19052__i + 3]; ++G__19052__i;}
G__19051 = new cljs.core.IndexedSeq(G__19052__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__19051);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__19053__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__19054 = ntcoll;
var G__19055 = cljs.core.first(ks);
var G__19056 = cljs.core.next(ks);
tcoll = G__19054;
key = G__19055;
ks = G__19056;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__19053 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__19057__i = 0, G__19057__a = new Array(arguments.length -  2);
while (G__19057__i < G__19057__a.length) {G__19057__a[G__19057__i] = arguments[G__19057__i + 2]; ++G__19057__i;}
  ks = new cljs.core.IndexedSeq(G__19057__a,0);
} 
return G__19053__delegate.call(this,tcoll,key,ks);};
G__19053.cljs$lang$maxFixedArity = 2;
G__19053.cljs$lang$applyTo = (function (arglist__19058){
var tcoll = cljs.core.first(arglist__19058);
arglist__19058 = cljs.core.next(arglist__19058);
var key = cljs.core.first(arglist__19058);
var ks = cljs.core.rest(arglist__19058);
return G__19053__delegate(tcoll,key,ks);
});
G__19053.cljs$core$IFn$_invoke$arity$variadic = G__19053__delegate;
return G__19053;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__19059 = null;
if (arguments.length > 2) {
var G__19060__i = 0, G__19060__a = new Array(arguments.length -  2);
while (G__19060__i < G__19060__a.length) {G__19060__a[G__19060__i] = arguments[G__19060__i + 2]; ++G__19060__i;}
G__19059 = new cljs.core.IndexedSeq(G__19060__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__19059);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__19061__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__19062 = ntcoll;
var G__19063 = cljs.core.first(vals);
var G__19064 = cljs.core.next(vals);
tcoll = G__19062;
val = G__19063;
vals = G__19064;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__19061 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__19065__i = 0, G__19065__a = new Array(arguments.length -  2);
while (G__19065__i < G__19065__a.length) {G__19065__a[G__19065__i] = arguments[G__19065__i + 2]; ++G__19065__i;}
  vals = new cljs.core.IndexedSeq(G__19065__a,0);
} 
return G__19061__delegate.call(this,tcoll,val,vals);};
G__19061.cljs$lang$maxFixedArity = 2;
G__19061.cljs$lang$applyTo = (function (arglist__19066){
var tcoll = cljs.core.first(arglist__19066);
arglist__19066 = cljs.core.next(arglist__19066);
var val = cljs.core.first(arglist__19066);
var vals = cljs.core.rest(arglist__19066);
return G__19061__delegate(tcoll,val,vals);
});
G__19061.cljs$core$IFn$_invoke$arity$variadic = G__19061__delegate;
return G__19061;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__19067 = null;
if (arguments.length > 2) {
var G__19068__i = 0, G__19068__a = new Array(arguments.length -  2);
while (G__19068__i < G__19068__a.length) {G__19068__a[G__19068__i] = arguments[G__19068__i + 2]; ++G__19068__i;}
G__19067 = new cljs.core.IndexedSeq(G__19068__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__19067);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a4681 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a4681);
} else {
var G__19279 = a4681;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19279) : f.call(null,G__19279));
}
} else {
var b4682 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a4681,b4682);
} else {
var G__19280 = a4681;
var G__19281 = b4682;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19280,G__19281) : f.call(null,G__19280,G__19281));
}
} else {
var c4683 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a4681,b4682,c4683);
} else {
var G__19282 = a4681;
var G__19283 = b4682;
var G__19284 = c4683;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19282,G__19283,G__19284) : f.call(null,G__19282,G__19283,G__19284));
}
} else {
var d4684 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a4681,b4682,c4683,d4684);
} else {
var G__19285 = a4681;
var G__19286 = b4682;
var G__19287 = c4683;
var G__19288 = d4684;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__19285,G__19286,G__19287,G__19288) : f.call(null,G__19285,G__19286,G__19287,G__19288));
}
} else {
var e4685 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a4681,b4682,c4683,d4684,e4685);
} else {
var G__19289 = a4681;
var G__19290 = b4682;
var G__19291 = c4683;
var G__19292 = d4684;
var G__19293 = e4685;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__19289,G__19290,G__19291,G__19292,G__19293) : f.call(null,G__19289,G__19290,G__19291,G__19292,G__19293));
}
} else {
var f4686 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a4681,b4682,c4683,d4684,e4685,f4686);
} else {
var G__19294 = a4681;
var G__19295 = b4682;
var G__19296 = c4683;
var G__19297 = d4684;
var G__19298 = e4685;
var G__19299 = f4686;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__19294,G__19295,G__19296,G__19297,G__19298,G__19299) : f.call(null,G__19294,G__19295,G__19296,G__19297,G__19298,G__19299));
}
} else {
var g4687 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a4681,b4682,c4683,d4684,e4685,f4686,g4687);
} else {
var G__19300 = a4681;
var G__19301 = b4682;
var G__19302 = c4683;
var G__19303 = d4684;
var G__19304 = e4685;
var G__19305 = f4686;
var G__19306 = g4687;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__19300,G__19301,G__19302,G__19303,G__19304,G__19305,G__19306) : f.call(null,G__19300,G__19301,G__19302,G__19303,G__19304,G__19305,G__19306));
}
} else {
var h4688 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a4681,b4682,c4683,d4684,e4685,f4686,g4687,h4688);
} else {
var G__19307 = a4681;
var G__19308 = b4682;
var G__19309 = c4683;
var G__19310 = d4684;
var G__19311 = e4685;
var G__19312 = f4686;
var G__19313 = g4687;
var G__19314 = h4688;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__19307,G__19308,G__19309,G__19310,G__19311,G__19312,G__19313,G__19314) : f.call(null,G__19307,G__19308,G__19309,G__19310,G__19311,G__19312,G__19313,G__19314));
}
} else {
var i4689 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a4681,b4682,c4683,d4684,e4685,f4686,g4687,h4688,i4689);
} else {
var G__19315 = a4681;
var G__19316 = b4682;
var G__19317 = c4683;
var G__19318 = d4684;
var G__19319 = e4685;
var G__19320 = f4686;
var G__19321 = g4687;
var G__19322 = h4688;
var G__19323 = i4689;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__19315,G__19316,G__19317,G__19318,G__19319,G__19320,G__19321,G__19322,G__19323) : f.call(null,G__19315,G__19316,G__19317,G__19318,G__19319,G__19320,G__19321,G__19322,G__19323));
}
} else {
var j4690 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a4681,b4682,c4683,d4684,e4685,f4686,g4687,h4688,i4689,j4690);
} else {
var G__19324 = a4681;
var G__19325 = b4682;
var G__19326 = c4683;
var G__19327 = d4684;
var G__19328 = e4685;
var G__19329 = f4686;
var G__19330 = g4687;
var G__19331 = h4688;
var G__19332 = i4689;
var G__19333 = j4690;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__19324,G__19325,G__19326,G__19327,G__19328,G__19329,G__19330,G__19331,G__19332,G__19333) : f.call(null,G__19324,G__19325,G__19326,G__19327,G__19328,G__19329,G__19330,G__19331,G__19332,G__19333));
}
} else {
var k4691 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a4681,b4682,c4683,d4684,e4685,f4686,g4687,h4688,i4689,j4690,k4691);
} else {
var G__19334 = a4681;
var G__19335 = b4682;
var G__19336 = c4683;
var G__19337 = d4684;
var G__19338 = e4685;
var G__19339 = f4686;
var G__19340 = g4687;
var G__19341 = h4688;
var G__19342 = i4689;
var G__19343 = j4690;
var G__19344 = k4691;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__19334,G__19335,G__19336,G__19337,G__19338,G__19339,G__19340,G__19341,G__19342,G__19343,G__19344) : f.call(null,G__19334,G__19335,G__19336,G__19337,G__19338,G__19339,G__19340,G__19341,G__19342,G__19343,G__19344));
}
} else {
var l4692 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a4681,b4682,c4683,d4684,e4685,f4686,g4687,h4688,i4689,j4690,k4691,l4692);
} else {
var G__19345 = a4681;
var G__19346 = b4682;
var G__19347 = c4683;
var G__19348 = d4684;
var G__19349 = e4685;
var G__19350 = f4686;
var G__19351 = g4687;
var G__19352 = h4688;
var G__19353 = i4689;
var G__19354 = j4690;
var G__19355 = k4691;
var G__19356 = l4692;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__19345,G__19346,G__19347,G__19348,G__19349,G__19350,G__19351,G__19352,G__19353,G__19354,G__19355,G__19356) : f.call(null,G__19345,G__19346,G__19347,G__19348,G__19349,G__19350,G__19351,G__19352,G__19353,G__19354,G__19355,G__19356));
}
} else {
var m4693 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a4681,b4682,c4683,d4684,e4685,f4686,g4687,h4688,i4689,j4690,k4691,l4692,m4693);
} else {
var G__19357 = a4681;
var G__19358 = b4682;
var G__19359 = c4683;
var G__19360 = d4684;
var G__19361 = e4685;
var G__19362 = f4686;
var G__19363 = g4687;
var G__19364 = h4688;
var G__19365 = i4689;
var G__19366 = j4690;
var G__19367 = k4691;
var G__19368 = l4692;
var G__19369 = m4693;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__19357,G__19358,G__19359,G__19360,G__19361,G__19362,G__19363,G__19364,G__19365,G__19366,G__19367,G__19368,G__19369) : f.call(null,G__19357,G__19358,G__19359,G__19360,G__19361,G__19362,G__19363,G__19364,G__19365,G__19366,G__19367,G__19368,G__19369));
}
} else {
var n4694 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a4681,b4682,c4683,d4684,e4685,f4686,g4687,h4688,i4689,j4690,k4691,l4692,m4693,n4694);
} else {
var G__19370 = a4681;
var G__19371 = b4682;
var G__19372 = c4683;
var G__19373 = d4684;
var G__19374 = e4685;
var G__19375 = f4686;
var G__19376 = g4687;
var G__19377 = h4688;
var G__19378 = i4689;
var G__19379 = j4690;
var G__19380 = k4691;
var G__19381 = l4692;
var G__19382 = m4693;
var G__19383 = n4694;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__19370,G__19371,G__19372,G__19373,G__19374,G__19375,G__19376,G__19377,G__19378,G__19379,G__19380,G__19381,G__19382,G__19383) : f.call(null,G__19370,G__19371,G__19372,G__19373,G__19374,G__19375,G__19376,G__19377,G__19378,G__19379,G__19380,G__19381,G__19382,G__19383));
}
} else {
var o4695 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a4681,b4682,c4683,d4684,e4685,f4686,g4687,h4688,i4689,j4690,k4691,l4692,m4693,n4694,o4695);
} else {
var G__19384 = a4681;
var G__19385 = b4682;
var G__19386 = c4683;
var G__19387 = d4684;
var G__19388 = e4685;
var G__19389 = f4686;
var G__19390 = g4687;
var G__19391 = h4688;
var G__19392 = i4689;
var G__19393 = j4690;
var G__19394 = k4691;
var G__19395 = l4692;
var G__19396 = m4693;
var G__19397 = n4694;
var G__19398 = o4695;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__19384,G__19385,G__19386,G__19387,G__19388,G__19389,G__19390,G__19391,G__19392,G__19393,G__19394,G__19395,G__19396,G__19397,G__19398) : f.call(null,G__19384,G__19385,G__19386,G__19387,G__19388,G__19389,G__19390,G__19391,G__19392,G__19393,G__19394,G__19395,G__19396,G__19397,G__19398));
}
} else {
var p4696 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a4681,b4682,c4683,d4684,e4685,f4686,g4687,h4688,i4689,j4690,k4691,l4692,m4693,n4694,o4695,p4696);
} else {
var G__19399 = a4681;
var G__19400 = b4682;
var G__19401 = c4683;
var G__19402 = d4684;
var G__19403 = e4685;
var G__19404 = f4686;
var G__19405 = g4687;
var G__19406 = h4688;
var G__19407 = i4689;
var G__19408 = j4690;
var G__19409 = k4691;
var G__19410 = l4692;
var G__19411 = m4693;
var G__19412 = n4694;
var G__19413 = o4695;
var G__19414 = p4696;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__19399,G__19400,G__19401,G__19402,G__19403,G__19404,G__19405,G__19406,G__19407,G__19408,G__19409,G__19410,G__19411,G__19412,G__19413,G__19414) : f.call(null,G__19399,G__19400,G__19401,G__19402,G__19403,G__19404,G__19405,G__19406,G__19407,G__19408,G__19409,G__19410,G__19411,G__19412,G__19413,G__19414));
}
} else {
var q4697 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a4681,b4682,c4683,d4684,e4685,f4686,g4687,h4688,i4689,j4690,k4691,l4692,m4693,n4694,o4695,p4696,q4697);
} else {
var G__19415 = a4681;
var G__19416 = b4682;
var G__19417 = c4683;
var G__19418 = d4684;
var G__19419 = e4685;
var G__19420 = f4686;
var G__19421 = g4687;
var G__19422 = h4688;
var G__19423 = i4689;
var G__19424 = j4690;
var G__19425 = k4691;
var G__19426 = l4692;
var G__19427 = m4693;
var G__19428 = n4694;
var G__19429 = o4695;
var G__19430 = p4696;
var G__19431 = q4697;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__19415,G__19416,G__19417,G__19418,G__19419,G__19420,G__19421,G__19422,G__19423,G__19424,G__19425,G__19426,G__19427,G__19428,G__19429,G__19430,G__19431) : f.call(null,G__19415,G__19416,G__19417,G__19418,G__19419,G__19420,G__19421,G__19422,G__19423,G__19424,G__19425,G__19426,G__19427,G__19428,G__19429,G__19430,G__19431));
}
} else {
var r4698 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a4681,b4682,c4683,d4684,e4685,f4686,g4687,h4688,i4689,j4690,k4691,l4692,m4693,n4694,o4695,p4696,q4697,r4698);
} else {
var G__19432 = a4681;
var G__19433 = b4682;
var G__19434 = c4683;
var G__19435 = d4684;
var G__19436 = e4685;
var G__19437 = f4686;
var G__19438 = g4687;
var G__19439 = h4688;
var G__19440 = i4689;
var G__19441 = j4690;
var G__19442 = k4691;
var G__19443 = l4692;
var G__19444 = m4693;
var G__19445 = n4694;
var G__19446 = o4695;
var G__19447 = p4696;
var G__19448 = q4697;
var G__19449 = r4698;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__19432,G__19433,G__19434,G__19435,G__19436,G__19437,G__19438,G__19439,G__19440,G__19441,G__19442,G__19443,G__19444,G__19445,G__19446,G__19447,G__19448,G__19449) : f.call(null,G__19432,G__19433,G__19434,G__19435,G__19436,G__19437,G__19438,G__19439,G__19440,G__19441,G__19442,G__19443,G__19444,G__19445,G__19446,G__19447,G__19448,G__19449));
}
} else {
var s4699 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a4681,b4682,c4683,d4684,e4685,f4686,g4687,h4688,i4689,j4690,k4691,l4692,m4693,n4694,o4695,p4696,q4697,r4698,s4699);
} else {
var G__19450 = a4681;
var G__19451 = b4682;
var G__19452 = c4683;
var G__19453 = d4684;
var G__19454 = e4685;
var G__19455 = f4686;
var G__19456 = g4687;
var G__19457 = h4688;
var G__19458 = i4689;
var G__19459 = j4690;
var G__19460 = k4691;
var G__19461 = l4692;
var G__19462 = m4693;
var G__19463 = n4694;
var G__19464 = o4695;
var G__19465 = p4696;
var G__19466 = q4697;
var G__19467 = r4698;
var G__19468 = s4699;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__19450,G__19451,G__19452,G__19453,G__19454,G__19455,G__19456,G__19457,G__19458,G__19459,G__19460,G__19461,G__19462,G__19463,G__19464,G__19465,G__19466,G__19467,G__19468) : f.call(null,G__19450,G__19451,G__19452,G__19453,G__19454,G__19455,G__19456,G__19457,G__19458,G__19459,G__19460,G__19461,G__19462,G__19463,G__19464,G__19465,G__19466,G__19467,G__19468));
}
} else {
var t4700 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a4681,b4682,c4683,d4684,e4685,f4686,g4687,h4688,i4689,j4690,k4691,l4692,m4693,n4694,o4695,p4696,q4697,r4698,s4699,t4700);
} else {
var G__19469 = a4681;
var G__19470 = b4682;
var G__19471 = c4683;
var G__19472 = d4684;
var G__19473 = e4685;
var G__19474 = f4686;
var G__19475 = g4687;
var G__19476 = h4688;
var G__19477 = i4689;
var G__19478 = j4690;
var G__19479 = k4691;
var G__19480 = l4692;
var G__19481 = m4693;
var G__19482 = n4694;
var G__19483 = o4695;
var G__19484 = p4696;
var G__19485 = q4697;
var G__19486 = r4698;
var G__19487 = s4699;
var G__19488 = t4700;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__19469,G__19470,G__19471,G__19472,G__19473,G__19474,G__19475,G__19476,G__19477,G__19478,G__19479,G__19480,G__19481,G__19482,G__19483,G__19484,G__19485,G__19486,G__19487,G__19488) : f.call(null,G__19469,G__19470,G__19471,G__19472,G__19473,G__19474,G__19475,G__19476,G__19477,G__19478,G__19479,G__19480,G__19481,G__19482,G__19483,G__19484,G__19485,G__19486,G__19487,G__19488));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__19489__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__19489 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__19490__i = 0, G__19490__a = new Array(arguments.length -  5);
while (G__19490__i < G__19490__a.length) {G__19490__a[G__19490__i] = arguments[G__19490__i + 5]; ++G__19490__i;}
  args = new cljs.core.IndexedSeq(G__19490__a,0);
} 
return G__19489__delegate.call(this,f,a,b,c,d,args);};
G__19489.cljs$lang$maxFixedArity = 5;
G__19489.cljs$lang$applyTo = (function (arglist__19491){
var f = cljs.core.first(arglist__19491);
arglist__19491 = cljs.core.next(arglist__19491);
var a = cljs.core.first(arglist__19491);
arglist__19491 = cljs.core.next(arglist__19491);
var b = cljs.core.first(arglist__19491);
arglist__19491 = cljs.core.next(arglist__19491);
var c = cljs.core.first(arglist__19491);
arglist__19491 = cljs.core.next(arglist__19491);
var d = cljs.core.first(arglist__19491);
var args = cljs.core.rest(arglist__19491);
return G__19489__delegate(f,a,b,c,d,args);
});
G__19489.cljs$core$IFn$_invoke$arity$variadic = G__19489__delegate;
return G__19489;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__19492 = null;
if (arguments.length > 5) {
var G__19493__i = 0, G__19493__a = new Array(arguments.length -  5);
while (G__19493__i < G__19493__a.length) {G__19493__a[G__19493__i] = arguments[G__19493__i + 5]; ++G__19493__i;}
G__19492 = new cljs.core.IndexedSeq(G__19493__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__19492);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__19509 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19509) : f.call(null,G__19509));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__19510 = cljs.core.meta(obj);
var G__19511 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19510,G__19511) : f.call(null,G__19510,G__19511));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__19512 = cljs.core.meta(obj);
var G__19513 = a;
var G__19514 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19512,G__19513,G__19514) : f.call(null,G__19512,G__19513,G__19514));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__19515 = cljs.core.meta(obj);
var G__19516 = a;
var G__19517 = b;
var G__19518 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__19515,G__19516,G__19517,G__19518) : f.call(null,G__19515,G__19516,G__19517,G__19518));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__19519 = cljs.core.meta(obj);
var G__19520 = a;
var G__19521 = b;
var G__19522 = c;
var G__19523 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__19519,G__19520,G__19521,G__19522,G__19523) : f.call(null,G__19519,G__19520,G__19521,G__19522,G__19523));
})());
});
var vary_meta__7 = (function() { 
var G__19524__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__19524 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__19525__i = 0, G__19525__a = new Array(arguments.length -  6);
while (G__19525__i < G__19525__a.length) {G__19525__a[G__19525__i] = arguments[G__19525__i + 6]; ++G__19525__i;}
  args = new cljs.core.IndexedSeq(G__19525__a,0);
} 
return G__19524__delegate.call(this,obj,f,a,b,c,d,args);};
G__19524.cljs$lang$maxFixedArity = 6;
G__19524.cljs$lang$applyTo = (function (arglist__19526){
var obj = cljs.core.first(arglist__19526);
arglist__19526 = cljs.core.next(arglist__19526);
var f = cljs.core.first(arglist__19526);
arglist__19526 = cljs.core.next(arglist__19526);
var a = cljs.core.first(arglist__19526);
arglist__19526 = cljs.core.next(arglist__19526);
var b = cljs.core.first(arglist__19526);
arglist__19526 = cljs.core.next(arglist__19526);
var c = cljs.core.first(arglist__19526);
arglist__19526 = cljs.core.next(arglist__19526);
var d = cljs.core.first(arglist__19526);
var args = cljs.core.rest(arglist__19526);
return G__19524__delegate(obj,f,a,b,c,d,args);
});
G__19524.cljs$core$IFn$_invoke$arity$variadic = G__19524__delegate;
return G__19524;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__19527 = null;
if (arguments.length > 6) {
var G__19528__i = 0, G__19528__a = new Array(arguments.length -  6);
while (G__19528__i < G__19528__a.length) {G__19528__a[G__19528__i] = arguments[G__19528__i + 6]; ++G__19528__i;}
G__19527 = new cljs.core.IndexedSeq(G__19528__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__19527);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__19529__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__19529 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19530__i = 0, G__19530__a = new Array(arguments.length -  2);
while (G__19530__i < G__19530__a.length) {G__19530__a[G__19530__i] = arguments[G__19530__i + 2]; ++G__19530__i;}
  more = new cljs.core.IndexedSeq(G__19530__a,0);
} 
return G__19529__delegate.call(this,x,y,more);};
G__19529.cljs$lang$maxFixedArity = 2;
G__19529.cljs$lang$applyTo = (function (arglist__19531){
var x = cljs.core.first(arglist__19531);
arglist__19531 = cljs.core.next(arglist__19531);
var y = cljs.core.first(arglist__19531);
var more = cljs.core.rest(arglist__19531);
return G__19529__delegate(x,y,more);
});
G__19529.cljs$core$IFn$_invoke$arity$variadic = G__19529__delegate;
return G__19529;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__19532 = null;
if (arguments.length > 2) {
var G__19533__i = 0, G__19533__a = new Array(arguments.length -  2);
while (G__19533__i < G__19533__a.length) {G__19533__a[G__19533__i] = arguments[G__19533__i + 2]; ++G__19533__i;}
G__19532 = new cljs.core.IndexedSeq(G__19533__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19532);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t19537 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t19537 = (function (nil_iter,meta19538){
this.nil_iter = nil_iter;
this.meta19538 = meta19538;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t19537.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t19537.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t19537.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t19537.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_19539){
var self__ = this;
var _19539__$1 = this;
return self__.meta19538;
});

cljs.core.t19537.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_19539,meta19538__$1){
var self__ = this;
var _19539__$1 = this;
return (new cljs.core.t19537(self__.nil_iter,meta19538__$1));
});

cljs.core.t19537.cljs$lang$type = true;

cljs.core.t19537.cljs$lang$ctorStr = "cljs.core/t19537";

cljs.core.t19537.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/t19537");
});

cljs.core.__GT_t19537 = (function __GT_t19537(nil_iter__$1,meta19538){
return (new cljs.core.t19537(nil_iter__$1,meta19538));
});

}

return (new cljs.core.t19537(nil_iter,new cljs.core.PersistentArrayMap(null, 5, [cljs.core.constant$keyword$8,54,cljs.core.constant$keyword$9,3063,cljs.core.constant$keyword$10,3,cljs.core.constant$keyword$11,3059,cljs.core.constant$keyword$12,"/home/travis/build/brendanator/arimaa/production/js/cljs/core.cljs"], null)));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3738__auto__ = !((lt.stepper == null));
if(and__3738__auto__){
return self__.iter.hasNext();
} else {
return and__3738__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__19540 = lt;
var G__19541 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__19540,G__19541) : self__.xform.call(null,G__19540,G__19541));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__19542 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__19542) : self__.xform.call(null,G__19542));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__19544 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__19544) : xform.call(null,G__19544));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__19546 = cljs.core.next(iters__$1);
iters__$1 = G__19546;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__4637__auto___19547 = self__.iters.length;
var i_19548 = (0);
while(true){
if((i_19548 < n__4637__auto___19547)){
(self__.nexts[i_19548] = (self__.iters[i_19548]).next());

var G__19549 = (i_19548 + (1));
i_19548 = G__19549;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3738__auto__ = !((lt.stepper == null));
if(and__3738__auto__){
return this$.hasNext();
} else {
return and__3738__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__19545 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__19545) : self__.xform.call(null,G__19545));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__19554 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__19554) : xform.call(null,G__19554));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4728__auto__ = this;
return cljs.core.es6_iterator(this__4728__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__19555_19559 = cljs.core.seq(colls);
var chunk__19556_19560 = null;
var count__19557_19561 = (0);
var i__19558_19562 = (0);
while(true){
if((i__19558_19562 < count__19557_19561)){
var coll_19563 = chunk__19556_19560.cljs$core$IIndexed$_nth$arity$2(null,i__19558_19562);
iters.push(cljs.core.iter(coll_19563));

var G__19564 = seq__19555_19559;
var G__19565 = chunk__19556_19560;
var G__19566 = count__19557_19561;
var G__19567 = (i__19558_19562 + (1));
seq__19555_19559 = G__19564;
chunk__19556_19560 = G__19565;
count__19557_19561 = G__19566;
i__19558_19562 = G__19567;
continue;
} else {
var temp__4126__auto___19568 = cljs.core.seq(seq__19555_19559);
if(temp__4126__auto___19568){
var seq__19555_19569__$1 = temp__4126__auto___19568;
if(cljs.core.chunked_seq_QMARK_(seq__19555_19569__$1)){
var c__4537__auto___19570 = cljs.core.chunk_first(seq__19555_19569__$1);
var G__19571 = cljs.core.chunk_rest(seq__19555_19569__$1);
var G__19572 = c__4537__auto___19570;
var G__19573 = cljs.core.count(c__4537__auto___19570);
var G__19574 = (0);
seq__19555_19559 = G__19571;
chunk__19556_19560 = G__19572;
count__19557_19561 = G__19573;
i__19558_19562 = G__19574;
continue;
} else {
var coll_19575 = cljs.core.first(seq__19555_19569__$1);
iters.push(cljs.core.iter(coll_19575));

var G__19576 = cljs.core.next(seq__19555_19569__$1);
var G__19577 = null;
var G__19578 = (0);
var G__19579 = (0);
seq__19555_19559 = G__19576;
chunk__19556_19560 = G__19577;
count__19557_19561 = G__19578;
i__19558_19562 = G__19579;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__3750__auto__ = cljs.core.seq(coll);
if(or__3750__auto__){
return or__3750__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__19580__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__19580 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__19581__i = 0, G__19581__a = new Array(arguments.length -  2);
while (G__19581__i < G__19581__a.length) {G__19581__a[G__19581__i] = arguments[G__19581__i + 2]; ++G__19581__i;}
  colls = new cljs.core.IndexedSeq(G__19581__a,0);
} 
return G__19580__delegate.call(this,xform,coll,colls);};
G__19580.cljs$lang$maxFixedArity = 2;
G__19580.cljs$lang$applyTo = (function (arglist__19582){
var xform = cljs.core.first(arglist__19582);
arglist__19582 = cljs.core.next(arglist__19582);
var coll = cljs.core.first(arglist__19582);
var colls = cljs.core.rest(arglist__19582);
return G__19580__delegate(xform,coll,colls);
});
G__19580.cljs$core$IFn$_invoke$arity$variadic = G__19580__delegate;
return G__19580;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__19583 = null;
if (arguments.length > 2) {
var G__19584__i = 0, G__19584__a = new Array(arguments.length -  2);
while (G__19584__i < G__19584__a.length) {G__19584__a[G__19584__i] = arguments[G__19584__i + 2]; ++G__19584__i;}
G__19583 = new cljs.core.IndexedSeq(G__19584__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__19583);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__19586 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__19586) : pred.call(null,G__19586));
})())){
var G__19587 = pred;
var G__19588 = cljs.core.next(coll);
pred = G__19587;
coll = G__19588;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__3750__auto__ = (function (){var G__19592 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__19592) : pred.call(null,G__19592));
})();
if(cljs.core.truth_(or__3750__auto__)){
return or__3750__auto__;
} else {
var G__19593 = pred;
var G__19594 = cljs.core.next(coll);
pred = G__19593;
coll = G__19594;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__19601 = null;
var G__19601__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__19601__1 = (function (x){
return cljs.core.not((function (){var G__19598 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19598) : f.call(null,G__19598));
})());
});
var G__19601__2 = (function (x,y){
return cljs.core.not((function (){var G__19599 = x;
var G__19600 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19599,G__19600) : f.call(null,G__19599,G__19600));
})());
});
var G__19601__3 = (function() { 
var G__19602__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__19602 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__19603__i = 0, G__19603__a = new Array(arguments.length -  2);
while (G__19603__i < G__19603__a.length) {G__19603__a[G__19603__i] = arguments[G__19603__i + 2]; ++G__19603__i;}
  zs = new cljs.core.IndexedSeq(G__19603__a,0);
} 
return G__19602__delegate.call(this,x,y,zs);};
G__19602.cljs$lang$maxFixedArity = 2;
G__19602.cljs$lang$applyTo = (function (arglist__19604){
var x = cljs.core.first(arglist__19604);
arglist__19604 = cljs.core.next(arglist__19604);
var y = cljs.core.first(arglist__19604);
var zs = cljs.core.rest(arglist__19604);
return G__19602__delegate(x,y,zs);
});
G__19602.cljs$core$IFn$_invoke$arity$variadic = G__19602__delegate;
return G__19602;
})()
;
G__19601 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__19601__0.call(this);
case 1:
return G__19601__1.call(this,x);
case 2:
return G__19601__2.call(this,x,y);
default:
var G__19605 = null;
if (arguments.length > 2) {
var G__19606__i = 0, G__19606__a = new Array(arguments.length -  2);
while (G__19606__i < G__19606__a.length) {G__19606__a[G__19606__i] = arguments[G__19606__i + 2]; ++G__19606__i;}
G__19605 = new cljs.core.IndexedSeq(G__19606__a,0);
}
return G__19601__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19605);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19601.cljs$lang$maxFixedArity = 2;
G__19601.cljs$lang$applyTo = G__19601__3.cljs$lang$applyTo;
G__19601.cljs$core$IFn$_invoke$arity$0 = G__19601__0;
G__19601.cljs$core$IFn$_invoke$arity$1 = G__19601__1;
G__19601.cljs$core$IFn$_invoke$arity$2 = G__19601__2;
G__19601.cljs$core$IFn$_invoke$arity$variadic = G__19601__3.cljs$core$IFn$_invoke$arity$variadic;
return G__19601;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__19607__delegate = function (args){
return x;
};
var G__19607 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__19608__i = 0, G__19608__a = new Array(arguments.length -  0);
while (G__19608__i < G__19608__a.length) {G__19608__a[G__19608__i] = arguments[G__19608__i + 0]; ++G__19608__i;}
  args = new cljs.core.IndexedSeq(G__19608__a,0);
} 
return G__19607__delegate.call(this,args);};
G__19607.cljs$lang$maxFixedArity = 0;
G__19607.cljs$lang$applyTo = (function (arglist__19609){
var args = cljs.core.seq(arglist__19609);
return G__19607__delegate(args);
});
G__19607.cljs$core$IFn$_invoke$arity$variadic = G__19607__delegate;
return G__19607;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__19664 = null;
var G__19664__0 = (function (){
var G__19637 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19637) : f.call(null,G__19637));
});
var G__19664__1 = (function (x){
var G__19638 = (function (){var G__19639 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__19639) : g.call(null,G__19639));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19638) : f.call(null,G__19638));
});
var G__19664__2 = (function (x,y){
var G__19640 = (function (){var G__19641 = x;
var G__19642 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__19641,G__19642) : g.call(null,G__19641,G__19642));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19640) : f.call(null,G__19640));
});
var G__19664__3 = (function (x,y,z){
var G__19643 = (function (){var G__19644 = x;
var G__19645 = y;
var G__19646 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__19644,G__19645,G__19646) : g.call(null,G__19644,G__19645,G__19646));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19643) : f.call(null,G__19643));
});
var G__19664__4 = (function() { 
var G__19665__delegate = function (x,y,z,args){
var G__19647 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19647) : f.call(null,G__19647));
};
var G__19665 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__19666__i = 0, G__19666__a = new Array(arguments.length -  3);
while (G__19666__i < G__19666__a.length) {G__19666__a[G__19666__i] = arguments[G__19666__i + 3]; ++G__19666__i;}
  args = new cljs.core.IndexedSeq(G__19666__a,0);
} 
return G__19665__delegate.call(this,x,y,z,args);};
G__19665.cljs$lang$maxFixedArity = 3;
G__19665.cljs$lang$applyTo = (function (arglist__19667){
var x = cljs.core.first(arglist__19667);
arglist__19667 = cljs.core.next(arglist__19667);
var y = cljs.core.first(arglist__19667);
arglist__19667 = cljs.core.next(arglist__19667);
var z = cljs.core.first(arglist__19667);
var args = cljs.core.rest(arglist__19667);
return G__19665__delegate(x,y,z,args);
});
G__19665.cljs$core$IFn$_invoke$arity$variadic = G__19665__delegate;
return G__19665;
})()
;
G__19664 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__19664__0.call(this);
case 1:
return G__19664__1.call(this,x);
case 2:
return G__19664__2.call(this,x,y);
case 3:
return G__19664__3.call(this,x,y,z);
default:
var G__19668 = null;
if (arguments.length > 3) {
var G__19669__i = 0, G__19669__a = new Array(arguments.length -  3);
while (G__19669__i < G__19669__a.length) {G__19669__a[G__19669__i] = arguments[G__19669__i + 3]; ++G__19669__i;}
G__19668 = new cljs.core.IndexedSeq(G__19669__a,0);
}
return G__19664__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__19668);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19664.cljs$lang$maxFixedArity = 3;
G__19664.cljs$lang$applyTo = G__19664__4.cljs$lang$applyTo;
G__19664.cljs$core$IFn$_invoke$arity$0 = G__19664__0;
G__19664.cljs$core$IFn$_invoke$arity$1 = G__19664__1;
G__19664.cljs$core$IFn$_invoke$arity$2 = G__19664__2;
G__19664.cljs$core$IFn$_invoke$arity$3 = G__19664__3;
G__19664.cljs$core$IFn$_invoke$arity$variadic = G__19664__4.cljs$core$IFn$_invoke$arity$variadic;
return G__19664;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__19670 = null;
var G__19670__0 = (function (){
var G__19648 = (function (){var G__19649 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__19649) : g.call(null,G__19649));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19648) : f.call(null,G__19648));
});
var G__19670__1 = (function (x){
var G__19650 = (function (){var G__19651 = (function (){var G__19652 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__19652) : h.call(null,G__19652));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__19651) : g.call(null,G__19651));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19650) : f.call(null,G__19650));
});
var G__19670__2 = (function (x,y){
var G__19653 = (function (){var G__19654 = (function (){var G__19655 = x;
var G__19656 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__19655,G__19656) : h.call(null,G__19655,G__19656));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__19654) : g.call(null,G__19654));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19653) : f.call(null,G__19653));
});
var G__19670__3 = (function (x,y,z){
var G__19657 = (function (){var G__19658 = (function (){var G__19659 = x;
var G__19660 = y;
var G__19661 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__19659,G__19660,G__19661) : h.call(null,G__19659,G__19660,G__19661));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__19658) : g.call(null,G__19658));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19657) : f.call(null,G__19657));
});
var G__19670__4 = (function() { 
var G__19671__delegate = function (x,y,z,args){
var G__19662 = (function (){var G__19663 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__19663) : g.call(null,G__19663));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19662) : f.call(null,G__19662));
};
var G__19671 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__19672__i = 0, G__19672__a = new Array(arguments.length -  3);
while (G__19672__i < G__19672__a.length) {G__19672__a[G__19672__i] = arguments[G__19672__i + 3]; ++G__19672__i;}
  args = new cljs.core.IndexedSeq(G__19672__a,0);
} 
return G__19671__delegate.call(this,x,y,z,args);};
G__19671.cljs$lang$maxFixedArity = 3;
G__19671.cljs$lang$applyTo = (function (arglist__19673){
var x = cljs.core.first(arglist__19673);
arglist__19673 = cljs.core.next(arglist__19673);
var y = cljs.core.first(arglist__19673);
arglist__19673 = cljs.core.next(arglist__19673);
var z = cljs.core.first(arglist__19673);
var args = cljs.core.rest(arglist__19673);
return G__19671__delegate(x,y,z,args);
});
G__19671.cljs$core$IFn$_invoke$arity$variadic = G__19671__delegate;
return G__19671;
})()
;
G__19670 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__19670__0.call(this);
case 1:
return G__19670__1.call(this,x);
case 2:
return G__19670__2.call(this,x,y);
case 3:
return G__19670__3.call(this,x,y,z);
default:
var G__19674 = null;
if (arguments.length > 3) {
var G__19675__i = 0, G__19675__a = new Array(arguments.length -  3);
while (G__19675__i < G__19675__a.length) {G__19675__a[G__19675__i] = arguments[G__19675__i + 3]; ++G__19675__i;}
G__19674 = new cljs.core.IndexedSeq(G__19675__a,0);
}
return G__19670__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__19674);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19670.cljs$lang$maxFixedArity = 3;
G__19670.cljs$lang$applyTo = G__19670__4.cljs$lang$applyTo;
G__19670.cljs$core$IFn$_invoke$arity$0 = G__19670__0;
G__19670.cljs$core$IFn$_invoke$arity$1 = G__19670__1;
G__19670.cljs$core$IFn$_invoke$arity$2 = G__19670__2;
G__19670.cljs$core$IFn$_invoke$arity$3 = G__19670__3;
G__19670.cljs$core$IFn$_invoke$arity$variadic = G__19670__4.cljs$core$IFn$_invoke$arity$variadic;
return G__19670;
})()
});
var comp__4 = (function() { 
var G__19676__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__19677__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__19678 = cljs.core.first(fs__$2).call(null,ret);
var G__19679 = cljs.core.next(fs__$2);
ret = G__19678;
fs__$2 = G__19679;
continue;
} else {
return ret;
}
break;
}
};
var G__19677 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__19680__i = 0, G__19680__a = new Array(arguments.length -  0);
while (G__19680__i < G__19680__a.length) {G__19680__a[G__19680__i] = arguments[G__19680__i + 0]; ++G__19680__i;}
  args = new cljs.core.IndexedSeq(G__19680__a,0);
} 
return G__19677__delegate.call(this,args);};
G__19677.cljs$lang$maxFixedArity = 0;
G__19677.cljs$lang$applyTo = (function (arglist__19681){
var args = cljs.core.seq(arglist__19681);
return G__19677__delegate(args);
});
G__19677.cljs$core$IFn$_invoke$arity$variadic = G__19677__delegate;
return G__19677;
})()
;
;})(fs__$1))
};
var G__19676 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__19682__i = 0, G__19682__a = new Array(arguments.length -  3);
while (G__19682__i < G__19682__a.length) {G__19682__a[G__19682__i] = arguments[G__19682__i + 3]; ++G__19682__i;}
  fs = new cljs.core.IndexedSeq(G__19682__a,0);
} 
return G__19676__delegate.call(this,f1,f2,f3,fs);};
G__19676.cljs$lang$maxFixedArity = 3;
G__19676.cljs$lang$applyTo = (function (arglist__19683){
var f1 = cljs.core.first(arglist__19683);
arglist__19683 = cljs.core.next(arglist__19683);
var f2 = cljs.core.first(arglist__19683);
arglist__19683 = cljs.core.next(arglist__19683);
var f3 = cljs.core.first(arglist__19683);
var fs = cljs.core.rest(arglist__19683);
return G__19676__delegate(f1,f2,f3,fs);
});
G__19676.cljs$core$IFn$_invoke$arity$variadic = G__19676__delegate;
return G__19676;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__19684 = null;
if (arguments.length > 3) {
var G__19685__i = 0, G__19685__a = new Array(arguments.length -  3);
while (G__19685__i < G__19685__a.length) {G__19685__a[G__19685__i] = arguments[G__19685__i + 3]; ++G__19685__i;}
G__19684 = new cljs.core.IndexedSeq(G__19685__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__19684);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__19770 = null;
var G__19770__0 = (function (){
var G__19728 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19728) : f.call(null,G__19728));
});
var G__19770__1 = (function (x){
var G__19729 = arg1;
var G__19730 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19729,G__19730) : f.call(null,G__19729,G__19730));
});
var G__19770__2 = (function (x,y){
var G__19731 = arg1;
var G__19732 = x;
var G__19733 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19731,G__19732,G__19733) : f.call(null,G__19731,G__19732,G__19733));
});
var G__19770__3 = (function (x,y,z){
var G__19734 = arg1;
var G__19735 = x;
var G__19736 = y;
var G__19737 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__19734,G__19735,G__19736,G__19737) : f.call(null,G__19734,G__19735,G__19736,G__19737));
});
var G__19770__4 = (function() { 
var G__19771__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__19771 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__19772__i = 0, G__19772__a = new Array(arguments.length -  3);
while (G__19772__i < G__19772__a.length) {G__19772__a[G__19772__i] = arguments[G__19772__i + 3]; ++G__19772__i;}
  args = new cljs.core.IndexedSeq(G__19772__a,0);
} 
return G__19771__delegate.call(this,x,y,z,args);};
G__19771.cljs$lang$maxFixedArity = 3;
G__19771.cljs$lang$applyTo = (function (arglist__19773){
var x = cljs.core.first(arglist__19773);
arglist__19773 = cljs.core.next(arglist__19773);
var y = cljs.core.first(arglist__19773);
arglist__19773 = cljs.core.next(arglist__19773);
var z = cljs.core.first(arglist__19773);
var args = cljs.core.rest(arglist__19773);
return G__19771__delegate(x,y,z,args);
});
G__19771.cljs$core$IFn$_invoke$arity$variadic = G__19771__delegate;
return G__19771;
})()
;
G__19770 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__19770__0.call(this);
case 1:
return G__19770__1.call(this,x);
case 2:
return G__19770__2.call(this,x,y);
case 3:
return G__19770__3.call(this,x,y,z);
default:
var G__19774 = null;
if (arguments.length > 3) {
var G__19775__i = 0, G__19775__a = new Array(arguments.length -  3);
while (G__19775__i < G__19775__a.length) {G__19775__a[G__19775__i] = arguments[G__19775__i + 3]; ++G__19775__i;}
G__19774 = new cljs.core.IndexedSeq(G__19775__a,0);
}
return G__19770__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__19774);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19770.cljs$lang$maxFixedArity = 3;
G__19770.cljs$lang$applyTo = G__19770__4.cljs$lang$applyTo;
G__19770.cljs$core$IFn$_invoke$arity$0 = G__19770__0;
G__19770.cljs$core$IFn$_invoke$arity$1 = G__19770__1;
G__19770.cljs$core$IFn$_invoke$arity$2 = G__19770__2;
G__19770.cljs$core$IFn$_invoke$arity$3 = G__19770__3;
G__19770.cljs$core$IFn$_invoke$arity$variadic = G__19770__4.cljs$core$IFn$_invoke$arity$variadic;
return G__19770;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__19776 = null;
var G__19776__0 = (function (){
var G__19738 = arg1;
var G__19739 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19738,G__19739) : f.call(null,G__19738,G__19739));
});
var G__19776__1 = (function (x){
var G__19740 = arg1;
var G__19741 = arg2;
var G__19742 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19740,G__19741,G__19742) : f.call(null,G__19740,G__19741,G__19742));
});
var G__19776__2 = (function (x,y){
var G__19743 = arg1;
var G__19744 = arg2;
var G__19745 = x;
var G__19746 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__19743,G__19744,G__19745,G__19746) : f.call(null,G__19743,G__19744,G__19745,G__19746));
});
var G__19776__3 = (function (x,y,z){
var G__19747 = arg1;
var G__19748 = arg2;
var G__19749 = x;
var G__19750 = y;
var G__19751 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__19747,G__19748,G__19749,G__19750,G__19751) : f.call(null,G__19747,G__19748,G__19749,G__19750,G__19751));
});
var G__19776__4 = (function() { 
var G__19777__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__19777 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__19778__i = 0, G__19778__a = new Array(arguments.length -  3);
while (G__19778__i < G__19778__a.length) {G__19778__a[G__19778__i] = arguments[G__19778__i + 3]; ++G__19778__i;}
  args = new cljs.core.IndexedSeq(G__19778__a,0);
} 
return G__19777__delegate.call(this,x,y,z,args);};
G__19777.cljs$lang$maxFixedArity = 3;
G__19777.cljs$lang$applyTo = (function (arglist__19779){
var x = cljs.core.first(arglist__19779);
arglist__19779 = cljs.core.next(arglist__19779);
var y = cljs.core.first(arglist__19779);
arglist__19779 = cljs.core.next(arglist__19779);
var z = cljs.core.first(arglist__19779);
var args = cljs.core.rest(arglist__19779);
return G__19777__delegate(x,y,z,args);
});
G__19777.cljs$core$IFn$_invoke$arity$variadic = G__19777__delegate;
return G__19777;
})()
;
G__19776 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__19776__0.call(this);
case 1:
return G__19776__1.call(this,x);
case 2:
return G__19776__2.call(this,x,y);
case 3:
return G__19776__3.call(this,x,y,z);
default:
var G__19780 = null;
if (arguments.length > 3) {
var G__19781__i = 0, G__19781__a = new Array(arguments.length -  3);
while (G__19781__i < G__19781__a.length) {G__19781__a[G__19781__i] = arguments[G__19781__i + 3]; ++G__19781__i;}
G__19780 = new cljs.core.IndexedSeq(G__19781__a,0);
}
return G__19776__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__19780);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19776.cljs$lang$maxFixedArity = 3;
G__19776.cljs$lang$applyTo = G__19776__4.cljs$lang$applyTo;
G__19776.cljs$core$IFn$_invoke$arity$0 = G__19776__0;
G__19776.cljs$core$IFn$_invoke$arity$1 = G__19776__1;
G__19776.cljs$core$IFn$_invoke$arity$2 = G__19776__2;
G__19776.cljs$core$IFn$_invoke$arity$3 = G__19776__3;
G__19776.cljs$core$IFn$_invoke$arity$variadic = G__19776__4.cljs$core$IFn$_invoke$arity$variadic;
return G__19776;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__19782 = null;
var G__19782__0 = (function (){
var G__19752 = arg1;
var G__19753 = arg2;
var G__19754 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19752,G__19753,G__19754) : f.call(null,G__19752,G__19753,G__19754));
});
var G__19782__1 = (function (x){
var G__19755 = arg1;
var G__19756 = arg2;
var G__19757 = arg3;
var G__19758 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__19755,G__19756,G__19757,G__19758) : f.call(null,G__19755,G__19756,G__19757,G__19758));
});
var G__19782__2 = (function (x,y){
var G__19759 = arg1;
var G__19760 = arg2;
var G__19761 = arg3;
var G__19762 = x;
var G__19763 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__19759,G__19760,G__19761,G__19762,G__19763) : f.call(null,G__19759,G__19760,G__19761,G__19762,G__19763));
});
var G__19782__3 = (function (x,y,z){
var G__19764 = arg1;
var G__19765 = arg2;
var G__19766 = arg3;
var G__19767 = x;
var G__19768 = y;
var G__19769 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__19764,G__19765,G__19766,G__19767,G__19768,G__19769) : f.call(null,G__19764,G__19765,G__19766,G__19767,G__19768,G__19769));
});
var G__19782__4 = (function() { 
var G__19783__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__19783 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__19784__i = 0, G__19784__a = new Array(arguments.length -  3);
while (G__19784__i < G__19784__a.length) {G__19784__a[G__19784__i] = arguments[G__19784__i + 3]; ++G__19784__i;}
  args = new cljs.core.IndexedSeq(G__19784__a,0);
} 
return G__19783__delegate.call(this,x,y,z,args);};
G__19783.cljs$lang$maxFixedArity = 3;
G__19783.cljs$lang$applyTo = (function (arglist__19785){
var x = cljs.core.first(arglist__19785);
arglist__19785 = cljs.core.next(arglist__19785);
var y = cljs.core.first(arglist__19785);
arglist__19785 = cljs.core.next(arglist__19785);
var z = cljs.core.first(arglist__19785);
var args = cljs.core.rest(arglist__19785);
return G__19783__delegate(x,y,z,args);
});
G__19783.cljs$core$IFn$_invoke$arity$variadic = G__19783__delegate;
return G__19783;
})()
;
G__19782 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__19782__0.call(this);
case 1:
return G__19782__1.call(this,x);
case 2:
return G__19782__2.call(this,x,y);
case 3:
return G__19782__3.call(this,x,y,z);
default:
var G__19786 = null;
if (arguments.length > 3) {
var G__19787__i = 0, G__19787__a = new Array(arguments.length -  3);
while (G__19787__i < G__19787__a.length) {G__19787__a[G__19787__i] = arguments[G__19787__i + 3]; ++G__19787__i;}
G__19786 = new cljs.core.IndexedSeq(G__19787__a,0);
}
return G__19782__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__19786);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19782.cljs$lang$maxFixedArity = 3;
G__19782.cljs$lang$applyTo = G__19782__4.cljs$lang$applyTo;
G__19782.cljs$core$IFn$_invoke$arity$0 = G__19782__0;
G__19782.cljs$core$IFn$_invoke$arity$1 = G__19782__1;
G__19782.cljs$core$IFn$_invoke$arity$2 = G__19782__2;
G__19782.cljs$core$IFn$_invoke$arity$3 = G__19782__3;
G__19782.cljs$core$IFn$_invoke$arity$variadic = G__19782__4.cljs$core$IFn$_invoke$arity$variadic;
return G__19782;
})()
});
var partial__5 = (function() { 
var G__19788__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__19789__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__19789 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__19790__i = 0, G__19790__a = new Array(arguments.length -  0);
while (G__19790__i < G__19790__a.length) {G__19790__a[G__19790__i] = arguments[G__19790__i + 0]; ++G__19790__i;}
  args = new cljs.core.IndexedSeq(G__19790__a,0);
} 
return G__19789__delegate.call(this,args);};
G__19789.cljs$lang$maxFixedArity = 0;
G__19789.cljs$lang$applyTo = (function (arglist__19791){
var args = cljs.core.seq(arglist__19791);
return G__19789__delegate(args);
});
G__19789.cljs$core$IFn$_invoke$arity$variadic = G__19789__delegate;
return G__19789;
})()
;
};
var G__19788 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__19792__i = 0, G__19792__a = new Array(arguments.length -  4);
while (G__19792__i < G__19792__a.length) {G__19792__a[G__19792__i] = arguments[G__19792__i + 4]; ++G__19792__i;}
  more = new cljs.core.IndexedSeq(G__19792__a,0);
} 
return G__19788__delegate.call(this,f,arg1,arg2,arg3,more);};
G__19788.cljs$lang$maxFixedArity = 4;
G__19788.cljs$lang$applyTo = (function (arglist__19793){
var f = cljs.core.first(arglist__19793);
arglist__19793 = cljs.core.next(arglist__19793);
var arg1 = cljs.core.first(arglist__19793);
arglist__19793 = cljs.core.next(arglist__19793);
var arg2 = cljs.core.first(arglist__19793);
arglist__19793 = cljs.core.next(arglist__19793);
var arg3 = cljs.core.first(arglist__19793);
var more = cljs.core.rest(arglist__19793);
return G__19788__delegate(f,arg1,arg2,arg3,more);
});
G__19788.cljs$core$IFn$_invoke$arity$variadic = G__19788__delegate;
return G__19788;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__19794 = null;
if (arguments.length > 4) {
var G__19795__i = 0, G__19795__a = new Array(arguments.length -  4);
while (G__19795__i < G__19795__a.length) {G__19795__a[G__19795__i] = arguments[G__19795__i + 4]; ++G__19795__i;}
G__19794 = new cljs.core.IndexedSeq(G__19795__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__19794);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__19828 = null;
var G__19828__1 = (function (a){
var G__19812 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19812) : f.call(null,G__19812));
});
var G__19828__2 = (function (a,b){
var G__19813 = (((a == null))?x:a);
var G__19814 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19813,G__19814) : f.call(null,G__19813,G__19814));
});
var G__19828__3 = (function (a,b,c){
var G__19815 = (((a == null))?x:a);
var G__19816 = b;
var G__19817 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19815,G__19816,G__19817) : f.call(null,G__19815,G__19816,G__19817));
});
var G__19828__4 = (function() { 
var G__19829__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__19829 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__19830__i = 0, G__19830__a = new Array(arguments.length -  3);
while (G__19830__i < G__19830__a.length) {G__19830__a[G__19830__i] = arguments[G__19830__i + 3]; ++G__19830__i;}
  ds = new cljs.core.IndexedSeq(G__19830__a,0);
} 
return G__19829__delegate.call(this,a,b,c,ds);};
G__19829.cljs$lang$maxFixedArity = 3;
G__19829.cljs$lang$applyTo = (function (arglist__19831){
var a = cljs.core.first(arglist__19831);
arglist__19831 = cljs.core.next(arglist__19831);
var b = cljs.core.first(arglist__19831);
arglist__19831 = cljs.core.next(arglist__19831);
var c = cljs.core.first(arglist__19831);
var ds = cljs.core.rest(arglist__19831);
return G__19829__delegate(a,b,c,ds);
});
G__19829.cljs$core$IFn$_invoke$arity$variadic = G__19829__delegate;
return G__19829;
})()
;
G__19828 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__19828__1.call(this,a);
case 2:
return G__19828__2.call(this,a,b);
case 3:
return G__19828__3.call(this,a,b,c);
default:
var G__19832 = null;
if (arguments.length > 3) {
var G__19833__i = 0, G__19833__a = new Array(arguments.length -  3);
while (G__19833__i < G__19833__a.length) {G__19833__a[G__19833__i] = arguments[G__19833__i + 3]; ++G__19833__i;}
G__19832 = new cljs.core.IndexedSeq(G__19833__a,0);
}
return G__19828__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__19832);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19828.cljs$lang$maxFixedArity = 3;
G__19828.cljs$lang$applyTo = G__19828__4.cljs$lang$applyTo;
G__19828.cljs$core$IFn$_invoke$arity$1 = G__19828__1;
G__19828.cljs$core$IFn$_invoke$arity$2 = G__19828__2;
G__19828.cljs$core$IFn$_invoke$arity$3 = G__19828__3;
G__19828.cljs$core$IFn$_invoke$arity$variadic = G__19828__4.cljs$core$IFn$_invoke$arity$variadic;
return G__19828;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__19834 = null;
var G__19834__2 = (function (a,b){
var G__19818 = (((a == null))?x:a);
var G__19819 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19818,G__19819) : f.call(null,G__19818,G__19819));
});
var G__19834__3 = (function (a,b,c){
var G__19820 = (((a == null))?x:a);
var G__19821 = (((b == null))?y:b);
var G__19822 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19820,G__19821,G__19822) : f.call(null,G__19820,G__19821,G__19822));
});
var G__19834__4 = (function() { 
var G__19835__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__19835 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__19836__i = 0, G__19836__a = new Array(arguments.length -  3);
while (G__19836__i < G__19836__a.length) {G__19836__a[G__19836__i] = arguments[G__19836__i + 3]; ++G__19836__i;}
  ds = new cljs.core.IndexedSeq(G__19836__a,0);
} 
return G__19835__delegate.call(this,a,b,c,ds);};
G__19835.cljs$lang$maxFixedArity = 3;
G__19835.cljs$lang$applyTo = (function (arglist__19837){
var a = cljs.core.first(arglist__19837);
arglist__19837 = cljs.core.next(arglist__19837);
var b = cljs.core.first(arglist__19837);
arglist__19837 = cljs.core.next(arglist__19837);
var c = cljs.core.first(arglist__19837);
var ds = cljs.core.rest(arglist__19837);
return G__19835__delegate(a,b,c,ds);
});
G__19835.cljs$core$IFn$_invoke$arity$variadic = G__19835__delegate;
return G__19835;
})()
;
G__19834 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__19834__2.call(this,a,b);
case 3:
return G__19834__3.call(this,a,b,c);
default:
var G__19838 = null;
if (arguments.length > 3) {
var G__19839__i = 0, G__19839__a = new Array(arguments.length -  3);
while (G__19839__i < G__19839__a.length) {G__19839__a[G__19839__i] = arguments[G__19839__i + 3]; ++G__19839__i;}
G__19838 = new cljs.core.IndexedSeq(G__19839__a,0);
}
return G__19834__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__19838);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19834.cljs$lang$maxFixedArity = 3;
G__19834.cljs$lang$applyTo = G__19834__4.cljs$lang$applyTo;
G__19834.cljs$core$IFn$_invoke$arity$2 = G__19834__2;
G__19834.cljs$core$IFn$_invoke$arity$3 = G__19834__3;
G__19834.cljs$core$IFn$_invoke$arity$variadic = G__19834__4.cljs$core$IFn$_invoke$arity$variadic;
return G__19834;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__19840 = null;
var G__19840__2 = (function (a,b){
var G__19823 = (((a == null))?x:a);
var G__19824 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19823,G__19824) : f.call(null,G__19823,G__19824));
});
var G__19840__3 = (function (a,b,c){
var G__19825 = (((a == null))?x:a);
var G__19826 = (((b == null))?y:b);
var G__19827 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19825,G__19826,G__19827) : f.call(null,G__19825,G__19826,G__19827));
});
var G__19840__4 = (function() { 
var G__19841__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__19841 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__19842__i = 0, G__19842__a = new Array(arguments.length -  3);
while (G__19842__i < G__19842__a.length) {G__19842__a[G__19842__i] = arguments[G__19842__i + 3]; ++G__19842__i;}
  ds = new cljs.core.IndexedSeq(G__19842__a,0);
} 
return G__19841__delegate.call(this,a,b,c,ds);};
G__19841.cljs$lang$maxFixedArity = 3;
G__19841.cljs$lang$applyTo = (function (arglist__19843){
var a = cljs.core.first(arglist__19843);
arglist__19843 = cljs.core.next(arglist__19843);
var b = cljs.core.first(arglist__19843);
arglist__19843 = cljs.core.next(arglist__19843);
var c = cljs.core.first(arglist__19843);
var ds = cljs.core.rest(arglist__19843);
return G__19841__delegate(a,b,c,ds);
});
G__19841.cljs$core$IFn$_invoke$arity$variadic = G__19841__delegate;
return G__19841;
})()
;
G__19840 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__19840__2.call(this,a,b);
case 3:
return G__19840__3.call(this,a,b,c);
default:
var G__19844 = null;
if (arguments.length > 3) {
var G__19845__i = 0, G__19845__a = new Array(arguments.length -  3);
while (G__19845__i < G__19845__a.length) {G__19845__a[G__19845__i] = arguments[G__19845__i + 3]; ++G__19845__i;}
G__19844 = new cljs.core.IndexedSeq(G__19845__a,0);
}
return G__19840__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__19844);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19840.cljs$lang$maxFixedArity = 3;
G__19840.cljs$lang$applyTo = G__19840__4.cljs$lang$applyTo;
G__19840.cljs$core$IFn$_invoke$arity$2 = G__19840__2;
G__19840.cljs$core$IFn$_invoke$arity$3 = G__19840__3;
G__19840.cljs$core$IFn$_invoke$arity$variadic = G__19840__4.cljs$core$IFn$_invoke$arity$variadic;
return G__19840;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__19876 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__19876) : cljs.core.volatile_BANG_.call(null,G__19876));
})();
return ((function (i){
return (function() {
var G__19906 = null;
var G__19906__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__19906__1 = (function (result){
var G__19877 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__19877) : rf.call(null,G__19877));
});
var G__19906__2 = (function (result,input){
var G__19878 = result;
var G__19879 = (function (){var G__19880 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__19881 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19880,G__19881) : f.call(null,G__19880,G__19881));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19878,G__19879) : rf.call(null,G__19878,G__19879));
});
G__19906 = function(result,input){
switch(arguments.length){
case 0:
return G__19906__0.call(this);
case 1:
return G__19906__1.call(this,result);
case 2:
return G__19906__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19906.cljs$core$IFn$_invoke$arity$0 = G__19906__0;
G__19906.cljs$core$IFn$_invoke$arity$1 = G__19906__1;
G__19906.cljs$core$IFn$_invoke$arity$2 = G__19906__2;
return G__19906;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4637__auto___19907 = size;
var i_19908 = (0);
while(true){
if((i_19908 < n__4637__auto___19907)){
cljs.core.chunk_append(b,(function (){var G__19902 = (idx + i_19908);
var G__19903 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_19908);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19902,G__19903) : f.call(null,G__19902,G__19903));
})());

var G__19909 = (i_19908 + (1));
i_19908 = G__19909;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__19904 = idx;
var G__19905 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19904,G__19905) : f.call(null,G__19904,G__19905));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__19928 = null;
var G__19928__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__19928__1 = (function (result){
var G__19922 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__19922) : rf.call(null,G__19922));
});
var G__19928__2 = (function (result,input){
var v = (function (){var G__19923 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19923) : f.call(null,G__19923));
})();
if((v == null)){
return result;
} else {
var G__19924 = result;
var G__19925 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19924,G__19925) : rf.call(null,G__19924,G__19925));
}
});
G__19928 = function(result,input){
switch(arguments.length){
case 0:
return G__19928__0.call(this);
case 1:
return G__19928__1.call(this,result);
case 2:
return G__19928__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19928.cljs$core$IFn$_invoke$arity$0 = G__19928__0;
G__19928.cljs$core$IFn$_invoke$arity$1 = G__19928__1;
G__19928.cljs$core$IFn$_invoke$arity$2 = G__19928__2;
return G__19928;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4637__auto___19929 = size;
var i_19930 = (0);
while(true){
if((i_19930 < n__4637__auto___19929)){
var x_19931 = (function (){var G__19926 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_19930);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19926) : f.call(null,G__19926));
})();
if((x_19931 == null)){
} else {
cljs.core.chunk_append(b,x_19931);
}

var G__19932 = (i_19930 + (1));
i_19930 = G__19932;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__19927 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19927) : f.call(null,G__19927));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__19933 = this$__$1;
return goog.getUid(G__19933);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__19934 = cljs.core.seq(self__.watches);
var chunk__19935 = null;
var count__19936 = (0);
var i__19937 = (0);
while(true){
if((i__19937 < count__19936)){
var vec__19938 = chunk__19935.cljs$core$IIndexed$_nth$arity$2(null,i__19937);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19938,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19938,(1),null);
var G__19939_19948 = key;
var G__19940_19949 = this$__$1;
var G__19941_19950 = oldval;
var G__19942_19951 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__19939_19948,G__19940_19949,G__19941_19950,G__19942_19951) : f.call(null,G__19939_19948,G__19940_19949,G__19941_19950,G__19942_19951));

var G__19952 = seq__19934;
var G__19953 = chunk__19935;
var G__19954 = count__19936;
var G__19955 = (i__19937 + (1));
seq__19934 = G__19952;
chunk__19935 = G__19953;
count__19936 = G__19954;
i__19937 = G__19955;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__19934);
if(temp__4126__auto__){
var seq__19934__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__19934__$1)){
var c__4537__auto__ = cljs.core.chunk_first(seq__19934__$1);
var G__19956 = cljs.core.chunk_rest(seq__19934__$1);
var G__19957 = c__4537__auto__;
var G__19958 = cljs.core.count(c__4537__auto__);
var G__19959 = (0);
seq__19934 = G__19956;
chunk__19935 = G__19957;
count__19936 = G__19958;
i__19937 = G__19959;
continue;
} else {
var vec__19943 = cljs.core.first(seq__19934__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19943,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19943,(1),null);
var G__19944_19960 = key;
var G__19945_19961 = this$__$1;
var G__19946_19962 = oldval;
var G__19947_19963 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__19944_19960,G__19945_19961,G__19946_19962,G__19947_19963) : f.call(null,G__19944_19960,G__19945_19961,G__19946_19962,G__19947_19963));

var G__19964 = cljs.core.next(seq__19934__$1);
var G__19965 = null;
var G__19966 = (0);
var G__19967 = (0);
seq__19934 = G__19964;
chunk__19935 = G__19965;
count__19936 = G__19966;
i__19937 = G__19967;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__19971__delegate = function (x,p__19968){
var map__19970 = p__19968;
var map__19970__$1 = ((cljs.core.seq_QMARK_(map__19970))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__19970):map__19970);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__19970__$1,cljs.core.constant$keyword$13);
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__19970__$1,cljs.core.constant$keyword$3);
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__19971 = function (x,var_args){
var p__19968 = null;
if (arguments.length > 1) {
var G__19972__i = 0, G__19972__a = new Array(arguments.length -  1);
while (G__19972__i < G__19972__a.length) {G__19972__a[G__19972__i] = arguments[G__19972__i + 1]; ++G__19972__i;}
  p__19968 = new cljs.core.IndexedSeq(G__19972__a,0);
} 
return G__19971__delegate.call(this,x,p__19968);};
G__19971.cljs$lang$maxFixedArity = 1;
G__19971.cljs$lang$applyTo = (function (arglist__19973){
var x = cljs.core.first(arglist__19973);
var p__19968 = cljs.core.rest(arglist__19973);
return G__19971__delegate(x,p__19968);
});
G__19971.cljs$core$IFn$_invoke$arity$variadic = G__19971__delegate;
return G__19971;
})()
;
atom = function(x,var_args){
var p__19968 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__19974 = null;
if (arguments.length > 1) {
var G__19975__i = 0, G__19975__a = new Array(arguments.length -  1);
while (G__19975__i < G__19975__a.length) {G__19975__a[G__19975__i] = arguments[G__19975__i + 1]; ++G__19975__i;}
G__19974 = new cljs.core.IndexedSeq(G__19975__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__19974);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__19978 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__19978) : validate.call(null,G__19978));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__19979 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__19979) : cljs.core.pr_str.call(null,G__19979));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__19986 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19986) : f.call(null,G__19986));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__19987 = a.state;
var G__19988 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19987,G__19988) : f.call(null,G__19987,G__19988));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__19989 = a.state;
var G__19990 = x;
var G__19991 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19989,G__19990,G__19991) : f.call(null,G__19989,G__19990,G__19991));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__19992__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__19992 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__19993__i = 0, G__19993__a = new Array(arguments.length -  4);
while (G__19993__i < G__19993__a.length) {G__19993__a[G__19993__i] = arguments[G__19993__i + 4]; ++G__19993__i;}
  more = new cljs.core.IndexedSeq(G__19993__a,0);
} 
return G__19992__delegate.call(this,a,f,x,y,more);};
G__19992.cljs$lang$maxFixedArity = 4;
G__19992.cljs$lang$applyTo = (function (arglist__19994){
var a = cljs.core.first(arglist__19994);
arglist__19994 = cljs.core.next(arglist__19994);
var f = cljs.core.first(arglist__19994);
arglist__19994 = cljs.core.next(arglist__19994);
var x = cljs.core.first(arglist__19994);
arglist__19994 = cljs.core.next(arglist__19994);
var y = cljs.core.first(arglist__19994);
var more = cljs.core.rest(arglist__19994);
return G__19992__delegate(a,f,x,y,more);
});
G__19992.cljs$core$IFn$_invoke$arity$variadic = G__19992__delegate;
return G__19992;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__19995 = null;
if (arguments.length > 4) {
var G__19996__i = 0, G__19996__a = new Array(arguments.length -  4);
while (G__19996__i < G__19996__a.length) {G__19996__a[G__19996__i] = arguments[G__19996__i + 4]; ++G__19996__i;}
G__19995 = new cljs.core.IndexedSeq(G__19996__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__19995);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__20063 = null;
var G__20063__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__20063__1 = (function (result){
var G__20030 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__20030) : rf.call(null,G__20030));
});
var G__20063__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__20031 = i;
var G__20032 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20031,G__20032) : f.call(null,G__20031,G__20032));
})();
if((v == null)){
return result;
} else {
var G__20033 = result;
var G__20034 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20033,G__20034) : rf.call(null,G__20033,G__20034));
}
});
G__20063 = function(result,input){
switch(arguments.length){
case 0:
return G__20063__0.call(this);
case 1:
return G__20063__1.call(this,result);
case 2:
return G__20063__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20063.cljs$core$IFn$_invoke$arity$0 = G__20063__0;
G__20063.cljs$core$IFn$_invoke$arity$1 = G__20063__1;
G__20063.cljs$core$IFn$_invoke$arity$2 = G__20063__2;
return G__20063;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4637__auto___20064 = size;
var i_20065 = (0);
while(true){
if((i_20065 < n__4637__auto___20064)){
var x_20066 = (function (){var G__20059 = (idx + i_20065);
var G__20060 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_20065);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20059,G__20060) : f.call(null,G__20059,G__20060));
})();
if((x_20066 == null)){
} else {
cljs.core.chunk_append(b,x_20066);
}

var G__20067 = (i_20065 + (1));
i_20065 = G__20067;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__20061 = idx;
var G__20062 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20061,G__20062) : f.call(null,G__20061,G__20062));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__20281 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20281) : p.call(null,G__20281));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3738__auto__ = (function (){var G__20283 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20283) : p.call(null,G__20283));
})();
if(cljs.core.truth_(and__3738__auto__)){
var G__20284 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20284) : p.call(null,G__20284));
} else {
return and__3738__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3738__auto__ = (function (){var G__20286 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20286) : p.call(null,G__20286));
})();
if(cljs.core.truth_(and__3738__auto__)){
var and__3738__auto____$1 = (function (){var G__20288 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20288) : p.call(null,G__20288));
})();
if(cljs.core.truth_(and__3738__auto____$1)){
var G__20289 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20289) : p.call(null,G__20289));
} else {
return and__3738__auto____$1;
}
} else {
return and__3738__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__20458__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__20458 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__20459__i = 0, G__20459__a = new Array(arguments.length -  3);
while (G__20459__i < G__20459__a.length) {G__20459__a[G__20459__i] = arguments[G__20459__i + 3]; ++G__20459__i;}
  args = new cljs.core.IndexedSeq(G__20459__a,0);
} 
return G__20458__delegate.call(this,x,y,z,args);};
G__20458.cljs$lang$maxFixedArity = 3;
G__20458.cljs$lang$applyTo = (function (arglist__20460){
var x = cljs.core.first(arglist__20460);
arglist__20460 = cljs.core.next(arglist__20460);
var y = cljs.core.first(arglist__20460);
arglist__20460 = cljs.core.next(arglist__20460);
var z = cljs.core.first(arglist__20460);
var args = cljs.core.rest(arglist__20460);
return G__20458__delegate(x,y,z,args);
});
G__20458.cljs$core$IFn$_invoke$arity$variadic = G__20458__delegate;
return G__20458;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__20461 = null;
if (arguments.length > 3) {
var G__20462__i = 0, G__20462__a = new Array(arguments.length -  3);
while (G__20462__i < G__20462__a.length) {G__20462__a[G__20462__i] = arguments[G__20462__i + 3]; ++G__20462__i;}
G__20461 = new cljs.core.IndexedSeq(G__20462__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__20461);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__3738__auto__ = (function (){var G__20321 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20321) : p1.call(null,G__20321));
})();
if(cljs.core.truth_(and__3738__auto__)){
var G__20322 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20322) : p2.call(null,G__20322));
} else {
return and__3738__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3738__auto__ = (function (){var G__20324 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20324) : p1.call(null,G__20324));
})();
if(cljs.core.truth_(and__3738__auto__)){
var and__3738__auto____$1 = (function (){var G__20326 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20326) : p1.call(null,G__20326));
})();
if(cljs.core.truth_(and__3738__auto____$1)){
var and__3738__auto____$2 = (function (){var G__20328 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20328) : p2.call(null,G__20328));
})();
if(cljs.core.truth_(and__3738__auto____$2)){
var G__20329 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20329) : p2.call(null,G__20329));
} else {
return and__3738__auto____$2;
}
} else {
return and__3738__auto____$1;
}
} else {
return and__3738__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3738__auto__ = (function (){var G__20331 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20331) : p1.call(null,G__20331));
})();
if(cljs.core.truth_(and__3738__auto__)){
var and__3738__auto____$1 = (function (){var G__20333 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20333) : p1.call(null,G__20333));
})();
if(cljs.core.truth_(and__3738__auto____$1)){
var and__3738__auto____$2 = (function (){var G__20335 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20335) : p1.call(null,G__20335));
})();
if(cljs.core.truth_(and__3738__auto____$2)){
var and__3738__auto____$3 = (function (){var G__20337 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20337) : p2.call(null,G__20337));
})();
if(cljs.core.truth_(and__3738__auto____$3)){
var and__3738__auto____$4 = (function (){var G__20339 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20339) : p2.call(null,G__20339));
})();
if(cljs.core.truth_(and__3738__auto____$4)){
var G__20340 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20340) : p2.call(null,G__20340));
} else {
return and__3738__auto____$4;
}
} else {
return and__3738__auto____$3;
}
} else {
return and__3738__auto____$2;
}
} else {
return and__3738__auto____$1;
}
} else {
return and__3738__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__20463__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__20068_SHARP_){
var and__3738__auto__ = (function (){var G__20345 = p1__20068_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20345) : p1.call(null,G__20345));
})();
if(cljs.core.truth_(and__3738__auto__)){
var G__20346 = p1__20068_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20346) : p2.call(null,G__20346));
} else {
return and__3738__auto__;
}
}),args)));
};
var G__20463 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__20464__i = 0, G__20464__a = new Array(arguments.length -  3);
while (G__20464__i < G__20464__a.length) {G__20464__a[G__20464__i] = arguments[G__20464__i + 3]; ++G__20464__i;}
  args = new cljs.core.IndexedSeq(G__20464__a,0);
} 
return G__20463__delegate.call(this,x,y,z,args);};
G__20463.cljs$lang$maxFixedArity = 3;
G__20463.cljs$lang$applyTo = (function (arglist__20465){
var x = cljs.core.first(arglist__20465);
arglist__20465 = cljs.core.next(arglist__20465);
var y = cljs.core.first(arglist__20465);
arglist__20465 = cljs.core.next(arglist__20465);
var z = cljs.core.first(arglist__20465);
var args = cljs.core.rest(arglist__20465);
return G__20463__delegate(x,y,z,args);
});
G__20463.cljs$core$IFn$_invoke$arity$variadic = G__20463__delegate;
return G__20463;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__20466 = null;
if (arguments.length > 3) {
var G__20467__i = 0, G__20467__a = new Array(arguments.length -  3);
while (G__20467__i < G__20467__a.length) {G__20467__a[G__20467__i] = arguments[G__20467__i + 3]; ++G__20467__i;}
G__20466 = new cljs.core.IndexedSeq(G__20467__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__20466);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__3738__auto__ = (function (){var G__20392 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20392) : p1.call(null,G__20392));
})();
if(cljs.core.truth_(and__3738__auto__)){
var and__3738__auto____$1 = (function (){var G__20394 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20394) : p2.call(null,G__20394));
})();
if(cljs.core.truth_(and__3738__auto____$1)){
var G__20395 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20395) : p3.call(null,G__20395));
} else {
return and__3738__auto____$1;
}
} else {
return and__3738__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3738__auto__ = (function (){var G__20397 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20397) : p1.call(null,G__20397));
})();
if(cljs.core.truth_(and__3738__auto__)){
var and__3738__auto____$1 = (function (){var G__20399 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20399) : p2.call(null,G__20399));
})();
if(cljs.core.truth_(and__3738__auto____$1)){
var and__3738__auto____$2 = (function (){var G__20401 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20401) : p3.call(null,G__20401));
})();
if(cljs.core.truth_(and__3738__auto____$2)){
var and__3738__auto____$3 = (function (){var G__20403 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20403) : p1.call(null,G__20403));
})();
if(cljs.core.truth_(and__3738__auto____$3)){
var and__3738__auto____$4 = (function (){var G__20405 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20405) : p2.call(null,G__20405));
})();
if(cljs.core.truth_(and__3738__auto____$4)){
var G__20406 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20406) : p3.call(null,G__20406));
} else {
return and__3738__auto____$4;
}
} else {
return and__3738__auto____$3;
}
} else {
return and__3738__auto____$2;
}
} else {
return and__3738__auto____$1;
}
} else {
return and__3738__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3738__auto__ = (function (){var G__20408 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20408) : p1.call(null,G__20408));
})();
if(cljs.core.truth_(and__3738__auto__)){
var and__3738__auto____$1 = (function (){var G__20410 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20410) : p2.call(null,G__20410));
})();
if(cljs.core.truth_(and__3738__auto____$1)){
var and__3738__auto____$2 = (function (){var G__20412 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20412) : p3.call(null,G__20412));
})();
if(cljs.core.truth_(and__3738__auto____$2)){
var and__3738__auto____$3 = (function (){var G__20414 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20414) : p1.call(null,G__20414));
})();
if(cljs.core.truth_(and__3738__auto____$3)){
var and__3738__auto____$4 = (function (){var G__20416 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20416) : p2.call(null,G__20416));
})();
if(cljs.core.truth_(and__3738__auto____$4)){
var and__3738__auto____$5 = (function (){var G__20418 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20418) : p3.call(null,G__20418));
})();
if(cljs.core.truth_(and__3738__auto____$5)){
var and__3738__auto____$6 = (function (){var G__20420 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20420) : p1.call(null,G__20420));
})();
if(cljs.core.truth_(and__3738__auto____$6)){
var and__3738__auto____$7 = (function (){var G__20422 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20422) : p2.call(null,G__20422));
})();
if(cljs.core.truth_(and__3738__auto____$7)){
var G__20423 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20423) : p3.call(null,G__20423));
} else {
return and__3738__auto____$7;
}
} else {
return and__3738__auto____$6;
}
} else {
return and__3738__auto____$5;
}
} else {
return and__3738__auto____$4;
}
} else {
return and__3738__auto____$3;
}
} else {
return and__3738__auto____$2;
}
} else {
return and__3738__auto____$1;
}
} else {
return and__3738__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__20468__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__20069_SHARP_){
var and__3738__auto__ = (function (){var G__20430 = p1__20069_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20430) : p1.call(null,G__20430));
})();
if(cljs.core.truth_(and__3738__auto__)){
var and__3738__auto____$1 = (function (){var G__20432 = p1__20069_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20432) : p2.call(null,G__20432));
})();
if(cljs.core.truth_(and__3738__auto____$1)){
var G__20433 = p1__20069_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20433) : p3.call(null,G__20433));
} else {
return and__3738__auto____$1;
}
} else {
return and__3738__auto__;
}
}),args)));
};
var G__20468 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__20469__i = 0, G__20469__a = new Array(arguments.length -  3);
while (G__20469__i < G__20469__a.length) {G__20469__a[G__20469__i] = arguments[G__20469__i + 3]; ++G__20469__i;}
  args = new cljs.core.IndexedSeq(G__20469__a,0);
} 
return G__20468__delegate.call(this,x,y,z,args);};
G__20468.cljs$lang$maxFixedArity = 3;
G__20468.cljs$lang$applyTo = (function (arglist__20470){
var x = cljs.core.first(arglist__20470);
arglist__20470 = cljs.core.next(arglist__20470);
var y = cljs.core.first(arglist__20470);
arglist__20470 = cljs.core.next(arglist__20470);
var z = cljs.core.first(arglist__20470);
var args = cljs.core.rest(arglist__20470);
return G__20468__delegate(x,y,z,args);
});
G__20468.cljs$core$IFn$_invoke$arity$variadic = G__20468__delegate;
return G__20468;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__20471 = null;
if (arguments.length > 3) {
var G__20472__i = 0, G__20472__a = new Array(arguments.length -  3);
while (G__20472__i < G__20472__a.length) {G__20472__a[G__20472__i] = arguments[G__20472__i + 3]; ++G__20472__i;}
G__20471 = new cljs.core.IndexedSeq(G__20472__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__20471);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__20473__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__20070_SHARP_){
var G__20449 = x;
return (p1__20070_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20070_SHARP_.cljs$core$IFn$_invoke$arity$1(G__20449) : p1__20070_SHARP_.call(null,G__20449));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__20071_SHARP_){
var and__3738__auto__ = (function (){var G__20451 = x;
return (p1__20071_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20071_SHARP_.cljs$core$IFn$_invoke$arity$1(G__20451) : p1__20071_SHARP_.call(null,G__20451));
})();
if(cljs.core.truth_(and__3738__auto__)){
var G__20452 = y;
return (p1__20071_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20071_SHARP_.cljs$core$IFn$_invoke$arity$1(G__20452) : p1__20071_SHARP_.call(null,G__20452));
} else {
return and__3738__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__20072_SHARP_){
var and__3738__auto__ = (function (){var G__20454 = x;
return (p1__20072_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20072_SHARP_.cljs$core$IFn$_invoke$arity$1(G__20454) : p1__20072_SHARP_.call(null,G__20454));
})();
if(cljs.core.truth_(and__3738__auto__)){
var and__3738__auto____$1 = (function (){var G__20456 = y;
return (p1__20072_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20072_SHARP_.cljs$core$IFn$_invoke$arity$1(G__20456) : p1__20072_SHARP_.call(null,G__20456));
})();
if(cljs.core.truth_(and__3738__auto____$1)){
var G__20457 = z;
return (p1__20072_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20072_SHARP_.cljs$core$IFn$_invoke$arity$1(G__20457) : p1__20072_SHARP_.call(null,G__20457));
} else {
return and__3738__auto____$1;
}
} else {
return and__3738__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__20474__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__20073_SHARP_){
return cljs.core.every_QMARK_(p1__20073_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__20474 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__20475__i = 0, G__20475__a = new Array(arguments.length -  3);
while (G__20475__i < G__20475__a.length) {G__20475__a[G__20475__i] = arguments[G__20475__i + 3]; ++G__20475__i;}
  args = new cljs.core.IndexedSeq(G__20475__a,0);
} 
return G__20474__delegate.call(this,x,y,z,args);};
G__20474.cljs$lang$maxFixedArity = 3;
G__20474.cljs$lang$applyTo = (function (arglist__20476){
var x = cljs.core.first(arglist__20476);
arglist__20476 = cljs.core.next(arglist__20476);
var y = cljs.core.first(arglist__20476);
arglist__20476 = cljs.core.next(arglist__20476);
var z = cljs.core.first(arglist__20476);
var args = cljs.core.rest(arglist__20476);
return G__20474__delegate(x,y,z,args);
});
G__20474.cljs$core$IFn$_invoke$arity$variadic = G__20474__delegate;
return G__20474;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__20477 = null;
if (arguments.length > 3) {
var G__20478__i = 0, G__20478__a = new Array(arguments.length -  3);
while (G__20478__i < G__20478__a.length) {G__20478__a[G__20478__i] = arguments[G__20478__i + 3]; ++G__20478__i;}
G__20477 = new cljs.core.IndexedSeq(G__20478__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__20477);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__20473 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__20479__i = 0, G__20479__a = new Array(arguments.length -  3);
while (G__20479__i < G__20479__a.length) {G__20479__a[G__20479__i] = arguments[G__20479__i + 3]; ++G__20479__i;}
  ps = new cljs.core.IndexedSeq(G__20479__a,0);
} 
return G__20473__delegate.call(this,p1,p2,p3,ps);};
G__20473.cljs$lang$maxFixedArity = 3;
G__20473.cljs$lang$applyTo = (function (arglist__20480){
var p1 = cljs.core.first(arglist__20480);
arglist__20480 = cljs.core.next(arglist__20480);
var p2 = cljs.core.first(arglist__20480);
arglist__20480 = cljs.core.next(arglist__20480);
var p3 = cljs.core.first(arglist__20480);
var ps = cljs.core.rest(arglist__20480);
return G__20473__delegate(p1,p2,p3,ps);
});
G__20473.cljs$core$IFn$_invoke$arity$variadic = G__20473__delegate;
return G__20473;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__20481 = null;
if (arguments.length > 3) {
var G__20482__i = 0, G__20482__a = new Array(arguments.length -  3);
while (G__20482__i < G__20482__a.length) {G__20482__a[G__20482__i] = arguments[G__20482__i + 3]; ++G__20482__i;}
G__20481 = new cljs.core.IndexedSeq(G__20482__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__20481);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__20688 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20688) : p.call(null,G__20688));
});
var sp1__2 = (function (x,y){
var or__3750__auto__ = (function (){var G__20690 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20690) : p.call(null,G__20690));
})();
if(cljs.core.truth_(or__3750__auto__)){
return or__3750__auto__;
} else {
var G__20691 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20691) : p.call(null,G__20691));
}
});
var sp1__3 = (function (x,y,z){
var or__3750__auto__ = (function (){var G__20693 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20693) : p.call(null,G__20693));
})();
if(cljs.core.truth_(or__3750__auto__)){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (function (){var G__20695 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20695) : p.call(null,G__20695));
})();
if(cljs.core.truth_(or__3750__auto____$1)){
return or__3750__auto____$1;
} else {
var G__20696 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20696) : p.call(null,G__20696));
}
}
});
var sp1__4 = (function() { 
var G__20857__delegate = function (x,y,z,args){
var or__3750__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3750__auto__)){
return or__3750__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__20857 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__20858__i = 0, G__20858__a = new Array(arguments.length -  3);
while (G__20858__i < G__20858__a.length) {G__20858__a[G__20858__i] = arguments[G__20858__i + 3]; ++G__20858__i;}
  args = new cljs.core.IndexedSeq(G__20858__a,0);
} 
return G__20857__delegate.call(this,x,y,z,args);};
G__20857.cljs$lang$maxFixedArity = 3;
G__20857.cljs$lang$applyTo = (function (arglist__20859){
var x = cljs.core.first(arglist__20859);
arglist__20859 = cljs.core.next(arglist__20859);
var y = cljs.core.first(arglist__20859);
arglist__20859 = cljs.core.next(arglist__20859);
var z = cljs.core.first(arglist__20859);
var args = cljs.core.rest(arglist__20859);
return G__20857__delegate(x,y,z,args);
});
G__20857.cljs$core$IFn$_invoke$arity$variadic = G__20857__delegate;
return G__20857;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__20860 = null;
if (arguments.length > 3) {
var G__20861__i = 0, G__20861__a = new Array(arguments.length -  3);
while (G__20861__i < G__20861__a.length) {G__20861__a[G__20861__i] = arguments[G__20861__i + 3]; ++G__20861__i;}
G__20860 = new cljs.core.IndexedSeq(G__20861__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__20860);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__3750__auto__ = (function (){var G__20728 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20728) : p1.call(null,G__20728));
})();
if(cljs.core.truth_(or__3750__auto__)){
return or__3750__auto__;
} else {
var G__20729 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20729) : p2.call(null,G__20729));
}
});
var sp2__2 = (function (x,y){
var or__3750__auto__ = (function (){var G__20731 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20731) : p1.call(null,G__20731));
})();
if(cljs.core.truth_(or__3750__auto__)){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (function (){var G__20733 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20733) : p1.call(null,G__20733));
})();
if(cljs.core.truth_(or__3750__auto____$1)){
return or__3750__auto____$1;
} else {
var or__3750__auto____$2 = (function (){var G__20735 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20735) : p2.call(null,G__20735));
})();
if(cljs.core.truth_(or__3750__auto____$2)){
return or__3750__auto____$2;
} else {
var G__20736 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20736) : p2.call(null,G__20736));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__3750__auto__ = (function (){var G__20738 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20738) : p1.call(null,G__20738));
})();
if(cljs.core.truth_(or__3750__auto__)){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (function (){var G__20740 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20740) : p1.call(null,G__20740));
})();
if(cljs.core.truth_(or__3750__auto____$1)){
return or__3750__auto____$1;
} else {
var or__3750__auto____$2 = (function (){var G__20742 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20742) : p1.call(null,G__20742));
})();
if(cljs.core.truth_(or__3750__auto____$2)){
return or__3750__auto____$2;
} else {
var or__3750__auto____$3 = (function (){var G__20744 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20744) : p2.call(null,G__20744));
})();
if(cljs.core.truth_(or__3750__auto____$3)){
return or__3750__auto____$3;
} else {
var or__3750__auto____$4 = (function (){var G__20746 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20746) : p2.call(null,G__20746));
})();
if(cljs.core.truth_(or__3750__auto____$4)){
return or__3750__auto____$4;
} else {
var G__20747 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20747) : p2.call(null,G__20747));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__20862__delegate = function (x,y,z,args){
var or__3750__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3750__auto__)){
return or__3750__auto__;
} else {
return cljs.core.some(((function (or__3750__auto__){
return (function (p1__20483_SHARP_){
var or__3750__auto____$1 = (function (){var G__20749 = p1__20483_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20749) : p1.call(null,G__20749));
})();
if(cljs.core.truth_(or__3750__auto____$1)){
return or__3750__auto____$1;
} else {
var G__20750 = p1__20483_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20750) : p2.call(null,G__20750));
}
});})(or__3750__auto__))
,args);
}
};
var G__20862 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__20863__i = 0, G__20863__a = new Array(arguments.length -  3);
while (G__20863__i < G__20863__a.length) {G__20863__a[G__20863__i] = arguments[G__20863__i + 3]; ++G__20863__i;}
  args = new cljs.core.IndexedSeq(G__20863__a,0);
} 
return G__20862__delegate.call(this,x,y,z,args);};
G__20862.cljs$lang$maxFixedArity = 3;
G__20862.cljs$lang$applyTo = (function (arglist__20864){
var x = cljs.core.first(arglist__20864);
arglist__20864 = cljs.core.next(arglist__20864);
var y = cljs.core.first(arglist__20864);
arglist__20864 = cljs.core.next(arglist__20864);
var z = cljs.core.first(arglist__20864);
var args = cljs.core.rest(arglist__20864);
return G__20862__delegate(x,y,z,args);
});
G__20862.cljs$core$IFn$_invoke$arity$variadic = G__20862__delegate;
return G__20862;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__20865 = null;
if (arguments.length > 3) {
var G__20866__i = 0, G__20866__a = new Array(arguments.length -  3);
while (G__20866__i < G__20866__a.length) {G__20866__a[G__20866__i] = arguments[G__20866__i + 3]; ++G__20866__i;}
G__20865 = new cljs.core.IndexedSeq(G__20866__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__20865);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__3750__auto__ = (function (){var G__20796 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20796) : p1.call(null,G__20796));
})();
if(cljs.core.truth_(or__3750__auto__)){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (function (){var G__20798 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20798) : p2.call(null,G__20798));
})();
if(cljs.core.truth_(or__3750__auto____$1)){
return or__3750__auto____$1;
} else {
var G__20799 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20799) : p3.call(null,G__20799));
}
}
});
var sp3__2 = (function (x,y){
var or__3750__auto__ = (function (){var G__20801 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20801) : p1.call(null,G__20801));
})();
if(cljs.core.truth_(or__3750__auto__)){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (function (){var G__20803 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20803) : p2.call(null,G__20803));
})();
if(cljs.core.truth_(or__3750__auto____$1)){
return or__3750__auto____$1;
} else {
var or__3750__auto____$2 = (function (){var G__20805 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20805) : p3.call(null,G__20805));
})();
if(cljs.core.truth_(or__3750__auto____$2)){
return or__3750__auto____$2;
} else {
var or__3750__auto____$3 = (function (){var G__20807 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20807) : p1.call(null,G__20807));
})();
if(cljs.core.truth_(or__3750__auto____$3)){
return or__3750__auto____$3;
} else {
var or__3750__auto____$4 = (function (){var G__20809 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20809) : p2.call(null,G__20809));
})();
if(cljs.core.truth_(or__3750__auto____$4)){
return or__3750__auto____$4;
} else {
var G__20810 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20810) : p3.call(null,G__20810));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__3750__auto__ = (function (){var G__20812 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20812) : p1.call(null,G__20812));
})();
if(cljs.core.truth_(or__3750__auto__)){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (function (){var G__20814 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20814) : p2.call(null,G__20814));
})();
if(cljs.core.truth_(or__3750__auto____$1)){
return or__3750__auto____$1;
} else {
var or__3750__auto____$2 = (function (){var G__20816 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20816) : p3.call(null,G__20816));
})();
if(cljs.core.truth_(or__3750__auto____$2)){
return or__3750__auto____$2;
} else {
var or__3750__auto____$3 = (function (){var G__20818 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20818) : p1.call(null,G__20818));
})();
if(cljs.core.truth_(or__3750__auto____$3)){
return or__3750__auto____$3;
} else {
var or__3750__auto____$4 = (function (){var G__20820 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20820) : p2.call(null,G__20820));
})();
if(cljs.core.truth_(or__3750__auto____$4)){
return or__3750__auto____$4;
} else {
var or__3750__auto____$5 = (function (){var G__20822 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20822) : p3.call(null,G__20822));
})();
if(cljs.core.truth_(or__3750__auto____$5)){
return or__3750__auto____$5;
} else {
var or__3750__auto____$6 = (function (){var G__20824 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20824) : p1.call(null,G__20824));
})();
if(cljs.core.truth_(or__3750__auto____$6)){
return or__3750__auto____$6;
} else {
var or__3750__auto____$7 = (function (){var G__20826 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20826) : p2.call(null,G__20826));
})();
if(cljs.core.truth_(or__3750__auto____$7)){
return or__3750__auto____$7;
} else {
var G__20827 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20827) : p3.call(null,G__20827));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__20867__delegate = function (x,y,z,args){
var or__3750__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3750__auto__)){
return or__3750__auto__;
} else {
return cljs.core.some(((function (or__3750__auto__){
return (function (p1__20484_SHARP_){
var or__3750__auto____$1 = (function (){var G__20829 = p1__20484_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20829) : p1.call(null,G__20829));
})();
if(cljs.core.truth_(or__3750__auto____$1)){
return or__3750__auto____$1;
} else {
var or__3750__auto____$2 = (function (){var G__20831 = p1__20484_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20831) : p2.call(null,G__20831));
})();
if(cljs.core.truth_(or__3750__auto____$2)){
return or__3750__auto____$2;
} else {
var G__20832 = p1__20484_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20832) : p3.call(null,G__20832));
}
}
});})(or__3750__auto__))
,args);
}
};
var G__20867 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__20868__i = 0, G__20868__a = new Array(arguments.length -  3);
while (G__20868__i < G__20868__a.length) {G__20868__a[G__20868__i] = arguments[G__20868__i + 3]; ++G__20868__i;}
  args = new cljs.core.IndexedSeq(G__20868__a,0);
} 
return G__20867__delegate.call(this,x,y,z,args);};
G__20867.cljs$lang$maxFixedArity = 3;
G__20867.cljs$lang$applyTo = (function (arglist__20869){
var x = cljs.core.first(arglist__20869);
arglist__20869 = cljs.core.next(arglist__20869);
var y = cljs.core.first(arglist__20869);
arglist__20869 = cljs.core.next(arglist__20869);
var z = cljs.core.first(arglist__20869);
var args = cljs.core.rest(arglist__20869);
return G__20867__delegate(x,y,z,args);
});
G__20867.cljs$core$IFn$_invoke$arity$variadic = G__20867__delegate;
return G__20867;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__20870 = null;
if (arguments.length > 3) {
var G__20871__i = 0, G__20871__a = new Array(arguments.length -  3);
while (G__20871__i < G__20871__a.length) {G__20871__a[G__20871__i] = arguments[G__20871__i + 3]; ++G__20871__i;}
G__20870 = new cljs.core.IndexedSeq(G__20871__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__20870);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__20872__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__20485_SHARP_){
var G__20848 = x;
return (p1__20485_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20485_SHARP_.cljs$core$IFn$_invoke$arity$1(G__20848) : p1__20485_SHARP_.call(null,G__20848));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__20486_SHARP_){
var or__3750__auto__ = (function (){var G__20850 = x;
return (p1__20486_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20486_SHARP_.cljs$core$IFn$_invoke$arity$1(G__20850) : p1__20486_SHARP_.call(null,G__20850));
})();
if(cljs.core.truth_(or__3750__auto__)){
return or__3750__auto__;
} else {
var G__20851 = y;
return (p1__20486_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20486_SHARP_.cljs$core$IFn$_invoke$arity$1(G__20851) : p1__20486_SHARP_.call(null,G__20851));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__20487_SHARP_){
var or__3750__auto__ = (function (){var G__20853 = x;
return (p1__20487_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20487_SHARP_.cljs$core$IFn$_invoke$arity$1(G__20853) : p1__20487_SHARP_.call(null,G__20853));
})();
if(cljs.core.truth_(or__3750__auto__)){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (function (){var G__20855 = y;
return (p1__20487_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20487_SHARP_.cljs$core$IFn$_invoke$arity$1(G__20855) : p1__20487_SHARP_.call(null,G__20855));
})();
if(cljs.core.truth_(or__3750__auto____$1)){
return or__3750__auto____$1;
} else {
var G__20856 = z;
return (p1__20487_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20487_SHARP_.cljs$core$IFn$_invoke$arity$1(G__20856) : p1__20487_SHARP_.call(null,G__20856));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__20873__delegate = function (x,y,z,args){
var or__3750__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3750__auto__)){
return or__3750__auto__;
} else {
return cljs.core.some(((function (or__3750__auto__,ps__$1){
return (function (p1__20488_SHARP_){
return cljs.core.some(p1__20488_SHARP_,args);
});})(or__3750__auto__,ps__$1))
,ps__$1);
}
};
var G__20873 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__20874__i = 0, G__20874__a = new Array(arguments.length -  3);
while (G__20874__i < G__20874__a.length) {G__20874__a[G__20874__i] = arguments[G__20874__i + 3]; ++G__20874__i;}
  args = new cljs.core.IndexedSeq(G__20874__a,0);
} 
return G__20873__delegate.call(this,x,y,z,args);};
G__20873.cljs$lang$maxFixedArity = 3;
G__20873.cljs$lang$applyTo = (function (arglist__20875){
var x = cljs.core.first(arglist__20875);
arglist__20875 = cljs.core.next(arglist__20875);
var y = cljs.core.first(arglist__20875);
arglist__20875 = cljs.core.next(arglist__20875);
var z = cljs.core.first(arglist__20875);
var args = cljs.core.rest(arglist__20875);
return G__20873__delegate(x,y,z,args);
});
G__20873.cljs$core$IFn$_invoke$arity$variadic = G__20873__delegate;
return G__20873;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__20876 = null;
if (arguments.length > 3) {
var G__20877__i = 0, G__20877__a = new Array(arguments.length -  3);
while (G__20877__i < G__20877__a.length) {G__20877__a[G__20877__i] = arguments[G__20877__i + 3]; ++G__20877__i;}
G__20876 = new cljs.core.IndexedSeq(G__20877__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__20876);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__20872 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__20878__i = 0, G__20878__a = new Array(arguments.length -  3);
while (G__20878__i < G__20878__a.length) {G__20878__a[G__20878__i] = arguments[G__20878__i + 3]; ++G__20878__i;}
  ps = new cljs.core.IndexedSeq(G__20878__a,0);
} 
return G__20872__delegate.call(this,p1,p2,p3,ps);};
G__20872.cljs$lang$maxFixedArity = 3;
G__20872.cljs$lang$applyTo = (function (arglist__20879){
var p1 = cljs.core.first(arglist__20879);
arglist__20879 = cljs.core.next(arglist__20879);
var p2 = cljs.core.first(arglist__20879);
arglist__20879 = cljs.core.next(arglist__20879);
var p3 = cljs.core.first(arglist__20879);
var ps = cljs.core.rest(arglist__20879);
return G__20872__delegate(p1,p2,p3,ps);
});
G__20872.cljs$core$IFn$_invoke$arity$variadic = G__20872__delegate;
return G__20872;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__20880 = null;
if (arguments.length > 3) {
var G__20881__i = 0, G__20881__a = new Array(arguments.length -  3);
while (G__20881__i < G__20881__a.length) {G__20881__a[G__20881__i] = arguments[G__20881__i + 3]; ++G__20881__i;}
G__20880 = new cljs.core.IndexedSeq(G__20881__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__20880);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__20936 = null;
var G__20936__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__20936__1 = (function (result){
var G__20922 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__20922) : rf.call(null,G__20922));
});
var G__20936__2 = (function (result,input){
var G__20923 = result;
var G__20924 = (function (){var G__20925 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20925) : f.call(null,G__20925));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20923,G__20924) : rf.call(null,G__20923,G__20924));
});
var G__20936__3 = (function() { 
var G__20937__delegate = function (result,input,inputs){
var G__20926 = result;
var G__20927 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20926,G__20927) : rf.call(null,G__20926,G__20927));
};
var G__20937 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__20938__i = 0, G__20938__a = new Array(arguments.length -  2);
while (G__20938__i < G__20938__a.length) {G__20938__a[G__20938__i] = arguments[G__20938__i + 2]; ++G__20938__i;}
  inputs = new cljs.core.IndexedSeq(G__20938__a,0);
} 
return G__20937__delegate.call(this,result,input,inputs);};
G__20937.cljs$lang$maxFixedArity = 2;
G__20937.cljs$lang$applyTo = (function (arglist__20939){
var result = cljs.core.first(arglist__20939);
arglist__20939 = cljs.core.next(arglist__20939);
var input = cljs.core.first(arglist__20939);
var inputs = cljs.core.rest(arglist__20939);
return G__20937__delegate(result,input,inputs);
});
G__20937.cljs$core$IFn$_invoke$arity$variadic = G__20937__delegate;
return G__20937;
})()
;
G__20936 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__20936__0.call(this);
case 1:
return G__20936__1.call(this,result);
case 2:
return G__20936__2.call(this,result,input);
default:
var G__20940 = null;
if (arguments.length > 2) {
var G__20941__i = 0, G__20941__a = new Array(arguments.length -  2);
while (G__20941__i < G__20941__a.length) {G__20941__a[G__20941__i] = arguments[G__20941__i + 2]; ++G__20941__i;}
G__20940 = new cljs.core.IndexedSeq(G__20941__a,0);
}
return G__20936__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__20940);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20936.cljs$lang$maxFixedArity = 2;
G__20936.cljs$lang$applyTo = G__20936__3.cljs$lang$applyTo;
G__20936.cljs$core$IFn$_invoke$arity$0 = G__20936__0;
G__20936.cljs$core$IFn$_invoke$arity$1 = G__20936__1;
G__20936.cljs$core$IFn$_invoke$arity$2 = G__20936__2;
G__20936.cljs$core$IFn$_invoke$arity$variadic = G__20936__3.cljs$core$IFn$_invoke$arity$variadic;
return G__20936;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4637__auto___20942 = size;
var i_20943 = (0);
while(true){
if((i_20943 < n__4637__auto___20942)){
cljs.core.chunk_append(b,(function (){var G__20928 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_20943);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20928) : f.call(null,G__20928));
})());

var G__20944 = (i_20943 + (1));
i_20943 = G__20944;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__20929 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20929) : f.call(null,G__20929));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__20930 = cljs.core.first(s1);
var G__20931 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20930,G__20931) : f.call(null,G__20930,G__20931));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__20932 = cljs.core.first(s1);
var G__20933 = cljs.core.first(s2);
var G__20934 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20932,G__20933,G__20934) : f.call(null,G__20932,G__20933,G__20934));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__20945__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__20882_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__20882_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__20945 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__20946__i = 0, G__20946__a = new Array(arguments.length -  4);
while (G__20946__i < G__20946__a.length) {G__20946__a[G__20946__i] = arguments[G__20946__i + 4]; ++G__20946__i;}
  colls = new cljs.core.IndexedSeq(G__20946__a,0);
} 
return G__20945__delegate.call(this,f,c1,c2,c3,colls);};
G__20945.cljs$lang$maxFixedArity = 4;
G__20945.cljs$lang$applyTo = (function (arglist__20947){
var f = cljs.core.first(arglist__20947);
arglist__20947 = cljs.core.next(arglist__20947);
var c1 = cljs.core.first(arglist__20947);
arglist__20947 = cljs.core.next(arglist__20947);
var c2 = cljs.core.first(arglist__20947);
arglist__20947 = cljs.core.next(arglist__20947);
var c3 = cljs.core.first(arglist__20947);
var colls = cljs.core.rest(arglist__20947);
return G__20945__delegate(f,c1,c2,c3,colls);
});
G__20945.cljs$core$IFn$_invoke$arity$variadic = G__20945__delegate;
return G__20945;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__20948 = null;
if (arguments.length > 4) {
var G__20949__i = 0, G__20949__a = new Array(arguments.length -  4);
while (G__20949__i < G__20949__a.length) {G__20949__a[G__20949__i] = arguments[G__20949__i + 4]; ++G__20949__i;}
G__20948 = new cljs.core.IndexedSeq(G__20949__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__20948);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__20958 = null;
var G__20958__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__20958__1 = (function (result){
var G__20955 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__20955) : rf.call(null,G__20955));
});
var G__20958__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__20956 = result;
var G__20957 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20956,G__20957) : rf.call(null,G__20956,G__20957));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__20958 = function(result,input){
switch(arguments.length){
case 0:
return G__20958__0.call(this);
case 1:
return G__20958__1.call(this,result);
case 2:
return G__20958__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20958.cljs$core$IFn$_invoke$arity$0 = G__20958__0;
G__20958.cljs$core$IFn$_invoke$arity$1 = G__20958__1;
G__20958.cljs$core$IFn$_invoke$arity$2 = G__20958__2;
return G__20958;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__20965 = null;
var G__20965__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__20965__1 = (function (result){
var G__20962 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__20962) : rf.call(null,G__20962));
});
var G__20965__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__20963 = result;
var G__20964 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20963,G__20964) : rf.call(null,G__20963,G__20964));
}
});
G__20965 = function(result,input){
switch(arguments.length){
case 0:
return G__20965__0.call(this);
case 1:
return G__20965__1.call(this,result);
case 2:
return G__20965__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20965.cljs$core$IFn$_invoke$arity$0 = G__20965__0;
G__20965.cljs$core$IFn$_invoke$arity$1 = G__20965__1;
G__20965.cljs$core$IFn$_invoke$arity$2 = G__20965__2;
return G__20965;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__20966 = (n__$1 - (1));
var G__20967 = cljs.core.rest(s);
n__$1 = G__20966;
coll__$1 = G__20967;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__20970 = cljs.core.next(s);
var G__20971 = cljs.core.next(lead);
s = G__20970;
lead = G__20971;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__20984 = null;
var G__20984__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__20984__1 = (function (result){
var G__20978 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__20978) : rf.call(null,G__20978));
});
var G__20984__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__3738__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__3738__auto__)){
var G__20979 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__20979) : pred.call(null,G__20979));
} else {
return and__3738__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__20980 = result;
var G__20981 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20980,G__20981) : rf.call(null,G__20980,G__20981));
}
});
G__20984 = function(result,input){
switch(arguments.length){
case 0:
return G__20984__0.call(this);
case 1:
return G__20984__1.call(this,result);
case 2:
return G__20984__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20984.cljs$core$IFn$_invoke$arity$0 = G__20984__0;
G__20984.cljs$core$IFn$_invoke$arity$1 = G__20984__1;
G__20984.cljs$core$IFn$_invoke$arity$2 = G__20984__2;
return G__20984;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__3738__auto__ = s;
if(and__3738__auto__){
var G__20983 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__20983) : pred__$1.call(null,G__20983));
} else {
return and__3738__auto__;
}
})())){
var G__20985 = pred__$1;
var G__20986 = cljs.core.rest(s);
pred__$1 = G__20985;
coll__$1 = G__20986;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__20995 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20995) : f.call(null,G__20995));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__20998__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__20998 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__20999__i = 0, G__20999__a = new Array(arguments.length -  2);
while (G__20999__i < G__20999__a.length) {G__20999__a[G__20999__i] = arguments[G__20999__i + 2]; ++G__20999__i;}
  colls = new cljs.core.IndexedSeq(G__20999__a,0);
} 
return G__20998__delegate.call(this,c1,c2,colls);};
G__20998.cljs$lang$maxFixedArity = 2;
G__20998.cljs$lang$applyTo = (function (arglist__21000){
var c1 = cljs.core.first(arglist__21000);
arglist__21000 = cljs.core.next(arglist__21000);
var c2 = cljs.core.first(arglist__21000);
var colls = cljs.core.rest(arglist__21000);
return G__20998__delegate(c1,c2,colls);
});
G__20998.cljs$core$IFn$_invoke$arity$variadic = G__20998__delegate;
return G__20998;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__21001 = null;
if (arguments.length > 2) {
var G__21002__i = 0, G__21002__a = new Array(arguments.length -  2);
while (G__21002__i < G__21002__a.length) {G__21002__a[G__21002__i] = arguments[G__21002__i + 2]; ++G__21002__i;}
G__21001 = new cljs.core.IndexedSeq(G__21002__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__21001);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__21017 = null;
var G__21017__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__21017__1 = (function (result){
var G__21010 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21010) : rf.call(null,G__21010));
});
var G__21017__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__21011 = result;
var G__21012 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21011,G__21012) : rf.call(null,G__21011,G__21012));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__21013 = sepr;
var G__21014 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21013,G__21014) : rf.call(null,G__21013,G__21014));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__21015 = result;
var G__21016 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21015,G__21016) : rf.call(null,G__21015,G__21016));
}
});
G__21017 = function(result,input){
switch(arguments.length){
case 0:
return G__21017__0.call(this);
case 1:
return G__21017__1.call(this,result);
case 2:
return G__21017__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21017.cljs$core$IFn$_invoke$arity$0 = G__21017__0;
G__21017.cljs$core$IFn$_invoke$arity$1 = G__21017__1;
G__21017.cljs$core$IFn$_invoke$arity$2 = G__21017__2;
return G__21017;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__21026__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__21026 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__21027__i = 0, G__21027__a = new Array(arguments.length -  1);
while (G__21027__i < G__21027__a.length) {G__21027__a[G__21027__i] = arguments[G__21027__i + 1]; ++G__21027__i;}
  colls = new cljs.core.IndexedSeq(G__21027__a,0);
} 
return G__21026__delegate.call(this,f,colls);};
G__21026.cljs$lang$maxFixedArity = 1;
G__21026.cljs$lang$applyTo = (function (arglist__21028){
var f = cljs.core.first(arglist__21028);
var colls = cljs.core.rest(arglist__21028);
return G__21026__delegate(f,colls);
});
G__21026.cljs$core$IFn$_invoke$arity$variadic = G__21026__delegate;
return G__21026;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__21029 = null;
if (arguments.length > 1) {
var G__21030__i = 0, G__21030__a = new Array(arguments.length -  1);
while (G__21030__i < G__21030__a.length) {G__21030__a[G__21030__i] = arguments[G__21030__i + 1]; ++G__21030__i;}
G__21029 = new cljs.core.IndexedSeq(G__21030__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__21029);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__21049 = null;
var G__21049__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__21049__1 = (function (result){
var G__21043 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21043) : rf.call(null,G__21043));
});
var G__21049__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__21044 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__21044) : pred.call(null,G__21044));
})())){
var G__21045 = result;
var G__21046 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21045,G__21046) : rf.call(null,G__21045,G__21046));
} else {
return result;
}
});
G__21049 = function(result,input){
switch(arguments.length){
case 0:
return G__21049__0.call(this);
case 1:
return G__21049__1.call(this,result);
case 2:
return G__21049__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21049.cljs$core$IFn$_invoke$arity$0 = G__21049__0;
G__21049.cljs$core$IFn$_invoke$arity$1 = G__21049__1;
G__21049.cljs$core$IFn$_invoke$arity$2 = G__21049__2;
return G__21049;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4637__auto___21050 = size;
var i_21051 = (0);
while(true){
if((i_21051 < n__4637__auto___21050)){
if(cljs.core.truth_((function (){var G__21047 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_21051);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__21047) : pred.call(null,G__21047));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_21051));
} else {
}

var G__21052 = (i_21051 + (1));
i_21051 = G__21052;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__21048 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__21048) : pred.call(null,G__21048));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__21059 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__21059) : branch_QMARK_.call(null,G__21059));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__21060 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__21060) : children.call(null,G__21060));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__21061_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__21061_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__21064 = to;
if(G__21064){
var bit__4424__auto__ = (G__21064.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4424__auto__) || (G__21064.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__21065 = to;
if(G__21065){
var bit__4424__auto__ = (G__21065.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4424__auto__) || (G__21065.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__21067 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21067) : f.call(null,G__21067));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__21068__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__21068 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__21069__i = 0, G__21069__a = new Array(arguments.length -  4);
while (G__21069__i < G__21069__a.length) {G__21069__a[G__21069__i] = arguments[G__21069__i + 4]; ++G__21069__i;}
  colls = new cljs.core.IndexedSeq(G__21069__a,0);
} 
return G__21068__delegate.call(this,f,c1,c2,c3,colls);};
G__21068.cljs$lang$maxFixedArity = 4;
G__21068.cljs$lang$applyTo = (function (arglist__21070){
var f = cljs.core.first(arglist__21070);
arglist__21070 = cljs.core.next(arglist__21070);
var c1 = cljs.core.first(arglist__21070);
arglist__21070 = cljs.core.next(arglist__21070);
var c2 = cljs.core.first(arglist__21070);
arglist__21070 = cljs.core.next(arglist__21070);
var c3 = cljs.core.first(arglist__21070);
var colls = cljs.core.rest(arglist__21070);
return G__21068__delegate(f,c1,c2,c3,colls);
});
G__21068.cljs$core$IFn$_invoke$arity$variadic = G__21068__delegate;
return G__21068;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__21071 = null;
if (arguments.length > 4) {
var G__21072__i = 0, G__21072__a = new Array(arguments.length -  4);
while (G__21072__i < G__21072__a.length) {G__21072__a[G__21072__i] = arguments[G__21072__i + 4]; ++G__21072__i;}
G__21071 = new cljs.core.IndexedSeq(G__21072__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__21071);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__21074 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__21074) : pred.call(null,G__21074));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__21089 = m__$1;
if(G__21089){
var bit__4431__auto__ = (G__21089.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4431__auto__) || (G__21089.cljs$core$ILookup$)){
return true;
} else {
if((!G__21089.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__21089);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__21089);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__21090 = sentinel;
var G__21091 = m__$2;
var G__21092 = cljs.core.next(ks__$1);
sentinel = G__21090;
m__$1 = G__21091;
ks__$1 = G__21092;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__21093,v){
var vec__21098 = p__21093;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21098,(0),null);
var ks = cljs.core.nthnext(vec__21098,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__21099,f){
var vec__21137 = p__21099;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21137,(0),null);
var ks = cljs.core.nthnext(vec__21137,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__21138 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21138) : f.call(null,G__21138));
})());
}
});
var update_in__4 = (function (m,p__21100,f,a){
var vec__21139 = p__21100;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21139,(0),null);
var ks = cljs.core.nthnext(vec__21139,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__21140 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__21141 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21140,G__21141) : f.call(null,G__21140,G__21141));
})());
}
});
var update_in__5 = (function (m,p__21101,f,a,b){
var vec__21142 = p__21101;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21142,(0),null);
var ks = cljs.core.nthnext(vec__21142,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__21143 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__21144 = a;
var G__21145 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21143,G__21144,G__21145) : f.call(null,G__21143,G__21144,G__21145));
})());
}
});
var update_in__6 = (function (m,p__21102,f,a,b,c){
var vec__21146 = p__21102;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21146,(0),null);
var ks = cljs.core.nthnext(vec__21146,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__21147 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__21148 = a;
var G__21149 = b;
var G__21150 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__21147,G__21148,G__21149,G__21150) : f.call(null,G__21147,G__21148,G__21149,G__21150));
})());
}
});
var update_in__7 = (function() { 
var G__21152__delegate = function (m,p__21103,f,a,b,c,args){
var vec__21151 = p__21103;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21151,(0),null);
var ks = cljs.core.nthnext(vec__21151,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__21152 = function (m,p__21103,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__21153__i = 0, G__21153__a = new Array(arguments.length -  6);
while (G__21153__i < G__21153__a.length) {G__21153__a[G__21153__i] = arguments[G__21153__i + 6]; ++G__21153__i;}
  args = new cljs.core.IndexedSeq(G__21153__a,0);
} 
return G__21152__delegate.call(this,m,p__21103,f,a,b,c,args);};
G__21152.cljs$lang$maxFixedArity = 6;
G__21152.cljs$lang$applyTo = (function (arglist__21154){
var m = cljs.core.first(arglist__21154);
arglist__21154 = cljs.core.next(arglist__21154);
var p__21103 = cljs.core.first(arglist__21154);
arglist__21154 = cljs.core.next(arglist__21154);
var f = cljs.core.first(arglist__21154);
arglist__21154 = cljs.core.next(arglist__21154);
var a = cljs.core.first(arglist__21154);
arglist__21154 = cljs.core.next(arglist__21154);
var b = cljs.core.first(arglist__21154);
arglist__21154 = cljs.core.next(arglist__21154);
var c = cljs.core.first(arglist__21154);
var args = cljs.core.rest(arglist__21154);
return G__21152__delegate(m,p__21103,f,a,b,c,args);
});
G__21152.cljs$core$IFn$_invoke$arity$variadic = G__21152__delegate;
return G__21152;
})()
;
update_in = function(m,p__21103,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__21103,f);
case 4:
return update_in__4.call(this,m,p__21103,f,a);
case 5:
return update_in__5.call(this,m,p__21103,f,a,b);
case 6:
return update_in__6.call(this,m,p__21103,f,a,b,c);
default:
var G__21155 = null;
if (arguments.length > 6) {
var G__21156__i = 0, G__21156__a = new Array(arguments.length -  6);
while (G__21156__i < G__21156__a.length) {G__21156__a[G__21156__i] = arguments[G__21156__i + 6]; ++G__21156__i;}
G__21155 = new cljs.core.IndexedSeq(G__21156__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__21103,f,a,b,c, G__21155);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__21167 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21167) : f.call(null,G__21167));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__21168 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__21169 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21168,G__21169) : f.call(null,G__21168,G__21169));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__21170 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__21171 = x;
var G__21172 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21170,G__21171,G__21172) : f.call(null,G__21170,G__21171,G__21172));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__21173 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__21174 = x;
var G__21175 = y;
var G__21176 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__21173,G__21174,G__21175,G__21176) : f.call(null,G__21173,G__21174,G__21175,G__21176));
})());
});
var update__7 = (function() { 
var G__21177__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__21177 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__21178__i = 0, G__21178__a = new Array(arguments.length -  6);
while (G__21178__i < G__21178__a.length) {G__21178__a[G__21178__i] = arguments[G__21178__i + 6]; ++G__21178__i;}
  more = new cljs.core.IndexedSeq(G__21178__a,0);
} 
return G__21177__delegate.call(this,m,k,f,x,y,z,more);};
G__21177.cljs$lang$maxFixedArity = 6;
G__21177.cljs$lang$applyTo = (function (arglist__21179){
var m = cljs.core.first(arglist__21179);
arglist__21179 = cljs.core.next(arglist__21179);
var k = cljs.core.first(arglist__21179);
arglist__21179 = cljs.core.next(arglist__21179);
var f = cljs.core.first(arglist__21179);
arglist__21179 = cljs.core.next(arglist__21179);
var x = cljs.core.first(arglist__21179);
arglist__21179 = cljs.core.next(arglist__21179);
var y = cljs.core.first(arglist__21179);
arglist__21179 = cljs.core.next(arglist__21179);
var z = cljs.core.first(arglist__21179);
var more = cljs.core.rest(arglist__21179);
return G__21177__delegate(m,k,f,x,y,z,more);
});
G__21177.cljs$core$IFn$_invoke$arity$variadic = G__21177__delegate;
return G__21177;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__21180 = null;
if (arguments.length > 6) {
var G__21181__i = 0, G__21181__a = new Array(arguments.length -  6);
while (G__21181__i < G__21181__a.length) {G__21181__a[G__21181__i] = arguments[G__21181__i + 6]; ++G__21181__i;}
G__21180 = new cljs.core.IndexedSeq(G__21181__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__21180);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__21182 = (ll - (5));
var G__21183 = r;
ll = G__21182;
ret = G__21183;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__21188 = cljs.core.pv_aget(node,(0));
var G__21189 = (level - (5));
node = G__21188;
level = G__21189;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__21190 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__21191 = (level - (5));
node = G__21190;
level = G__21191;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__21201 = init__$2;
var G__21202 = (j + i);
var G__21203 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21201,G__21202,G__21203) : f.call(null,G__21201,G__21202,G__21203));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__21214 = (j + (1));
var G__21215 = init__$3;
j = G__21214;
init__$2 = G__21215;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__21204 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21204) : cljs.core.deref.call(null,G__21204));
} else {
var G__21216 = (i + len);
var G__21217 = init__$2;
i = G__21216;
init__$1 = G__21217;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4171__auto__ = self__.__hash;
if(!((h__4171__auto__ == null))){
return h__4171__auto__;
} else {
var h__4171__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4171__auto____$1;

return h__4171__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__21205 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__21205) : cljs.core.tv_editable_root.call(null,G__21205));
})(),(function (){var G__21206 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__21206) : cljs.core.tv_editable_tail.call(null,G__21206));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__21207 = init__$2;
var G__21208 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21207,G__21208) : f.call(null,G__21207,G__21208));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__21218 = (j + (1));
var G__21219 = init__$3;
j = G__21218;
init__$2 = G__21219;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__21209 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21209) : cljs.core.deref.call(null,G__21209));
} else {
var G__21220 = (i + len);
var G__21221 = init__$2;
i = G__21220;
init__$1 = G__21221;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__21210 = coll__$1;
var G__21211 = cljs.core.first_array_for_longvec(coll__$1);
var G__21212 = (0);
var G__21213 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__21210,G__21211,G__21212,G__21213) : cljs.core.chunked_seq.call(null,G__21210,G__21211,G__21212,G__21213));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__4637__auto___21222 = len;
var i_21223 = (0);
while(true){
if((i_21223 < n__4637__auto___21222)){
(new_tail[i_21223] = (self__.tail[i_21223]));

var G__21224 = (i_21223 + (1));
i_21223 = G__21224;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__21225 = null;
var G__21225__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__21225__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__21225 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__21225__2.call(this,self__,k);
case 3:
return G__21225__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21225.cljs$core$IFn$_invoke$arity$2 = G__21225__2;
G__21225.cljs$core$IFn$_invoke$arity$3 = G__21225__3;
return G__21225;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args21200){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21200)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__21226 = (i + (1));
var G__21227 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__21226;
out = G__21227;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4728__auto__ = this;
return cljs.core.es6_iterator(this__4728__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__21228__i = 0, G__21228__a = new Array(arguments.length -  0);
while (G__21228__i < G__21228__a.length) {G__21228__a[G__21228__i] = arguments[G__21228__i + 0]; ++G__21228__i;}
  args = new cljs.core.IndexedSeq(G__21228__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__21229){
var args = cljs.core.seq(arglist__21229);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__21230 = self__.vec;
var G__21231 = self__.node;
var G__21232 = self__.i;
var G__21233 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__21230,G__21231,G__21232,G__21233) : cljs.core.chunked_seq.call(null,G__21230,G__21231,G__21232,G__21233));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4171__auto__ = self__.__hash;
if(!((h__4171__auto__ == null))){
return h__4171__auto__;
} else {
var h__4171__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4171__auto____$1;

return h__4171__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__21234 = self__.vec;
var G__21235 = (self__.i + self__.off);
var G__21236 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__21234,G__21235,G__21236) : cljs.core.subvec.call(null,G__21234,G__21235,G__21236));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__21237 = self__.vec;
var G__21238 = (self__.i + self__.off);
var G__21239 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__21237,G__21238,G__21239) : cljs.core.subvec.call(null,G__21237,G__21238,G__21239));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__21240 = self__.vec;
var G__21241 = self__.node;
var G__21242 = self__.i;
var G__21243 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__21240,G__21241,G__21242,G__21243) : cljs.core.chunked_seq.call(null,G__21240,G__21241,G__21242,G__21243));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__21244 = self__.vec;
var G__21245 = cljs.core.unchecked_array_for(self__.vec,end);
var G__21246 = end;
var G__21247 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__21244,G__21245,G__21246,G__21247) : cljs.core.chunked_seq.call(null,G__21244,G__21245,G__21246,G__21247));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__21248 = self__.vec;
var G__21249 = self__.node;
var G__21250 = self__.i;
var G__21251 = self__.off;
var G__21252 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__21248,G__21249,G__21250,G__21251,G__21252) : cljs.core.chunked_seq.call(null,G__21248,G__21249,G__21250,G__21251,G__21252));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__21253 = self__.vec;
var G__21254 = cljs.core.unchecked_array_for(self__.vec,end);
var G__21255 = end;
var G__21256 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__21253,G__21254,G__21255,G__21256) : cljs.core.chunked_seq.call(null,G__21253,G__21254,G__21255,G__21256));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4728__auto__ = this;
return cljs.core.es6_iterator(this__4728__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__21258 = self__.meta;
var G__21259 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__21260 = self__.start;
var G__21261 = (function (){var x__4067__auto__ = self__.end;
var y__4068__auto__ = (v_pos + (1));
return ((x__4067__auto__ > y__4068__auto__) ? x__4067__auto__ : y__4068__auto__);
})();
var G__21262 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__21258,G__21259,G__21260,G__21261,G__21262) : cljs.core.build_subvec.call(null,G__21258,G__21259,G__21260,G__21261,G__21262));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__21263 = self__.meta;
var G__21264 = self__.v;
var G__21265 = self__.start;
var G__21266 = (self__.end - (1));
var G__21267 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__21263,G__21264,G__21265,G__21266,G__21267) : cljs.core.build_subvec.call(null,G__21263,G__21264,G__21265,G__21266,G__21267));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4171__auto__ = self__.__hash;
if(!((h__4171__auto__ == null))){
return h__4171__auto__;
} else {
var h__4171__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4171__auto____$1;

return h__4171__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__21269 = meta__$1;
var G__21270 = self__.v;
var G__21271 = self__.start;
var G__21272 = self__.end;
var G__21273 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__21269,G__21270,G__21271,G__21272,G__21273) : cljs.core.build_subvec.call(null,G__21269,G__21270,G__21271,G__21272,G__21273));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__21274 = self__.meta;
var G__21275 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__21276 = self__.start;
var G__21277 = (self__.end + (1));
var G__21278 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__21274,G__21275,G__21276,G__21277,G__21278) : cljs.core.build_subvec.call(null,G__21274,G__21275,G__21276,G__21277,G__21278));
});

cljs.core.Subvec.prototype.call = (function() {
var G__21279 = null;
var G__21279__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__21279__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__21279 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__21279__2.call(this,self__,k);
case 3:
return G__21279__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21279.cljs$core$IFn$_invoke$arity$2 = G__21279__2;
G__21279.cljs$core$IFn$_invoke$arity$3 = G__21279__3;
return G__21279;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args21257){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21257)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4728__auto__ = this;
return cljs.core.es6_iterator(this__4728__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__21280 = meta;
var G__21281 = v.v;
var G__21282 = (v.start + start);
var G__21283 = (v.start + end);
var G__21284 = __hash;
meta = G__21280;
v = G__21281;
start = G__21282;
end = G__21283;
__hash = G__21284;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj21291 = {};
return obj21291;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__21299 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__21300 = (level - (5));
node = G__21299;
level = G__21300;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__21304 = null;
var G__21304__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__21304__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__21304 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__21304__2.call(this,self__,k);
case 3:
return G__21304__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21304.cljs$core$IFn$_invoke$arity$2 = G__21304__2;
G__21304.cljs$core$IFn$_invoke$arity$3 = G__21304__3;
return G__21304;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args21301){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21301)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4171__auto__ = self__.__hash;
if(!((h__4171__auto__ == null))){
return h__4171__auto__;
} else {
var h__4171__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4171__auto____$1;

return h__4171__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4728__auto__ = this;
return cljs.core.es6_iterator(this__4728__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4171__auto__ = self__.__hash;
if(!((h__4171__auto__ == null))){
return h__4171__auto__;
} else {
var h__4171__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4171__auto____$1;

return h__4171__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__3750__auto__ = self__.front;
if(cljs.core.truth_(or__3750__auto__)){
return or__3750__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3750__auto__ = self__.rear;
if(cljs.core.truth_(or__3750__auto__)){
return or__3750__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4728__auto__ = this;
return cljs.core.es6_iterator(this__4728__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__21305 = (i + incr);
i = G__21305;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__21306 = (i + (1));
var G__21307 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__21306;
out = G__21307;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj21311 = {};
return obj21311;
})();
var l = ks.length;
var i_21312 = (0);
while(true){
if((i_21312 < l)){
var k_21313 = (ks[i_21312]);
(new_obj[k_21313] = (obj[k_21313]));

var G__21314 = (i_21312 + (1));
i_21312 = G__21314;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3738__auto__ = (function (){var G__21318 = k;
return goog.isString(G__21318);
})();
if(cljs.core.truth_(and__3738__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3738__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__21319 = init__$1;
var G__21320 = k;
var G__21321 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21319,G__21320,G__21321) : f.call(null,G__21319,G__21320,G__21321));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__21322 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21322) : cljs.core.deref.call(null,G__21322));
} else {
var G__21328 = cljs.core.rest(keys__$1);
var G__21329 = init__$2;
keys__$1 = G__21328;
init__$1 = G__21329;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4171__auto__ = self__.__hash;
if(!((h__4171__auto__ == null))){
return h__4171__auto__;
} else {
var h__4171__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4171__auto____$1;

return h__4171__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3738__auto__ = (function (){var G__21324 = k;
return goog.isString(G__21324);
})();
if(cljs.core.truth_(and__3738__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3738__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__21325 = k;
return goog.isString(G__21325);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3738__auto__ = (function (){var G__21327 = k;
return goog.isString(G__21327);
})();
if(cljs.core.truth_(and__3738__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3738__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__21315_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__21315_SHARP_,(self__.strobj[p1__21315_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__21330 = null;
var G__21330__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__21330__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__21330 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__21330__2.call(this,self__,k);
case 3:
return G__21330__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21330.cljs$core$IFn$_invoke$arity$2 = G__21330__2;
G__21330.cljs$core$IFn$_invoke$arity$3 = G__21330__3;
return G__21330;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args21316){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21316)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj21332 = {};
return obj21332;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__21333 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21333,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21333,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__21334 = (i + (2));
i = G__21334;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__21335 = (i + (2));
i = G__21335;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__21336 = (i + (2));
i = G__21336;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__21337 = (i + (2));
i = G__21337;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__21338 = (i + (2));
i = G__21338;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__3750__auto__ = (function (){var G__21342 = k;
return goog.isString(G__21342);
})();
if(cljs.core.truth_(or__3750__auto__)){
return or__3750__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_21343 = (0);
while(true){
if((i_21343 < l)){
(narr[i_21343] = (arr[i_21343]));

var G__21344 = (i_21343 + (1));
i_21343 = G__21344;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4728__auto__ = this;
return cljs.core.es6_iterator(this__4728__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__21346 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__21346) : cljs.core.keys.call(null,G__21346));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__21347 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__21347) : cljs.core.vals.call(null,G__21347));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__21348 = cljs.core.seq(coll);
var chunk__21349 = null;
var count__21350 = (0);
var i__21351 = (0);
while(true){
if((i__21351 < count__21350)){
var vec__21352 = chunk__21349.cljs$core$IIndexed$_nth$arity$2(null,i__21351);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21352,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21352,(1),null);
var G__21353_21366 = v;
var G__21354_21367 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21353_21366,G__21354_21367) : f.call(null,G__21353_21366,G__21354_21367));

var G__21368 = seq__21348;
var G__21369 = chunk__21349;
var G__21370 = count__21350;
var G__21371 = (i__21351 + (1));
seq__21348 = G__21368;
chunk__21349 = G__21369;
count__21350 = G__21370;
i__21351 = G__21371;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__21348);
if(temp__4126__auto__){
var seq__21348__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__21348__$1)){
var c__4537__auto__ = cljs.core.chunk_first(seq__21348__$1);
var G__21372 = cljs.core.chunk_rest(seq__21348__$1);
var G__21373 = c__4537__auto__;
var G__21374 = cljs.core.count(c__4537__auto__);
var G__21375 = (0);
seq__21348 = G__21372;
chunk__21349 = G__21373;
count__21350 = G__21374;
i__21351 = G__21375;
continue;
} else {
var vec__21355 = cljs.core.first(seq__21348__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21355,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21355,(1),null);
var G__21356_21376 = v;
var G__21357_21377 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21356_21376,G__21357_21377) : f.call(null,G__21356_21376,G__21357_21377));

var G__21378 = cljs.core.next(seq__21348__$1);
var G__21379 = null;
var G__21380 = (0);
var G__21381 = (0);
seq__21348 = G__21378;
chunk__21349 = G__21379;
count__21350 = G__21380;
i__21351 = G__21381;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__21358 = init__$1;
var G__21359 = (self__.arr[i]);
var G__21360 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21358,G__21359,G__21360) : f.call(null,G__21358,G__21359,G__21360));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__21361 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21361) : cljs.core.deref.call(null,G__21361));
} else {
var G__21382 = (i + (2));
var G__21383 = init__$2;
i = G__21382;
init__$1 = G__21383;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4171__auto__ = self__.__hash;
if(!((h__4171__auto__ == null))){
return h__4171__auto__;
} else {
var h__4171__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4171__auto____$1;

return h__4171__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__21362 = other;
if(G__21362){
var bit__4424__auto__ = (G__21362.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4424__auto__) || (G__21362.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__21384 = (i + (2));
i = G__21384;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj21364 = {};
return obj21364;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__21385 = (s + (2));
var G__21386 = d;
s = G__21385;
d = G__21386;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__21387 = (s + (2));
var G__21388 = (d + (2));
s = G__21387;
d = G__21388;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__21365 = cljs.core.aclone(self__.arr);
(G__21365[(idx + (1))] = v);

return G__21365;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__21389 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__21390 = cljs.core.next(es);
ret = G__21389;
es = G__21390;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__21391 = null;
var G__21391__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__21391__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__21391 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__21391__2.call(this,self__,k);
case 3:
return G__21391__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21391.cljs$core$IFn$_invoke$arity$2 = G__21391__2;
G__21391.cljs$core$IFn$_invoke$arity$3 = G__21391__3;
return G__21391;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args21345){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21345)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__21392 = (i + (2));
var G__21393 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__21392;
ret = G__21393;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4728__auto__ = this;
return cljs.core.es6_iterator(this__4728__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__21394_21402 = self__.arr;
G__21394_21402.pop();

G__21394_21402.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__21395 = self__.len;
var G__21396 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__21395,G__21396) : cljs.core.array__GT_transient_hash_map.call(null,G__21395,G__21396));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__21397 = o;
if(G__21397){
var bit__4431__auto__ = (G__21397.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4431__auto__) || (G__21397.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__21397.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__21397);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__21397);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__21398 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__21398) : cljs.core.key.call(null,G__21398));
})(),(function (){var G__21399 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__21399) : cljs.core.val.call(null,G__21399));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__21403 = cljs.core.next(es);
var G__21404 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__21400 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__21400) : cljs.core.key.call(null,G__21400));
})(),(function (){var G__21401 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__21401) : cljs.core.val.call(null,G__21401));
})());
es = G__21403;
tcoll__$2 = G__21404;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__21405 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__21406 = (i + (2));
out = G__21405;
i = G__21406;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__21409 = cljs.core.aclone(arr);
(G__21409[i] = a);

return G__21409;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__21410 = cljs.core.aclone(arr);
(G__21410[i] = a);

(G__21410[j] = b);

return G__21410;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__21415 = init__$1;
var G__21416 = k;
var G__21417 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21415,G__21416,G__21417) : f.call(null,G__21415,G__21416,G__21417));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__21418 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21418) : cljs.core.deref.call(null,G__21418));
} else {
var G__21419 = (i + (2));
var G__21420 = init__$2;
i = G__21419;
init__$1 = G__21420;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__21421 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__21421) : cljs.core.create_inode_seq.call(null,G__21421));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_21435 = (0);
var j_21436 = (0);
while(true){
if((i_21435 < (32))){
if((((self__.bitmap >>> i_21435) & (1)) === (0))){
var G__21437 = (i_21435 + (1));
var G__21438 = j_21436;
i_21435 = G__21437;
j_21436 = G__21438;
continue;
} else {
(nodes[i_21435] = ((!(((self__.arr[j_21436]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_21436])),(self__.arr[j_21436]),(self__.arr[(j_21436 + (1))]),added_leaf_QMARK_):(self__.arr[(j_21436 + (1))])));

var G__21439 = (i_21435 + (1));
var G__21440 = (j_21436 + (2));
i_21435 = G__21439;
j_21436 = G__21440;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__21422 = edit__$1;
var G__21423 = (shift + (5));
var G__21424 = key_or_nil;
var G__21425 = val_or_node;
var G__21426 = hash;
var G__21427 = key;
var G__21428 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__21422,G__21423,G__21424,G__21425,G__21426,G__21427,G__21428) : cljs.core.create_node.call(null,G__21422,G__21423,G__21424,G__21425,G__21426,G__21427,G__21428));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_21441 = (0);
var j_21442 = (0);
while(true){
if((i_21441 < (32))){
if((((self__.bitmap >>> i_21441) & (1)) === (0))){
var G__21443 = (i_21441 + (1));
var G__21444 = j_21442;
i_21441 = G__21443;
j_21442 = G__21444;
continue;
} else {
(nodes[i_21441] = ((!(((self__.arr[j_21442]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_21442])),(self__.arr[j_21442]),(self__.arr[(j_21442 + (1))]),added_leaf_QMARK_):(self__.arr[(j_21442 + (1))])));

var G__21445 = (i_21441 + (1));
var G__21446 = (j_21442 + (2));
i_21441 = G__21445;
j_21442 = G__21446;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__21429 = (shift + (5));
var G__21430 = key_or_nil;
var G__21431 = val_or_node;
var G__21432 = hash;
var G__21433 = key;
var G__21434 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__21429,G__21430,G__21431,G__21432,G__21433,G__21434) : cljs.core.create_node.call(null,G__21429,G__21430,G__21431,G__21432,G__21433,G__21434));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__21447 = (i + (1));
var G__21448 = (j + (2));
var G__21449 = (bitmap | ((1) << i));
i = G__21447;
j = G__21448;
bitmap = G__21449;
continue;
} else {
var G__21450 = (i + (1));
var G__21451 = j;
var G__21452 = bitmap;
i = G__21450;
j = G__21451;
bitmap = G__21452;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__21453 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__21453) : cljs.core.create_array_node_seq.call(null,G__21453));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__21454 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21454) : cljs.core.deref.call(null,G__21454));
} else {
var G__21455 = (i + (1));
var G__21456 = init__$2;
i = G__21455;
init__$1 = G__21456;
continue;
}
} else {
var G__21457 = (i + (1));
var G__21458 = init__$1;
i = G__21457;
init__$1 = G__21458;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__21459 = (i + (2));
i = G__21459;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__21460 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__21460) : cljs.core.create_inode_seq.call(null,G__21460));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4171__auto__ = self__.__hash;
if(!((h__4171__auto__ == null))){
return h__4171__auto__;
} else {
var h__4171__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4171__auto____$1;

return h__4171__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__21461 = self__.nodes;
var G__21462 = (self__.i + (2));
var G__21463 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__21461,G__21462,G__21463) : cljs.core.create_inode_seq.call(null,G__21461,G__21462,G__21463));
} else {
var G__21464 = self__.nodes;
var G__21465 = self__.i;
var G__21466 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__21464,G__21465,G__21466) : cljs.core.create_inode_seq.call(null,G__21464,G__21465,G__21466));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4728__auto__ = this;
return cljs.core.es6_iterator(this__4728__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__21470 = (j + (2));
j = G__21470;
continue;
}
} else {
var G__21471 = (j + (2));
j = G__21471;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4171__auto__ = self__.__hash;
if(!((h__4171__auto__ == null))){
return h__4171__auto__;
} else {
var h__4171__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4171__auto____$1;

return h__4171__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__21472 = null;
var G__21473 = self__.nodes;
var G__21474 = self__.i;
var G__21475 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__21472,G__21473,G__21474,G__21475) : cljs.core.create_array_node_seq.call(null,G__21472,G__21473,G__21474,G__21475));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4728__auto__ = this;
return cljs.core.es6_iterator(this__4728__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__21480 = (j + (1));
j = G__21480;
continue;
}
} else {
var G__21481 = (j + (1));
j = G__21481;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__21483 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__21483) : cljs.core.keys.call(null,G__21483));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__21484 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__21484) : cljs.core.vals.call(null,G__21484));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__21485 = cljs.core.seq(coll);
var chunk__21486 = null;
var count__21487 = (0);
var i__21488 = (0);
while(true){
if((i__21488 < count__21487)){
var vec__21489 = chunk__21486.cljs$core$IIndexed$_nth$arity$2(null,i__21488);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21489,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21489,(1),null);
var G__21490_21501 = v;
var G__21491_21502 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21490_21501,G__21491_21502) : f.call(null,G__21490_21501,G__21491_21502));

var G__21503 = seq__21485;
var G__21504 = chunk__21486;
var G__21505 = count__21487;
var G__21506 = (i__21488 + (1));
seq__21485 = G__21503;
chunk__21486 = G__21504;
count__21487 = G__21505;
i__21488 = G__21506;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__21485);
if(temp__4126__auto__){
var seq__21485__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__21485__$1)){
var c__4537__auto__ = cljs.core.chunk_first(seq__21485__$1);
var G__21507 = cljs.core.chunk_rest(seq__21485__$1);
var G__21508 = c__4537__auto__;
var G__21509 = cljs.core.count(c__4537__auto__);
var G__21510 = (0);
seq__21485 = G__21507;
chunk__21486 = G__21508;
count__21487 = G__21509;
i__21488 = G__21510;
continue;
} else {
var vec__21492 = cljs.core.first(seq__21485__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21492,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21492,(1),null);
var G__21493_21511 = v;
var G__21494_21512 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21493_21511,G__21494_21512) : f.call(null,G__21493_21511,G__21494_21512));

var G__21513 = cljs.core.next(seq__21485__$1);
var G__21514 = null;
var G__21515 = (0);
var G__21516 = (0);
seq__21485 = G__21513;
chunk__21486 = G__21514;
count__21487 = G__21515;
i__21488 = G__21516;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__21495 = init;
var G__21496 = null;
var G__21497 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21495,G__21496,G__21497) : f.call(null,G__21495,G__21496,G__21497));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__21498 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21498) : cljs.core.deref.call(null,G__21498));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4171__auto__ = self__.__hash;
if(!((h__4171__auto__ == null))){
return h__4171__auto__;
} else {
var h__4171__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4171__auto____$1;

return h__4171__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj21500 = {};
return obj21500;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__21517 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__21518 = cljs.core.next(es);
ret = G__21517;
es = G__21518;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__21519 = null;
var G__21519__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__21519__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__21519 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__21519__2.call(this,self__,k);
case 3:
return G__21519__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21519.cljs$core$IFn$_invoke$arity$2 = G__21519__2;
G__21519.cljs$core$IFn$_invoke$arity$3 = G__21519__3;
return G__21519;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args21482){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21482)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__21520 = (i + (2));
var G__21521 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__21520;
ret = G__21521;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__21522 = (i + (1));
var G__21523 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__21522;
out = G__21523;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4728__auto__ = this;
return cljs.core.es6_iterator(this__4728__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__21524 = o;
if(G__21524){
var bit__4431__auto__ = (G__21524.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4431__auto__) || (G__21524.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__21524.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__21524);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__21524);
}
})()){
return tcoll.assoc_BANG_((function (){var G__21525 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__21525) : cljs.core.key.call(null,G__21525));
})(),(function (){var G__21526 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__21526) : cljs.core.val.call(null,G__21526));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__21529 = cljs.core.next(es);
var G__21530 = tcoll__$1.assoc_BANG_((function (){var G__21527 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__21527) : cljs.core.key.call(null,G__21527));
})(),(function (){var G__21528 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__21528) : cljs.core.val.call(null,G__21528));
})());
es = G__21529;
tcoll__$1 = G__21530;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__21531 = ((ascending_QMARK_)?t.left:t.right);
var G__21532 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__21531;
stack__$1 = G__21532;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4171__auto__ = self__.__hash;
if(!((h__4171__auto__ == null))){
return h__4171__auto__;
} else {
var h__4171__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4171__auto____$1;

return h__4171__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4728__auto__ = this;
return cljs.core.es6_iterator(this__4728__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__21545 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21545) : cljs.core.deref.call(null,G__21545));
} else {
var init__$2 = (function (){var G__21546 = init__$1;
var G__21547 = node.key;
var G__21548 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21546,G__21547,G__21548) : f.call(null,G__21546,G__21547,G__21548));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__21549 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21549) : cljs.core.deref.call(null,G__21549));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__21550 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21550) : cljs.core.deref.call(null,G__21550));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4171__auto__ = self__.__hash;
if(!((h__4171__auto__ == null))){
return h__4171__auto__;
} else {
var h__4171__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4171__auto____$1;

return h__4171__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__21552 = null;
var G__21552__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__21552__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__21552 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__21552__2.call(this,self__,k);
case 3:
return G__21552__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21552.cljs$core$IFn$_invoke$arity$2 = G__21552__2;
G__21552.cljs$core$IFn$_invoke$arity$3 = G__21552__3;
return G__21552;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args21551){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21551)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4728__auto__ = this;
return cljs.core.es6_iterator(this__4728__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4171__auto__ = self__.__hash;
if(!((h__4171__auto__ == null))){
return h__4171__auto__;
} else {
var h__4171__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4171__auto____$1;

return h__4171__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__21554 = null;
var G__21554__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__21554__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__21554 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__21554__2.call(this,self__,k);
case 3:
return G__21554__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21554.cljs$core$IFn$_invoke$arity$2 = G__21554__2;
G__21554.cljs$core$IFn$_invoke$arity$3 = G__21554__3;
return G__21554;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args21553){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21553)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4728__auto__ = this;
return cljs.core.es6_iterator(this__4728__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__21567 = k;
var G__21568 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__21567,G__21568) : comp.call(null,G__21567,G__21568));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__21587 = k;
var G__21588 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__21587,G__21588) : comp.call(null,G__21587,G__21588));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__21599 = k;
var G__21600 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__21599,G__21600) : comp.call(null,G__21599,G__21600));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__21602 = cljs.core.seq(coll);
var chunk__21603 = null;
var count__21604 = (0);
var i__21605 = (0);
while(true){
if((i__21605 < count__21604)){
var vec__21606 = chunk__21603.cljs$core$IIndexed$_nth$arity$2(null,i__21605);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21606,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21606,(1),null);
var G__21607_21619 = v;
var G__21608_21620 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21607_21619,G__21608_21620) : f.call(null,G__21607_21619,G__21608_21620));

var G__21621 = seq__21602;
var G__21622 = chunk__21603;
var G__21623 = count__21604;
var G__21624 = (i__21605 + (1));
seq__21602 = G__21621;
chunk__21603 = G__21622;
count__21604 = G__21623;
i__21605 = G__21624;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__21602);
if(temp__4126__auto__){
var seq__21602__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__21602__$1)){
var c__4537__auto__ = cljs.core.chunk_first(seq__21602__$1);
var G__21625 = cljs.core.chunk_rest(seq__21602__$1);
var G__21626 = c__4537__auto__;
var G__21627 = cljs.core.count(c__4537__auto__);
var G__21628 = (0);
seq__21602 = G__21625;
chunk__21603 = G__21626;
count__21604 = G__21627;
i__21605 = G__21628;
continue;
} else {
var vec__21609 = cljs.core.first(seq__21602__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21609,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21609,(1),null);
var G__21610_21629 = v;
var G__21611_21630 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21610_21629,G__21611_21630) : f.call(null,G__21610_21629,G__21611_21630));

var G__21631 = cljs.core.next(seq__21602__$1);
var G__21632 = null;
var G__21633 = (0);
var G__21634 = (0);
seq__21602 = G__21631;
chunk__21603 = G__21632;
count__21604 = G__21633;
i__21605 = G__21634;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__21612 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__21612) : cljs.core.keys.call(null,G__21612));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__21613 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__21613) : cljs.core.vals.call(null,G__21613));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__21614 = k;
var G__21615 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__21614,G__21615) : self__.comp.call(null,G__21614,G__21615));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__21635 = t.left;
t = G__21635;
continue;
} else {
var G__21636 = t.right;
t = G__21636;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4171__auto__ = self__.__hash;
if(!((h__4171__auto__ == null))){
return h__4171__auto__;
} else {
var h__4171__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4171__auto____$1;

return h__4171__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__21637 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__21638 = cljs.core.next(es);
ret = G__21637;
es = G__21638;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__21639 = null;
var G__21639__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__21639__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__21639 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__21639__2.call(this,self__,k);
case 3:
return G__21639__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21639.cljs$core$IFn$_invoke$arity$2 = G__21639__2;
G__21639.cljs$core$IFn$_invoke$arity$3 = G__21639__3;
return G__21639;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args21601){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21601)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__21616 = k;
var G__21617 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__21616,G__21617) : self__.comp.call(null,G__21616,G__21617));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__21640 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__21641 = t.left;
stack = G__21640;
t = G__21641;
continue;
} else {
var G__21642 = stack;
var G__21643 = t.right;
stack = G__21642;
t = G__21643;
continue;
}
} else {
if((c > (0))){
var G__21644 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__21645 = t.right;
stack = G__21644;
t = G__21645;
continue;
} else {
var G__21646 = stack;
var G__21647 = t.left;
stack = G__21646;
t = G__21647;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__21618 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__21618) : cljs.core.key.call(null,G__21618));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4728__auto__ = this;
return cljs.core.es6_iterator(this__4728__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__21648 = cljs.core.nnext(in$);
var G__21649 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__21648;
out = G__21649;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__21650__i = 0, G__21650__a = new Array(arguments.length -  0);
while (G__21650__i < G__21650__a.length) {G__21650__a[G__21650__i] = arguments[G__21650__i + 0]; ++G__21650__i;}
  keyvals = new cljs.core.IndexedSeq(G__21650__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__21651){
var keyvals = cljs.core.seq(arglist__21651);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__21652__i = 0, G__21652__a = new Array(arguments.length -  0);
while (G__21652__i < G__21652__a.length) {G__21652__a[G__21652__i] = arguments[G__21652__i + 0]; ++G__21652__i;}
  keyvals = new cljs.core.IndexedSeq(G__21652__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__21653){
var keyvals = cljs.core.seq(arglist__21653);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj21657 = {};
return obj21657;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__21658 = cljs.core.nnext(kvs);
kvs = G__21658;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__21659__i = 0, G__21659__a = new Array(arguments.length -  0);
while (G__21659__i < G__21659__a.length) {G__21659__a[G__21659__i] = arguments[G__21659__i + 0]; ++G__21659__i;}
  keyvals = new cljs.core.IndexedSeq(G__21659__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__21660){
var keyvals = cljs.core.seq(arglist__21660);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__21661 = cljs.core.nnext(in$);
var G__21662 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__21661;
out = G__21662;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__21663__i = 0, G__21663__a = new Array(arguments.length -  0);
while (G__21663__i < G__21663__a.length) {G__21663__a[G__21663__i] = arguments[G__21663__i + 0]; ++G__21663__i;}
  keyvals = new cljs.core.IndexedSeq(G__21663__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__21664){
var keyvals = cljs.core.seq(arglist__21664);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__21665 = cljs.core.nnext(in$);
var G__21666 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__21665;
out = G__21666;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__21667__i = 0, G__21667__a = new Array(arguments.length -  1);
while (G__21667__i < G__21667__a.length) {G__21667__a[G__21667__i] = arguments[G__21667__i + 1]; ++G__21667__i;}
  keyvals = new cljs.core.IndexedSeq(G__21667__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__21668){
var comparator = cljs.core.first(arglist__21668);
var keyvals = cljs.core.rest(arglist__21668);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__21669 = self__.mseq;
if(G__21669){
var bit__4431__auto__ = (G__21669.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4431__auto__) || (G__21669.cljs$core$INext$)){
return true;
} else {
if((!G__21669.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__21669);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__21669);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__21670 = self__.mseq;
if(G__21670){
var bit__4431__auto__ = (G__21670.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4431__auto__) || (G__21670.cljs$core$INext$)){
return true;
} else {
if((!G__21670.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__21670);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__21670);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4728__auto__ = this;
return cljs.core.es6_iterator(this__4728__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__21671 = self__.mseq;
if(G__21671){
var bit__4431__auto__ = (G__21671.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4431__auto__) || (G__21671.cljs$core$INext$)){
return true;
} else {
if((!G__21671.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__21671);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__21671);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__21672 = self__.mseq;
if(G__21672){
var bit__4431__auto__ = (G__21672.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4431__auto__) || (G__21672.cljs$core$INext$)){
return true;
} else {
if((!G__21672.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__21672);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__21672);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4728__auto__ = this;
return cljs.core.es6_iterator(this__4728__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__21673_SHARP_,p2__21674_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3750__auto__ = p1__21673_SHARP_;
if(cljs.core.truth_(or__3750__auto__)){
return or__3750__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__21674_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__21675__i = 0, G__21675__a = new Array(arguments.length -  0);
while (G__21675__i < G__21675__a.length) {G__21675__a[G__21675__i] = arguments[G__21675__i + 0]; ++G__21675__i;}
  maps = new cljs.core.IndexedSeq(G__21675__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__21676){
var maps = cljs.core.seq(arglist__21676);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__21679 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__21680 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21679,G__21680) : f.call(null,G__21679,G__21680));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__3750__auto__ = m1;
if(cljs.core.truth_(or__3750__auto__)){
return or__3750__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__21681__i = 0, G__21681__a = new Array(arguments.length -  1);
while (G__21681__i < G__21681__a.length) {G__21681__a[G__21681__i] = arguments[G__21681__i + 1]; ++G__21681__i;}
  maps = new cljs.core.IndexedSeq(G__21681__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__21682){
var f = cljs.core.first(arglist__21682);
var maps = cljs.core.rest(arglist__21682);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,cljs.core.constant$keyword$14);
var G__21683 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,cljs.core.constant$keyword$14))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__21684 = cljs.core.next(keys);
ret = G__21683;
keys = G__21684;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__21687 = cljs.core.seq(coll);
var chunk__21688 = null;
var count__21689 = (0);
var i__21690 = (0);
while(true){
if((i__21690 < count__21689)){
var vec__21691 = chunk__21688.cljs$core$IIndexed$_nth$arity$2(null,i__21690);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21691,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21691,(1),null);
var G__21692_21697 = v;
var G__21693_21698 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21692_21697,G__21693_21698) : f.call(null,G__21692_21697,G__21693_21698));

var G__21699 = seq__21687;
var G__21700 = chunk__21688;
var G__21701 = count__21689;
var G__21702 = (i__21690 + (1));
seq__21687 = G__21699;
chunk__21688 = G__21700;
count__21689 = G__21701;
i__21690 = G__21702;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__21687);
if(temp__4126__auto__){
var seq__21687__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__21687__$1)){
var c__4537__auto__ = cljs.core.chunk_first(seq__21687__$1);
var G__21703 = cljs.core.chunk_rest(seq__21687__$1);
var G__21704 = c__4537__auto__;
var G__21705 = cljs.core.count(c__4537__auto__);
var G__21706 = (0);
seq__21687 = G__21703;
chunk__21688 = G__21704;
count__21689 = G__21705;
i__21690 = G__21706;
continue;
} else {
var vec__21694 = cljs.core.first(seq__21687__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21694,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21694,(1),null);
var G__21695_21707 = v;
var G__21696_21708 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21695_21707,G__21696_21708) : f.call(null,G__21695_21707,G__21696_21708));

var G__21709 = cljs.core.next(seq__21687__$1);
var G__21710 = null;
var G__21711 = (0);
var G__21712 = (0);
seq__21687 = G__21709;
chunk__21688 = G__21710;
count__21689 = G__21711;
i__21690 = G__21712;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4171__auto__ = self__.__hash;
if(!((h__4171__auto__ == null))){
return h__4171__auto__;
} else {
var h__4171__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4171__auto____$1;

return h__4171__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__21685_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__21685_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__21713 = null;
var G__21713__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__21713__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__21713 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__21713__2.call(this,self__,k);
case 3:
return G__21713__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21713.cljs$core$IFn$_invoke$arity$2 = G__21713__2;
G__21713.cljs$core$IFn$_invoke$arity$3 = G__21713__3;
return G__21713;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args21686){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21686)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__21714 = (i + (1));
var G__21715 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__21714;
out = G__21715;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__21716 = (i + (1));
var G__21717 = cljs.core._conj_BANG_(out,(items[i]));
i = G__21716;
out = G__21717;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4728__auto__ = this;
return cljs.core.es6_iterator(this__4728__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__21719 = null;
var G__21719__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__21719__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__21719 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__21719__2.call(this,self__,k);
case 3:
return G__21719__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21719.cljs$core$IFn$_invoke$arity$2 = G__21719__2;
G__21719.cljs$core$IFn$_invoke$arity$3 = G__21719__3;
return G__21719;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args21718){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21718)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__21722 = cljs.core.seq(coll);
var chunk__21723 = null;
var count__21724 = (0);
var i__21725 = (0);
while(true){
if((i__21725 < count__21724)){
var vec__21726 = chunk__21723.cljs$core$IIndexed$_nth$arity$2(null,i__21725);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21726,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21726,(1),null);
var G__21727_21732 = v;
var G__21728_21733 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21727_21732,G__21728_21733) : f.call(null,G__21727_21732,G__21728_21733));

var G__21734 = seq__21722;
var G__21735 = chunk__21723;
var G__21736 = count__21724;
var G__21737 = (i__21725 + (1));
seq__21722 = G__21734;
chunk__21723 = G__21735;
count__21724 = G__21736;
i__21725 = G__21737;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__21722);
if(temp__4126__auto__){
var seq__21722__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__21722__$1)){
var c__4537__auto__ = cljs.core.chunk_first(seq__21722__$1);
var G__21738 = cljs.core.chunk_rest(seq__21722__$1);
var G__21739 = c__4537__auto__;
var G__21740 = cljs.core.count(c__4537__auto__);
var G__21741 = (0);
seq__21722 = G__21738;
chunk__21723 = G__21739;
count__21724 = G__21740;
i__21725 = G__21741;
continue;
} else {
var vec__21729 = cljs.core.first(seq__21722__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21729,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21729,(1),null);
var G__21730_21742 = v;
var G__21731_21743 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21730_21742,G__21731_21743) : f.call(null,G__21730_21742,G__21731_21743));

var G__21744 = cljs.core.next(seq__21722__$1);
var G__21745 = null;
var G__21746 = (0);
var G__21747 = (0);
seq__21722 = G__21744;
chunk__21723 = G__21745;
count__21724 = G__21746;
i__21725 = G__21747;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4171__auto__ = self__.__hash;
if(!((h__4171__auto__ == null))){
return h__4171__auto__;
} else {
var h__4171__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4171__auto____$1;

return h__4171__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__21720_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__21720_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__21748 = null;
var G__21748__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__21748__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__21748 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__21748__2.call(this,self__,k);
case 3:
return G__21748__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21748.cljs$core$IFn$_invoke$arity$2 = G__21748__2;
G__21748.cljs$core$IFn$_invoke$arity$3 = G__21748__3;
return G__21748;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args21721){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21721)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4728__auto__ = this;
return cljs.core.es6_iterator(this__4728__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__4631__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__4631__auto__.length)){
var G__21749 = (i + (1));
var G__21750 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__21749;
res = G__21750;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__21751 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__21752 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__21751;
out = G__21752;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__21753__delegate = function (keys){
return cljs.core.set(keys);
};
var G__21753 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__21754__i = 0, G__21754__a = new Array(arguments.length -  0);
while (G__21754__i < G__21754__a.length) {G__21754__a[G__21754__i] = arguments[G__21754__i + 0]; ++G__21754__i;}
  keys = new cljs.core.IndexedSeq(G__21754__a,0);
} 
return G__21753__delegate.call(this,keys);};
G__21753.cljs$lang$maxFixedArity = 0;
G__21753.cljs$lang$applyTo = (function (arglist__21755){
var keys = cljs.core.seq(arglist__21755);
return G__21753__delegate(keys);
});
G__21753.cljs$core$IFn$_invoke$arity$variadic = G__21753__delegate;
return G__21753;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__21756 = null;
if (arguments.length > 0) {
var G__21757__i = 0, G__21757__a = new Array(arguments.length -  0);
while (G__21757__i < G__21757__a.length) {G__21757__a[G__21757__i] = arguments[G__21757__i + 0]; ++G__21757__i;}
G__21756 = new cljs.core.IndexedSeq(G__21757__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__21756);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__21758__i = 0, G__21758__a = new Array(arguments.length -  0);
while (G__21758__i < G__21758__a.length) {G__21758__a[G__21758__i] = arguments[G__21758__i + 0]; ++G__21758__i;}
  keys = new cljs.core.IndexedSeq(G__21758__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__21759){
var keys = cljs.core.seq(arglist__21759);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__21760__i = 0, G__21760__a = new Array(arguments.length -  1);
while (G__21760__i < G__21760__a.length) {G__21760__a[G__21760__i] = arguments[G__21760__i + 1]; ++G__21760__i;}
  keys = new cljs.core.IndexedSeq(G__21760__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__21761){
var comparator = cljs.core.first(arglist__21761);
var keys = cljs.core.rest(arglist__21761);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__21762_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__21762_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__21762_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__21763_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__21763_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__21763_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__21784 = null;
var G__21784__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__21784__1 = (function (result){
var G__21774 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21774) : rf.call(null,G__21774));
});
var G__21784__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__21775 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21775) : cljs.core.deref.call(null,G__21775));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__21776 = result;
var G__21777 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21776,G__21777) : rf.call(null,G__21776,G__21777));
}
});
G__21784 = function(result,input){
switch(arguments.length){
case 0:
return G__21784__0.call(this);
case 1:
return G__21784__1.call(this,result);
case 2:
return G__21784__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21784.cljs$core$IFn$_invoke$arity$0 = G__21784__0;
G__21784.cljs$core$IFn$_invoke$arity$1 = G__21784__1;
G__21784.cljs$core$IFn$_invoke$arity$2 = G__21784__2;
return G__21784;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__21782,seen__$1){
while(true){
var vec__21783 = p__21782;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21783,(0),null);
var xs__$1 = vec__21783;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__21785 = cljs.core.rest(s);
var G__21786 = seen__$1;
p__21782 = G__21785;
seen__$1 = G__21786;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__21787 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__21788 = cljs.core.next(s__$1);
ret = G__21787;
s__$1 = G__21788;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__21790 = x;
if(G__21790){
var bit__4424__auto__ = (G__21790.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4424__auto__) || (G__21790.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__21791 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__21792 = cljs.core.next(ks);
var G__21793 = cljs.core.next(vs);
map = G__21791;
ks = G__21792;
vs = G__21793;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__21804 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__21804) : k.call(null,G__21804));
})() > (function (){var G__21805 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__21805) : k.call(null,G__21805));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__21806__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__21794_SHARP_,p2__21795_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__21794_SHARP_,p2__21795_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__21806 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__21807__i = 0, G__21807__a = new Array(arguments.length -  3);
while (G__21807__i < G__21807__a.length) {G__21807__a[G__21807__i] = arguments[G__21807__i + 3]; ++G__21807__i;}
  more = new cljs.core.IndexedSeq(G__21807__a,0);
} 
return G__21806__delegate.call(this,k,x,y,more);};
G__21806.cljs$lang$maxFixedArity = 3;
G__21806.cljs$lang$applyTo = (function (arglist__21808){
var k = cljs.core.first(arglist__21808);
arglist__21808 = cljs.core.next(arglist__21808);
var x = cljs.core.first(arglist__21808);
arglist__21808 = cljs.core.next(arglist__21808);
var y = cljs.core.first(arglist__21808);
var more = cljs.core.rest(arglist__21808);
return G__21806__delegate(k,x,y,more);
});
G__21806.cljs$core$IFn$_invoke$arity$variadic = G__21806__delegate;
return G__21806;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__21809 = null;
if (arguments.length > 3) {
var G__21810__i = 0, G__21810__a = new Array(arguments.length -  3);
while (G__21810__i < G__21810__a.length) {G__21810__a[G__21810__i] = arguments[G__21810__i + 3]; ++G__21810__i;}
G__21809 = new cljs.core.IndexedSeq(G__21810__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__21809);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__21821 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__21821) : k.call(null,G__21821));
})() < (function (){var G__21822 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__21822) : k.call(null,G__21822));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__21823__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__21811_SHARP_,p2__21812_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__21811_SHARP_,p2__21812_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__21823 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__21824__i = 0, G__21824__a = new Array(arguments.length -  3);
while (G__21824__i < G__21824__a.length) {G__21824__a[G__21824__i] = arguments[G__21824__i + 3]; ++G__21824__i;}
  more = new cljs.core.IndexedSeq(G__21824__a,0);
} 
return G__21823__delegate.call(this,k,x,y,more);};
G__21823.cljs$lang$maxFixedArity = 3;
G__21823.cljs$lang$applyTo = (function (arglist__21825){
var k = cljs.core.first(arglist__21825);
arglist__21825 = cljs.core.next(arglist__21825);
var x = cljs.core.first(arglist__21825);
arglist__21825 = cljs.core.next(arglist__21825);
var y = cljs.core.first(arglist__21825);
var more = cljs.core.rest(arglist__21825);
return G__21823__delegate(k,x,y,more);
});
G__21823.cljs$core$IFn$_invoke$arity$variadic = G__21823__delegate;
return G__21823;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__21826 = null;
if (arguments.length > 3) {
var G__21827__i = 0, G__21827__a = new Array(arguments.length -  3);
while (G__21827__i < G__21827__a.length) {G__21827__a[G__21827__i] = arguments[G__21827__i + 3]; ++G__21827__i;}
G__21826 = new cljs.core.IndexedSeq(G__21827__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__21826);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__21844 = null;
var G__21844__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__21844__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__21839 = result;
var G__21840 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21839,G__21840) : rf.call(null,G__21839,G__21840));
})());
})());
var G__21841 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21841) : rf.call(null,G__21841));
});
var G__21844__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__21842 = result;
var G__21843 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21842,G__21843) : rf.call(null,G__21842,G__21843));
} else {
return result;
}
});
G__21844 = function(result,input){
switch(arguments.length){
case 0:
return G__21844__0.call(this);
case 1:
return G__21844__1.call(this,result);
case 2:
return G__21844__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21844.cljs$core$IFn$_invoke$arity$0 = G__21844__0;
G__21844.cljs$core$IFn$_invoke$arity$1 = G__21844__1;
G__21844.cljs$core$IFn$_invoke$arity$2 = G__21844__2;
return G__21844;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__21857 = null;
var G__21857__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__21857__1 = (function (result){
var G__21852 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21852) : rf.call(null,G__21852));
});
var G__21857__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__21853 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__21853) : pred.call(null,G__21853));
})())){
var G__21854 = result;
var G__21855 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21854,G__21855) : rf.call(null,G__21854,G__21855));
} else {
return cljs.core.reduced(result);
}
});
G__21857 = function(result,input){
switch(arguments.length){
case 0:
return G__21857__0.call(this);
case 1:
return G__21857__1.call(this,result);
case 2:
return G__21857__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21857.cljs$core$IFn$_invoke$arity$0 = G__21857__0;
G__21857.cljs$core$IFn$_invoke$arity$1 = G__21857__1;
G__21857.cljs$core$IFn$_invoke$arity$2 = G__21857__2;
return G__21857;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__21856 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__21856) : pred.call(null,G__21856));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__21862 = (function (){var G__21864 = cljs.core._entry_key(sc,e);
var G__21865 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__21864,G__21865) : comp.call(null,G__21864,G__21865));
})();
var G__21863 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__21862,G__21863) : test.call(null,G__21862,G__21863));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__21869 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21869,(0),null);
var s = vec__21869;
if(cljs.core.truth_((function (){var G__21870 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__21870) : include.call(null,G__21870));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__21871 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21871,(0),null);
var s = vec__21871;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__21875 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21875,(0),null);
var s = vec__21875;
if(cljs.core.truth_((function (){var G__21876 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__21876) : include.call(null,G__21876));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__21877 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21877,(0),null);
var s = vec__21877;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__21878 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__21878) : Math.ceil.call(null,G__21878));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__4171__auto__ = self__.__hash;
if(!((h__4171__auto__ == null))){
return h__4171__auto__;
} else {
var h__4171__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__4171__auto____$1;

return h__4171__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__21879 = ret;
var G__21880 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21879,G__21880) : f.call(null,G__21879,G__21880));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__21881 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21881) : cljs.core.deref.call(null,G__21881));
} else {
var G__21882 = (i + self__.step);
var G__21883 = ret__$1;
i = G__21882;
ret = G__21883;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4728__auto__ = this;
return cljs.core.es6_iterator(this__4728__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__21901 = null;
var G__21901__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__21901__1 = (function (result){
var G__21898 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21898) : rf.call(null,G__21898));
});
var G__21901__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__21899 = result;
var G__21900 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21899,G__21900) : rf.call(null,G__21899,G__21900));
} else {
return result;
}
});
G__21901 = function(result,input){
switch(arguments.length){
case 0:
return G__21901__0.call(this);
case 1:
return G__21901__1.call(this,result);
case 2:
return G__21901__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21901.cljs$core$IFn$_invoke$arity$0 = G__21901__0;
G__21901.cljs$core$IFn$_invoke$arity$1 = G__21901__1;
G__21901.cljs$core$IFn$_invoke$arity$2 = G__21901__2;
return G__21901;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(cljs.core.constant$keyword$15);
return ((function (a,pa){
return (function() {
var G__21923 = null;
var G__21923__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__21923__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__21914 = result;
var G__21915 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21914,G__21915) : rf.call(null,G__21914,G__21915));
})());
})());
var G__21916 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21916) : rf.call(null,G__21916));
});
var G__21923__2 = (function (result,input){
var pval = (function (){var G__21917 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21917) : cljs.core.deref.call(null,G__21917));
})();
var val = (function (){var G__21918 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21918) : f.call(null,G__21918));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,cljs.core.constant$keyword$15)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__21919 = result;
var G__21920 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21919,G__21920) : rf.call(null,G__21919,G__21920));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__21923 = function(result,input){
switch(arguments.length){
case 0:
return G__21923__0.call(this);
case 1:
return G__21923__1.call(this,result);
case 2:
return G__21923__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21923.cljs$core$IFn$_invoke$arity$0 = G__21923__0;
G__21923.cljs$core$IFn$_invoke$arity$1 = G__21923__1;
G__21923.cljs$core$IFn$_invoke$arity$2 = G__21923__2;
return G__21923;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__21921 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21921) : f.call(null,G__21921));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__21902_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__21922 = p1__21902_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21922) : f.call(null,G__21922));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__21932 = init;
var G__21933 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21932,G__21933) : f.call(null,G__21932,G__21933));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__22028 = null;
var G__22028__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__22028__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__21986 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21986) : f.call(null,G__21986));
})()],null));
});
var G__22028__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__21987 = x;
var G__21988 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21987,G__21988) : f.call(null,G__21987,G__21988));
})()],null));
});
var G__22028__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__21989 = x;
var G__21990 = y;
var G__21991 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21989,G__21990,G__21991) : f.call(null,G__21989,G__21990,G__21991));
})()],null));
});
var G__22028__4 = (function() { 
var G__22029__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__22029 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22030__i = 0, G__22030__a = new Array(arguments.length -  3);
while (G__22030__i < G__22030__a.length) {G__22030__a[G__22030__i] = arguments[G__22030__i + 3]; ++G__22030__i;}
  args = new cljs.core.IndexedSeq(G__22030__a,0);
} 
return G__22029__delegate.call(this,x,y,z,args);};
G__22029.cljs$lang$maxFixedArity = 3;
G__22029.cljs$lang$applyTo = (function (arglist__22031){
var x = cljs.core.first(arglist__22031);
arglist__22031 = cljs.core.next(arglist__22031);
var y = cljs.core.first(arglist__22031);
arglist__22031 = cljs.core.next(arglist__22031);
var z = cljs.core.first(arglist__22031);
var args = cljs.core.rest(arglist__22031);
return G__22029__delegate(x,y,z,args);
});
G__22029.cljs$core$IFn$_invoke$arity$variadic = G__22029__delegate;
return G__22029;
})()
;
G__22028 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__22028__0.call(this);
case 1:
return G__22028__1.call(this,x);
case 2:
return G__22028__2.call(this,x,y);
case 3:
return G__22028__3.call(this,x,y,z);
default:
var G__22032 = null;
if (arguments.length > 3) {
var G__22033__i = 0, G__22033__a = new Array(arguments.length -  3);
while (G__22033__i < G__22033__a.length) {G__22033__a[G__22033__i] = arguments[G__22033__i + 3]; ++G__22033__i;}
G__22032 = new cljs.core.IndexedSeq(G__22033__a,0);
}
return G__22028__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22032);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22028.cljs$lang$maxFixedArity = 3;
G__22028.cljs$lang$applyTo = G__22028__4.cljs$lang$applyTo;
G__22028.cljs$core$IFn$_invoke$arity$0 = G__22028__0;
G__22028.cljs$core$IFn$_invoke$arity$1 = G__22028__1;
G__22028.cljs$core$IFn$_invoke$arity$2 = G__22028__2;
G__22028.cljs$core$IFn$_invoke$arity$3 = G__22028__3;
G__22028.cljs$core$IFn$_invoke$arity$variadic = G__22028__4.cljs$core$IFn$_invoke$arity$variadic;
return G__22028;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__22034 = null;
var G__22034__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__22034__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__21992 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21992) : f.call(null,G__21992));
})(),(function (){var G__21993 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__21993) : g.call(null,G__21993));
})()],null));
});
var G__22034__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__21994 = x;
var G__21995 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21994,G__21995) : f.call(null,G__21994,G__21995));
})(),(function (){var G__21996 = x;
var G__21997 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__21996,G__21997) : g.call(null,G__21996,G__21997));
})()],null));
});
var G__22034__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__21998 = x;
var G__21999 = y;
var G__22000 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21998,G__21999,G__22000) : f.call(null,G__21998,G__21999,G__22000));
})(),(function (){var G__22001 = x;
var G__22002 = y;
var G__22003 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__22001,G__22002,G__22003) : g.call(null,G__22001,G__22002,G__22003));
})()],null));
});
var G__22034__4 = (function() { 
var G__22035__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__22035 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22036__i = 0, G__22036__a = new Array(arguments.length -  3);
while (G__22036__i < G__22036__a.length) {G__22036__a[G__22036__i] = arguments[G__22036__i + 3]; ++G__22036__i;}
  args = new cljs.core.IndexedSeq(G__22036__a,0);
} 
return G__22035__delegate.call(this,x,y,z,args);};
G__22035.cljs$lang$maxFixedArity = 3;
G__22035.cljs$lang$applyTo = (function (arglist__22037){
var x = cljs.core.first(arglist__22037);
arglist__22037 = cljs.core.next(arglist__22037);
var y = cljs.core.first(arglist__22037);
arglist__22037 = cljs.core.next(arglist__22037);
var z = cljs.core.first(arglist__22037);
var args = cljs.core.rest(arglist__22037);
return G__22035__delegate(x,y,z,args);
});
G__22035.cljs$core$IFn$_invoke$arity$variadic = G__22035__delegate;
return G__22035;
})()
;
G__22034 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__22034__0.call(this);
case 1:
return G__22034__1.call(this,x);
case 2:
return G__22034__2.call(this,x,y);
case 3:
return G__22034__3.call(this,x,y,z);
default:
var G__22038 = null;
if (arguments.length > 3) {
var G__22039__i = 0, G__22039__a = new Array(arguments.length -  3);
while (G__22039__i < G__22039__a.length) {G__22039__a[G__22039__i] = arguments[G__22039__i + 3]; ++G__22039__i;}
G__22038 = new cljs.core.IndexedSeq(G__22039__a,0);
}
return G__22034__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22038);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22034.cljs$lang$maxFixedArity = 3;
G__22034.cljs$lang$applyTo = G__22034__4.cljs$lang$applyTo;
G__22034.cljs$core$IFn$_invoke$arity$0 = G__22034__0;
G__22034.cljs$core$IFn$_invoke$arity$1 = G__22034__1;
G__22034.cljs$core$IFn$_invoke$arity$2 = G__22034__2;
G__22034.cljs$core$IFn$_invoke$arity$3 = G__22034__3;
G__22034.cljs$core$IFn$_invoke$arity$variadic = G__22034__4.cljs$core$IFn$_invoke$arity$variadic;
return G__22034;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__22040 = null;
var G__22040__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__22040__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__22004 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22004) : f.call(null,G__22004));
})(),(function (){var G__22005 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__22005) : g.call(null,G__22005));
})(),(function (){var G__22006 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__22006) : h.call(null,G__22006));
})()],null));
});
var G__22040__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__22007 = x;
var G__22008 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22007,G__22008) : f.call(null,G__22007,G__22008));
})(),(function (){var G__22009 = x;
var G__22010 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__22009,G__22010) : g.call(null,G__22009,G__22010));
})(),(function (){var G__22011 = x;
var G__22012 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__22011,G__22012) : h.call(null,G__22011,G__22012));
})()],null));
});
var G__22040__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__22013 = x;
var G__22014 = y;
var G__22015 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22013,G__22014,G__22015) : f.call(null,G__22013,G__22014,G__22015));
})(),(function (){var G__22016 = x;
var G__22017 = y;
var G__22018 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__22016,G__22017,G__22018) : g.call(null,G__22016,G__22017,G__22018));
})(),(function (){var G__22019 = x;
var G__22020 = y;
var G__22021 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__22019,G__22020,G__22021) : h.call(null,G__22019,G__22020,G__22021));
})()],null));
});
var G__22040__4 = (function() { 
var G__22041__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__22041 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22042__i = 0, G__22042__a = new Array(arguments.length -  3);
while (G__22042__i < G__22042__a.length) {G__22042__a[G__22042__i] = arguments[G__22042__i + 3]; ++G__22042__i;}
  args = new cljs.core.IndexedSeq(G__22042__a,0);
} 
return G__22041__delegate.call(this,x,y,z,args);};
G__22041.cljs$lang$maxFixedArity = 3;
G__22041.cljs$lang$applyTo = (function (arglist__22043){
var x = cljs.core.first(arglist__22043);
arglist__22043 = cljs.core.next(arglist__22043);
var y = cljs.core.first(arglist__22043);
arglist__22043 = cljs.core.next(arglist__22043);
var z = cljs.core.first(arglist__22043);
var args = cljs.core.rest(arglist__22043);
return G__22041__delegate(x,y,z,args);
});
G__22041.cljs$core$IFn$_invoke$arity$variadic = G__22041__delegate;
return G__22041;
})()
;
G__22040 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__22040__0.call(this);
case 1:
return G__22040__1.call(this,x);
case 2:
return G__22040__2.call(this,x,y);
case 3:
return G__22040__3.call(this,x,y,z);
default:
var G__22044 = null;
if (arguments.length > 3) {
var G__22045__i = 0, G__22045__a = new Array(arguments.length -  3);
while (G__22045__i < G__22045__a.length) {G__22045__a[G__22045__i] = arguments[G__22045__i + 3]; ++G__22045__i;}
G__22044 = new cljs.core.IndexedSeq(G__22045__a,0);
}
return G__22040__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22044);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22040.cljs$lang$maxFixedArity = 3;
G__22040.cljs$lang$applyTo = G__22040__4.cljs$lang$applyTo;
G__22040.cljs$core$IFn$_invoke$arity$0 = G__22040__0;
G__22040.cljs$core$IFn$_invoke$arity$1 = G__22040__1;
G__22040.cljs$core$IFn$_invoke$arity$2 = G__22040__2;
G__22040.cljs$core$IFn$_invoke$arity$3 = G__22040__3;
G__22040.cljs$core$IFn$_invoke$arity$variadic = G__22040__4.cljs$core$IFn$_invoke$arity$variadic;
return G__22040;
})()
});
var juxt__4 = (function() { 
var G__22046__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__22047 = null;
var G__22047__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__21934_SHARP_,p2__21935_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__21934_SHARP_,(function (){return (p2__21935_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__21935_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__21935_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__22047__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__21936_SHARP_,p2__21937_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__21936_SHARP_,(function (){var G__22022 = x;
return (p2__21937_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__21937_SHARP_.cljs$core$IFn$_invoke$arity$1(G__22022) : p2__21937_SHARP_.call(null,G__22022));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__22047__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__21938_SHARP_,p2__21939_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__21938_SHARP_,(function (){var G__22023 = x;
var G__22024 = y;
return (p2__21939_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__21939_SHARP_.cljs$core$IFn$_invoke$arity$2(G__22023,G__22024) : p2__21939_SHARP_.call(null,G__22023,G__22024));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__22047__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__21940_SHARP_,p2__21941_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__21940_SHARP_,(function (){var G__22025 = x;
var G__22026 = y;
var G__22027 = z;
return (p2__21941_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__21941_SHARP_.cljs$core$IFn$_invoke$arity$3(G__22025,G__22026,G__22027) : p2__21941_SHARP_.call(null,G__22025,G__22026,G__22027));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__22047__4 = (function() { 
var G__22048__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__21942_SHARP_,p2__21943_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__21942_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__21943_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__22048 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22049__i = 0, G__22049__a = new Array(arguments.length -  3);
while (G__22049__i < G__22049__a.length) {G__22049__a[G__22049__i] = arguments[G__22049__i + 3]; ++G__22049__i;}
  args = new cljs.core.IndexedSeq(G__22049__a,0);
} 
return G__22048__delegate.call(this,x,y,z,args);};
G__22048.cljs$lang$maxFixedArity = 3;
G__22048.cljs$lang$applyTo = (function (arglist__22050){
var x = cljs.core.first(arglist__22050);
arglist__22050 = cljs.core.next(arglist__22050);
var y = cljs.core.first(arglist__22050);
arglist__22050 = cljs.core.next(arglist__22050);
var z = cljs.core.first(arglist__22050);
var args = cljs.core.rest(arglist__22050);
return G__22048__delegate(x,y,z,args);
});
G__22048.cljs$core$IFn$_invoke$arity$variadic = G__22048__delegate;
return G__22048;
})()
;
G__22047 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__22047__0.call(this);
case 1:
return G__22047__1.call(this,x);
case 2:
return G__22047__2.call(this,x,y);
case 3:
return G__22047__3.call(this,x,y,z);
default:
var G__22051 = null;
if (arguments.length > 3) {
var G__22052__i = 0, G__22052__a = new Array(arguments.length -  3);
while (G__22052__i < G__22052__a.length) {G__22052__a[G__22052__i] = arguments[G__22052__i + 3]; ++G__22052__i;}
G__22051 = new cljs.core.IndexedSeq(G__22052__a,0);
}
return G__22047__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22051);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22047.cljs$lang$maxFixedArity = 3;
G__22047.cljs$lang$applyTo = G__22047__4.cljs$lang$applyTo;
G__22047.cljs$core$IFn$_invoke$arity$0 = G__22047__0;
G__22047.cljs$core$IFn$_invoke$arity$1 = G__22047__1;
G__22047.cljs$core$IFn$_invoke$arity$2 = G__22047__2;
G__22047.cljs$core$IFn$_invoke$arity$3 = G__22047__3;
G__22047.cljs$core$IFn$_invoke$arity$variadic = G__22047__4.cljs$core$IFn$_invoke$arity$variadic;
return G__22047;
})()
;})(fs__$1))
};
var G__22046 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__22053__i = 0, G__22053__a = new Array(arguments.length -  3);
while (G__22053__i < G__22053__a.length) {G__22053__a[G__22053__i] = arguments[G__22053__i + 3]; ++G__22053__i;}
  fs = new cljs.core.IndexedSeq(G__22053__a,0);
} 
return G__22046__delegate.call(this,f,g,h,fs);};
G__22046.cljs$lang$maxFixedArity = 3;
G__22046.cljs$lang$applyTo = (function (arglist__22054){
var f = cljs.core.first(arglist__22054);
arglist__22054 = cljs.core.next(arglist__22054);
var g = cljs.core.first(arglist__22054);
arglist__22054 = cljs.core.next(arglist__22054);
var h = cljs.core.first(arglist__22054);
var fs = cljs.core.rest(arglist__22054);
return G__22046__delegate(f,g,h,fs);
});
G__22046.cljs$core$IFn$_invoke$arity$variadic = G__22046__delegate;
return G__22046;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__22055 = null;
if (arguments.length > 3) {
var G__22056__i = 0, G__22056__a = new Array(arguments.length -  3);
while (G__22056__i < G__22056__a.length) {G__22056__a[G__22056__i] = arguments[G__22056__i + 3]; ++G__22056__i;}
G__22055 = new cljs.core.IndexedSeq(G__22056__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__22055);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__22057 = cljs.core.next(coll);
coll = G__22057;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__22058 = (n - (1));
var G__22059 = cljs.core.next(coll);
n = G__22058;
coll = G__22059;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__22063 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22063,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22063,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22063,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_22071 = cljs.core._STAR_print_level_STAR_;
try{cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if(cljs.core.seq(coll)){
var G__22072_22078 = cljs.core.first(coll);
var G__22073_22079 = writer;
var G__22074_22080 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__22072_22078,G__22073_22079,G__22074_22080) : print_one.call(null,G__22072_22078,G__22073_22079,G__22074_22080));
} else {
}

var coll_22081__$1 = cljs.core.next(coll);
var n_22082 = (cljs.core.constant$keyword$5.cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_22081__$1) && (((n_22082 == null)) || (!((n_22082 === (0)))))){
cljs.core._write(writer,sep);

var G__22075_22083 = cljs.core.first(coll_22081__$1);
var G__22076_22084 = writer;
var G__22077_22085 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__22075_22083,G__22076_22084,G__22077_22085) : print_one.call(null,G__22075_22083,G__22076_22084,G__22077_22085));

var G__22086 = cljs.core.next(coll_22081__$1);
var G__22087 = (n_22082 - (1));
coll_22081__$1 = G__22086;
n_22082 = G__22087;
continue;
} else {
if((cljs.core.seq(coll_22081__$1)) && ((n_22082 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,"...");
} else {
}
}
break;
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_22071;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__22092 = cljs.core.seq(ss);
var chunk__22093 = null;
var count__22094 = (0);
var i__22095 = (0);
while(true){
if((i__22095 < count__22094)){
var s = chunk__22093.cljs$core$IIndexed$_nth$arity$2(null,i__22095);
cljs.core._write(writer,s);

var G__22096 = seq__22092;
var G__22097 = chunk__22093;
var G__22098 = count__22094;
var G__22099 = (i__22095 + (1));
seq__22092 = G__22096;
chunk__22093 = G__22097;
count__22094 = G__22098;
i__22095 = G__22099;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__22092);
if(temp__4126__auto__){
var seq__22092__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__22092__$1)){
var c__4537__auto__ = cljs.core.chunk_first(seq__22092__$1);
var G__22100 = cljs.core.chunk_rest(seq__22092__$1);
var G__22101 = c__4537__auto__;
var G__22102 = cljs.core.count(c__4537__auto__);
var G__22103 = (0);
seq__22092 = G__22100;
chunk__22093 = G__22101;
count__22094 = G__22102;
i__22095 = G__22103;
continue;
} else {
var s = cljs.core.first(seq__22092__$1);
cljs.core._write(writer,s);

var G__22104 = cljs.core.next(seq__22092__$1);
var G__22105 = null;
var G__22106 = (0);
var G__22107 = (0);
seq__22092 = G__22104;
chunk__22093 = G__22105;
count__22094 = G__22106;
i__22095 = G__22107;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__22108__i = 0, G__22108__a = new Array(arguments.length -  1);
while (G__22108__i < G__22108__a.length) {G__22108__a[G__22108__i] = arguments[G__22108__i + 1]; ++G__22108__i;}
  ss = new cljs.core.IndexedSeq(G__22108__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__22109){
var writer = cljs.core.first(arglist__22109);
var ss = cljs.core.rest(arglist__22109);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj22111 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj22111;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__22114 = "[\\\\\"\b\f\n\r\t]";
var G__22115 = "g";
return RegExp(G__22114,G__22115);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__3738__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,cljs.core.constant$keyword$3);
if(cljs.core.truth_(and__3738__auto__)){
var and__3738__auto____$1 = (function (){var G__22129 = obj;
if(G__22129){
var bit__4431__auto__ = (G__22129.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4431__auto__) || (G__22129.cljs$core$IMeta$)){
return true;
} else {
if((!G__22129.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__22129);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__22129);
}
})();
if(and__3738__auto____$1){
return cljs.core.meta(obj);
} else {
return and__3738__auto____$1;
}
} else {
return and__3738__auto__;
}
})())){
cljs.core._write(writer,"^");

pr_writer(cljs.core.meta(obj),writer,opts);

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__22130 = obj;
if(G__22130){
var bit__4424__auto__ = (G__22130.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4424__auto__) || (G__22130.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__22131 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__22132 = pr_writer;
var G__22133 = writer;
var G__22134 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__22131,G__22132,G__22133,G__22134) : cljs.core.print_map.call(null,G__22131,G__22132,G__22133,G__22134));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__22135 = obj;
return goog.isString(G__22135);
})())){
if(cljs.core.truth_(cljs.core.constant$keyword$2.cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__22137 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__22137;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__22136 = obj;
if(G__22136){
var bit__4431__auto__ = (G__22136.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4431__auto__) || (G__22136.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__22136.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__22136);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__22136);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__22142 = cljs.core.seq(cljs.core.next(objs));
var chunk__22143 = null;
var count__22144 = (0);
var i__22145 = (0);
while(true){
if((i__22145 < count__22144)){
var obj = chunk__22143.cljs$core$IIndexed$_nth$arity$2(null,i__22145);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__22146 = seq__22142;
var G__22147 = chunk__22143;
var G__22148 = count__22144;
var G__22149 = (i__22145 + (1));
seq__22142 = G__22146;
chunk__22143 = G__22147;
count__22144 = G__22148;
i__22145 = G__22149;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__22142);
if(temp__4126__auto__){
var seq__22142__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__22142__$1)){
var c__4537__auto__ = cljs.core.chunk_first(seq__22142__$1);
var G__22150 = cljs.core.chunk_rest(seq__22142__$1);
var G__22151 = c__4537__auto__;
var G__22152 = cljs.core.count(c__4537__auto__);
var G__22153 = (0);
seq__22142 = G__22150;
chunk__22143 = G__22151;
count__22144 = G__22152;
i__22145 = G__22153;
continue;
} else {
var obj = cljs.core.first(seq__22142__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__22154 = cljs.core.next(seq__22142__$1);
var G__22155 = null;
var G__22156 = (0);
var G__22157 = (0);
seq__22142 = G__22154;
chunk__22143 = G__22155;
count__22144 = G__22156;
i__22145 = G__22157;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,cljs.core.constant$keyword$1))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__22158__i = 0, G__22158__a = new Array(arguments.length -  0);
while (G__22158__i < G__22158__a.length) {G__22158__a[G__22158__i] = arguments[G__22158__i + 0]; ++G__22158__i;}
  objs = new cljs.core.IndexedSeq(G__22158__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__22159){
var objs = cljs.core.seq(arglist__22159);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__22160__i = 0, G__22160__a = new Array(arguments.length -  0);
while (G__22160__i < G__22160__a.length) {G__22160__a[G__22160__i] = arguments[G__22160__i + 0]; ++G__22160__i;}
  objs = new cljs.core.IndexedSeq(G__22160__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__22161){
var objs = cljs.core.seq(arglist__22161);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__22162__i = 0, G__22162__a = new Array(arguments.length -  0);
while (G__22162__i < G__22162__a.length) {G__22162__a[G__22162__i] = arguments[G__22162__i + 0]; ++G__22162__i;}
  objs = new cljs.core.IndexedSeq(G__22162__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__22163){
var objs = cljs.core.seq(arglist__22163);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__22164__i = 0, G__22164__a = new Array(arguments.length -  0);
while (G__22164__i < G__22164__a.length) {G__22164__a[G__22164__i] = arguments[G__22164__i + 0]; ++G__22164__i;}
  objs = new cljs.core.IndexedSeq(G__22164__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__22165){
var objs = cljs.core.seq(arglist__22165);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__22166__i = 0, G__22166__a = new Array(arguments.length -  0);
while (G__22166__i < G__22166__a.length) {G__22166__a[G__22166__i] = arguments[G__22166__i + 0]; ++G__22166__i;}
  objs = new cljs.core.IndexedSeq(G__22166__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__22167){
var objs = cljs.core.seq(arglist__22167);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__22168__i = 0, G__22168__a = new Array(arguments.length -  0);
while (G__22168__i < G__22168__a.length) {G__22168__a[G__22168__i] = arguments[G__22168__i + 0]; ++G__22168__i;}
  objs = new cljs.core.IndexedSeq(G__22168__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__22169){
var objs = cljs.core.seq(arglist__22169);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__22170__i = 0, G__22170__a = new Array(arguments.length -  0);
while (G__22170__i < G__22170__a.length) {G__22170__a[G__22170__i] = arguments[G__22170__i + 0]; ++G__22170__i;}
  objs = new cljs.core.IndexedSeq(G__22170__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__22171){
var objs = cljs.core.seq(arglist__22171);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__22172__i = 0, G__22172__a = new Array(arguments.length -  0);
while (G__22172__i < G__22172__a.length) {G__22172__a[G__22172__i] = arguments[G__22172__i + 0]; ++G__22172__i;}
  objs = new cljs.core.IndexedSeq(G__22172__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__22173){
var objs = cljs.core.seq(arglist__22173);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__22180_22186 = cljs.core.key(e);
var G__22181_22187 = w;
var G__22182_22188 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__22180_22186,G__22181_22187,G__22182_22188) : print_one.call(null,G__22180_22186,G__22181_22187,G__22182_22188));

cljs.core._write(w," ");

var G__22183 = cljs.core.val(e);
var G__22184 = w;
var G__22185 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__22183,G__22184,G__22185) : print_one.call(null,G__22183,G__22184,G__22185));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__22189__i = 0, G__22189__a = new Array(arguments.length -  2);
while (G__22189__i < G__22189__a.length) {G__22189__a[G__22189__i] = arguments[G__22189__i + 2]; ++G__22189__i;}
  args = new cljs.core.IndexedSeq(G__22189__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__22190){
var iref = cljs.core.first(arglist__22190);
arglist__22190 = cljs.core.next(arglist__22190);
var f = cljs.core.first(arglist__22190);
var args = cljs.core.rest(arglist__22190);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__22193 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__22193) : cljs.core.atom.call(null,G__22193));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__22195 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22195) : cljs.core.deref.call(null,G__22195));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__22196_SHARP_,p2__22197_SHARP_){
var ret = (function (){var G__22200 = p1__22196_SHARP_;
var G__22201 = p2__22197_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22200,G__22201) : rf.call(null,G__22200,G__22201));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__22204 = null;
var G__22204__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22204__1 = (function (result){
var G__22203 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22203) : rf.call(null,G__22203));
});
var G__22204__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__22204 = function(result,input){
switch(arguments.length){
case 0:
return G__22204__0.call(this);
case 1:
return G__22204__1.call(this,result);
case 2:
return G__22204__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22204.cljs$core$IFn$_invoke$arity$0 = G__22204__0;
G__22204.cljs$core$IFn$_invoke$arity$1 = G__22204__1;
G__22204.cljs$core$IFn$_invoke$arity$2 = G__22204__2;
return G__22204;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(cljs.core.constant$keyword$15);
return ((function (pa){
return (function() {
var G__22213 = null;
var G__22213__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22213__1 = (function (result){
var G__22209 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22209) : rf.call(null,G__22209));
});
var G__22213__2 = (function (result,input){
var prior = (function (){var G__22210 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22210) : cljs.core.deref.call(null,G__22210));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__22211 = result;
var G__22212 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22211,G__22212) : rf.call(null,G__22211,G__22212));
}
});
G__22213 = function(result,input){
switch(arguments.length){
case 0:
return G__22213__0.call(this);
case 1:
return G__22213__1.call(this,result);
case 2:
return G__22213__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22213.cljs$core$IFn$_invoke$arity$0 = G__22213__0;
G__22213.cljs$core$IFn$_invoke$arity$1 = G__22213__1;
G__22213.cljs$core$IFn$_invoke$arity$2 = G__22213__2;
return G__22213;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4728__auto__ = this;
return cljs.core.es6_iterator(this__4728__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__22215_SHARP_,p2__22214_SHARP_){
var G__22217 = p2__22214_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__22217) : proc.call(null,G__22217));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj22219 = {};
return obj22219;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__3738__auto__ = x;
if(and__3738__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__3738__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__4394__auto__ = (((x == null))?null:x);
return (function (){var or__3750__auto__ = (cljs.core._clj__GT_js[(function (){var G__22223 = x__4394__auto__;
return goog.typeOf(G__22223);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__3738__auto__ = x;
if(and__3738__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__3738__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__4394__auto__ = (((x == null))?null:x);
return (function (){var or__3750__auto__ = (cljs.core._key__GT_js[(function (){var G__22227 = x__4394__auto__;
return goog.typeOf(G__22227);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__22230 = k;
if(G__22230){
var bit__4431__auto__ = null;
if(cljs.core.truth_((function (){var or__3750__auto__ = bit__4431__auto__;
if(cljs.core.truth_(or__3750__auto__)){
return or__3750__auto__;
} else {
return G__22230.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__22230.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__22230);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__22230);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__22231 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__22231) : cljs.core.clj__GT_js.call(null,G__22231));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__22247 = x;
if(G__22247){
var bit__4431__auto__ = null;
if(cljs.core.truth_((function (){var or__3750__auto__ = bit__4431__auto__;
if(cljs.core.truth_(or__3750__auto__)){
return or__3750__auto__;
} else {
return G__22247.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__22247.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__22247);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__22247);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj22249 = {};
return obj22249;
})();
var seq__22250_22260 = cljs.core.seq(x);
var chunk__22251_22261 = null;
var count__22252_22262 = (0);
var i__22253_22263 = (0);
while(true){
if((i__22253_22263 < count__22252_22262)){
var vec__22254_22264 = chunk__22251_22261.cljs$core$IIndexed$_nth$arity$2(null,i__22253_22263);
var k_22265 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22254_22264,(0),null);
var v_22266 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22254_22264,(1),null);
(m[cljs.core.key__GT_js(k_22265)] = clj__GT_js(v_22266));

var G__22267 = seq__22250_22260;
var G__22268 = chunk__22251_22261;
var G__22269 = count__22252_22262;
var G__22270 = (i__22253_22263 + (1));
seq__22250_22260 = G__22267;
chunk__22251_22261 = G__22268;
count__22252_22262 = G__22269;
i__22253_22263 = G__22270;
continue;
} else {
var temp__4126__auto___22271 = cljs.core.seq(seq__22250_22260);
if(temp__4126__auto___22271){
var seq__22250_22272__$1 = temp__4126__auto___22271;
if(cljs.core.chunked_seq_QMARK_(seq__22250_22272__$1)){
var c__4537__auto___22273 = cljs.core.chunk_first(seq__22250_22272__$1);
var G__22274 = cljs.core.chunk_rest(seq__22250_22272__$1);
var G__22275 = c__4537__auto___22273;
var G__22276 = cljs.core.count(c__4537__auto___22273);
var G__22277 = (0);
seq__22250_22260 = G__22274;
chunk__22251_22261 = G__22275;
count__22252_22262 = G__22276;
i__22253_22263 = G__22277;
continue;
} else {
var vec__22255_22278 = cljs.core.first(seq__22250_22272__$1);
var k_22279 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22255_22278,(0),null);
var v_22280 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22255_22278,(1),null);
(m[cljs.core.key__GT_js(k_22279)] = clj__GT_js(v_22280));

var G__22281 = cljs.core.next(seq__22250_22272__$1);
var G__22282 = null;
var G__22283 = (0);
var G__22284 = (0);
seq__22250_22260 = G__22281;
chunk__22251_22261 = G__22282;
count__22252_22262 = G__22283;
i__22253_22263 = G__22284;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__22256_22285 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__22257_22286 = null;
var count__22258_22287 = (0);
var i__22259_22288 = (0);
while(true){
if((i__22259_22288 < count__22258_22287)){
var x_22289__$1 = chunk__22257_22286.cljs$core$IIndexed$_nth$arity$2(null,i__22259_22288);
arr.push(x_22289__$1);

var G__22290 = seq__22256_22285;
var G__22291 = chunk__22257_22286;
var G__22292 = count__22258_22287;
var G__22293 = (i__22259_22288 + (1));
seq__22256_22285 = G__22290;
chunk__22257_22286 = G__22291;
count__22258_22287 = G__22292;
i__22259_22288 = G__22293;
continue;
} else {
var temp__4126__auto___22294 = cljs.core.seq(seq__22256_22285);
if(temp__4126__auto___22294){
var seq__22256_22295__$1 = temp__4126__auto___22294;
if(cljs.core.chunked_seq_QMARK_(seq__22256_22295__$1)){
var c__4537__auto___22296 = cljs.core.chunk_first(seq__22256_22295__$1);
var G__22297 = cljs.core.chunk_rest(seq__22256_22295__$1);
var G__22298 = c__4537__auto___22296;
var G__22299 = cljs.core.count(c__4537__auto___22296);
var G__22300 = (0);
seq__22256_22285 = G__22297;
chunk__22257_22286 = G__22298;
count__22258_22287 = G__22299;
i__22259_22288 = G__22300;
continue;
} else {
var x_22301__$1 = cljs.core.first(seq__22256_22295__$1);
arr.push(x_22301__$1);

var G__22302 = cljs.core.next(seq__22256_22295__$1);
var G__22303 = null;
var G__22304 = (0);
var G__22305 = (0);
seq__22256_22285 = G__22302;
chunk__22257_22286 = G__22303;
count__22258_22287 = G__22304;
i__22259_22288 = G__22305;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj22307 = {};
return obj22307;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__3738__auto__ = x;
if(and__3738__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__3738__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__4394__auto__ = (((x == null))?null:x);
return (function (){var or__3750__auto__ = (cljs.core._js__GT_clj[(function (){var G__22311 = x__4394__auto__;
return goog.typeOf(G__22311);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$16,false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__22368__delegate = function (x,opts){
var map__22341 = opts;
var map__22341__$1 = ((cljs.core.seq_QMARK_(map__22341))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__22341):map__22341);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22341__$1,cljs.core.constant$keyword$16);
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__22341,map__22341__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__22357 = x__$1;
if(G__22357){
var bit__4431__auto__ = null;
if(cljs.core.truth_((function (){var or__3750__auto__ = bit__4431__auto__;
if(cljs.core.truth_(or__3750__auto__)){
return or__3750__auto__;
} else {
return G__22357.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__22357.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__22357);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__22357);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4506__auto__ = ((function (map__22341,map__22341__$1,keywordize_keys,keyfn){
return (function iter__22358(s__22359){
return (new cljs.core.LazySeq(null,((function (map__22341,map__22341__$1,keywordize_keys,keyfn){
return (function (){
var s__22359__$1 = s__22359;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__22359__$1);
if(temp__4126__auto__){
var s__22359__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__22359__$2)){
var c__4504__auto__ = cljs.core.chunk_first(s__22359__$2);
var size__4505__auto__ = cljs.core.count(c__4504__auto__);
var b__22361 = cljs.core.chunk_buffer(size__4505__auto__);
if((function (){var i__22360 = (0);
while(true){
if((i__22360 < size__4505__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4504__auto__,i__22360);
cljs.core.chunk_append(b__22361,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__22366 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__22366) : keyfn.call(null,G__22366));
})(),thisfn((x__$1[k]))], null));

var G__22369 = (i__22360 + (1));
i__22360 = G__22369;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__22361),iter__22358(cljs.core.chunk_rest(s__22359__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__22361),null);
}
} else {
var k = cljs.core.first(s__22359__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__22367 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__22367) : keyfn.call(null,G__22367));
})(),thisfn((x__$1[k]))], null),iter__22358(cljs.core.rest(s__22359__$2)));
}
} else {
return null;
}
break;
}
});})(map__22341,map__22341__$1,keywordize_keys,keyfn))
,null,null));
});})(map__22341,map__22341__$1,keywordize_keys,keyfn))
;
return iter__4506__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__22341,map__22341__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__22368 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__22370__i = 0, G__22370__a = new Array(arguments.length -  1);
while (G__22370__i < G__22370__a.length) {G__22370__a[G__22370__i] = arguments[G__22370__i + 1]; ++G__22370__i;}
  opts = new cljs.core.IndexedSeq(G__22370__a,0);
} 
return G__22368__delegate.call(this,x,opts);};
G__22368.cljs$lang$maxFixedArity = 1;
G__22368.cljs$lang$applyTo = (function (arglist__22371){
var x = cljs.core.first(arglist__22371);
var opts = cljs.core.rest(arglist__22371);
return G__22368__delegate(x,opts);
});
G__22368.cljs$core$IFn$_invoke$arity$variadic = G__22368__delegate;
return G__22368;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__22372 = null;
if (arguments.length > 1) {
var G__22373__i = 0, G__22373__a = new Array(arguments.length -  1);
while (G__22373__i < G__22373__a.length) {G__22373__a[G__22373__i] = arguments[G__22373__i + 1]; ++G__22373__i;}
G__22372 = new cljs.core.IndexedSeq(G__22373__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__22372);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__22376 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__22376) : cljs.core.atom.call(null,G__22376));
})();
return ((function (mem){
return (function() { 
var G__22378__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__22377 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22377) : cljs.core.deref.call(null,G__22377));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__22378 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__22379__i = 0, G__22379__a = new Array(arguments.length -  0);
while (G__22379__i < G__22379__a.length) {G__22379__a[G__22379__i] = arguments[G__22379__i + 0]; ++G__22379__i;}
  args = new cljs.core.IndexedSeq(G__22379__a,0);
} 
return G__22378__delegate.call(this,args);};
G__22378.cljs$lang$maxFixedArity = 0;
G__22378.cljs$lang$applyTo = (function (arglist__22380){
var args = cljs.core.seq(arglist__22380);
return G__22378__delegate(args);
});
G__22378.cljs$core$IFn$_invoke$arity$variadic = G__22378__delegate;
return G__22378;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__22382 = ret;
f = G__22382;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__22383__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__22383 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__22384__i = 0, G__22384__a = new Array(arguments.length -  1);
while (G__22384__i < G__22384__a.length) {G__22384__a[G__22384__i] = arguments[G__22384__i + 1]; ++G__22384__i;}
  args = new cljs.core.IndexedSeq(G__22384__a,0);
} 
return G__22383__delegate.call(this,f,args);};
G__22383.cljs$lang$maxFixedArity = 1;
G__22383.cljs$lang$applyTo = (function (arglist__22385){
var f = cljs.core.first(arglist__22385);
var args = cljs.core.rest(arglist__22385);
return G__22383__delegate(f,args);
});
G__22383.cljs$core$IFn$_invoke$arity$variadic = G__22383__delegate;
return G__22383;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__22386 = null;
if (arguments.length > 1) {
var G__22387__i = 0, G__22387__a = new Array(arguments.length -  1);
while (G__22387__i < G__22387__a.length) {G__22387__a[G__22387__i] = arguments[G__22387__i + 1]; ++G__22387__i;}
G__22386 = new cljs.core.IndexedSeq(G__22387__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__22386);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__22390 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__22390) : Math.floor.call(null,G__22390));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__22392 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22392) : f.call(null,G__22392));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$17,cljs.core.PersistentArrayMap.EMPTY,cljs.core.constant$keyword$18,cljs.core.PersistentArrayMap.EMPTY,cljs.core.constant$keyword$19,cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__22394 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__22394) : cljs.core.atom.call(null,G__22394));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__22395__i = 0, G__22395__a = new Array(arguments.length -  1);
while (G__22395__i < G__22395__a.length) {G__22395__a[G__22395__i] = arguments[G__22395__i + 1]; ++G__22395__i;}
  args = new cljs.core.IndexedSeq(G__22395__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__22396){
var f = cljs.core.first(arglist__22396);
var args = cljs.core.rest(arglist__22396);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__22461 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22461) : cljs.core.deref.call(null,G__22461));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__3750__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = cljs.core.contains_QMARK_(cljs.core.constant$keyword$19.cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
var and__3738__auto__ = cljs.core.vector_QMARK_(parent);
if(and__3738__auto__){
var and__3738__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__3738__auto____$1){
var and__3738__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__3738__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__22486 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__22484 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__22484) : child.call(null,G__22484));
})(),(function (){var G__22485 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__22485) : parent.call(null,G__22485));
})());
var G__22487 = (i + (1));
ret = G__22486;
i = G__22487;
continue;
}
break;
}
} else {
return and__3738__auto____$2;
}
} else {
return and__3738__auto____$1;
}
} else {
return and__3738__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__22491 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22491) : cljs.core.deref.call(null,G__22491));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$17.cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__22495 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22495) : cljs.core.deref.call(null,G__22495));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$19.cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__22499 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22499) : cljs.core.deref.call(null,G__22499));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$18.cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = cljs.core.constant$keyword$17.cljs$core$IFn$_invoke$arity$1(h);
var td = cljs.core.constant$keyword$18.cljs$core$IFn$_invoke$arity$1(h);
var ta = cljs.core.constant$keyword$19.cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__22508 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__22508) : targets.call(null,G__22508));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__22509 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__22509) : sources.call(null,G__22509));
})()));
});})(tp,td,ta))
;
var or__3750__auto__ = ((cljs.core.contains_QMARK_((function (){var G__22513 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__22513) : tp.call(null,G__22513));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__22514 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__22514) : ta.call(null,G__22514));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__22515 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__22515) : ta.call(null,G__22515));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$17,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.constant$keyword$17.cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),cljs.core.constant$keyword$19,tf(cljs.core.constant$keyword$19.cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),cljs.core.constant$keyword$18,tf(cljs.core.constant$keyword$18.cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__3750__auto__)){
return or__3750__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = cljs.core.constant$keyword$17.cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__22522 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__22522) : parentMap.call(null,G__22522));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__22523 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__22523) : parentMap.call(null,G__22523));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__22516_SHARP_){
return cljs.core.cons(cljs.core.first(p1__22516_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__22516_SHARP_),cljs.core.second(p1__22516_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__22524 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__22524) : parentMap.call(null,G__22524));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__22517_SHARP_,p2__22518_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__22517_SHARP_,p2__22518_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__22527 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22527) : cljs.core.deref.call(null,G__22527));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__22528 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22528) : cljs.core.deref.call(null,G__22528));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__22544 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22544) : cljs.core.deref.call(null,G__22544));
})().call(null,x);
var or__3750__auto__ = (cljs.core.truth_((function (){var and__3738__auto__ = xprefs;
if(cljs.core.truth_(and__3738__auto__)){
var G__22546 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__22546) : xprefs.call(null,G__22546));
} else {
return and__3738__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__3750__auto__)){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__22547 = cljs.core.rest(ps);
ps = G__22547;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3750__auto____$1)){
return or__3750__auto____$1;
} else {
var or__3750__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__22548 = cljs.core.rest(ps);
ps = G__22548;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3750__auto____$2)){
return or__3750__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__3750__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__3750__auto__)){
return or__3750__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__22562){
var vec__22563 = p__22562;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22563,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22563,(1),null);
var e = vec__22563;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__22564 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22564) : cljs.core.deref.call(null,G__22564));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__3750__auto__ = (be == null);
if(or__3750__auto__){
return or__3750__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__22565 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22565) : cljs.core.deref.call(null,G__22565));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__22566 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22566) : cljs.core.deref.call(null,G__22566));
})(),(function (){var G__22567 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22567) : cljs.core.deref.call(null,G__22567));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj22569 = {};
return obj22569;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__3738__auto__ = mf;
if(and__3738__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__3738__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__4394__auto__ = (((mf == null))?null:mf);
return (function (){var or__3750__auto__ = (cljs.core._reset[(function (){var G__22573 = x__4394__auto__;
return goog.typeOf(G__22573);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._reset["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__3738__auto__ = mf;
if(and__3738__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__3738__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__4394__auto__ = (((mf == null))?null:mf);
return (function (){var or__3750__auto__ = (cljs.core._add_method[(function (){var G__22577 = x__4394__auto__;
return goog.typeOf(G__22577);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._add_method["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__3738__auto__ = mf;
if(and__3738__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__3738__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__4394__auto__ = (((mf == null))?null:mf);
return (function (){var or__3750__auto__ = (cljs.core._remove_method[(function (){var G__22581 = x__4394__auto__;
return goog.typeOf(G__22581);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._remove_method["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__3738__auto__ = mf;
if(and__3738__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__3738__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__4394__auto__ = (((mf == null))?null:mf);
return (function (){var or__3750__auto__ = (cljs.core._prefer_method[(function (){var G__22585 = x__4394__auto__;
return goog.typeOf(G__22585);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__3738__auto__ = mf;
if(and__3738__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__3738__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__4394__auto__ = (((mf == null))?null:mf);
return (function (){var or__3750__auto__ = (cljs.core._get_method[(function (){var G__22589 = x__4394__auto__;
return goog.typeOf(G__22589);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._get_method["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__3738__auto__ = mf;
if(and__3738__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__3738__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__4394__auto__ = (((mf == null))?null:mf);
return (function (){var or__3750__auto__ = (cljs.core._methods[(function (){var G__22593 = x__4394__auto__;
return goog.typeOf(G__22593);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._methods["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__3738__auto__ = mf;
if(and__3738__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__3738__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__4394__auto__ = (((mf == null))?null:mf);
return (function (){var or__3750__auto__ = (cljs.core._prefers[(function (){var G__22597 = x__4394__auto__;
return goog.typeOf(G__22597);
})()]);
if(or__3750__auto__){
return or__3750__auto__;
} else {
var or__3750__auto____$1 = (cljs.core._prefers["_"]);
if(or__3750__auto____$1){
return or__3750__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__22599 = this$__$1;
return goog.getUid(G__22599);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__22600 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22600) : cljs.core.deref.call(null,G__22600));
})(),(function (){var G__22601 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22601) : cljs.core.deref.call(null,G__22601));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__22602 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22602) : cljs.core.deref.call(null,G__22602));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__22603 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22603) : cljs.core.deref.call(null,G__22603));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__22604 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22604) : cljs.core.deref.call(null,G__22604));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__22605 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22605) : cljs.core.deref.call(null,G__22605));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__23446 = null;
var G__23446__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__23446__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__22606 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__22606) : self__.dispatch_fn.call(null,G__22606));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__22607 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__22607) : target_fn.call(null,G__22607));
});
var G__23446__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__22608 = a;
var G__22609 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__22608,G__22609) : self__.dispatch_fn.call(null,G__22608,G__22609));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__22610 = a;
var G__22611 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__22610,G__22611) : target_fn.call(null,G__22610,G__22611));
});
var G__23446__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__22612 = a;
var G__22613 = b;
var G__22614 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__22612,G__22613,G__22614) : self__.dispatch_fn.call(null,G__22612,G__22613,G__22614));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__22615 = a;
var G__22616 = b;
var G__22617 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__22615,G__22616,G__22617) : target_fn.call(null,G__22615,G__22616,G__22617));
});
var G__23446__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__22618 = a;
var G__22619 = b;
var G__22620 = c;
var G__22621 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__22618,G__22619,G__22620,G__22621) : self__.dispatch_fn.call(null,G__22618,G__22619,G__22620,G__22621));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__22622 = a;
var G__22623 = b;
var G__22624 = c;
var G__22625 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__22622,G__22623,G__22624,G__22625) : target_fn.call(null,G__22622,G__22623,G__22624,G__22625));
});
var G__23446__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__22626 = a;
var G__22627 = b;
var G__22628 = c;
var G__22629 = d;
var G__22630 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__22626,G__22627,G__22628,G__22629,G__22630) : self__.dispatch_fn.call(null,G__22626,G__22627,G__22628,G__22629,G__22630));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__22631 = a;
var G__22632 = b;
var G__22633 = c;
var G__22634 = d;
var G__22635 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__22631,G__22632,G__22633,G__22634,G__22635) : target_fn.call(null,G__22631,G__22632,G__22633,G__22634,G__22635));
});
var G__23446__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__22636 = a;
var G__22637 = b;
var G__22638 = c;
var G__22639 = d;
var G__22640 = e;
var G__22641 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__22636,G__22637,G__22638,G__22639,G__22640,G__22641) : self__.dispatch_fn.call(null,G__22636,G__22637,G__22638,G__22639,G__22640,G__22641));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__22642 = a;
var G__22643 = b;
var G__22644 = c;
var G__22645 = d;
var G__22646 = e;
var G__22647 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__22642,G__22643,G__22644,G__22645,G__22646,G__22647) : target_fn.call(null,G__22642,G__22643,G__22644,G__22645,G__22646,G__22647));
});
var G__23446__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__22648 = a;
var G__22649 = b;
var G__22650 = c;
var G__22651 = d;
var G__22652 = e;
var G__22653 = f;
var G__22654 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__22648,G__22649,G__22650,G__22651,G__22652,G__22653,G__22654) : self__.dispatch_fn.call(null,G__22648,G__22649,G__22650,G__22651,G__22652,G__22653,G__22654));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__22655 = a;
var G__22656 = b;
var G__22657 = c;
var G__22658 = d;
var G__22659 = e;
var G__22660 = f;
var G__22661 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__22655,G__22656,G__22657,G__22658,G__22659,G__22660,G__22661) : target_fn.call(null,G__22655,G__22656,G__22657,G__22658,G__22659,G__22660,G__22661));
});
var G__23446__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__22662 = a;
var G__22663 = b;
var G__22664 = c;
var G__22665 = d;
var G__22666 = e;
var G__22667 = f;
var G__22668 = g;
var G__22669 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__22662,G__22663,G__22664,G__22665,G__22666,G__22667,G__22668,G__22669) : self__.dispatch_fn.call(null,G__22662,G__22663,G__22664,G__22665,G__22666,G__22667,G__22668,G__22669));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__22670 = a;
var G__22671 = b;
var G__22672 = c;
var G__22673 = d;
var G__22674 = e;
var G__22675 = f;
var G__22676 = g;
var G__22677 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__22670,G__22671,G__22672,G__22673,G__22674,G__22675,G__22676,G__22677) : target_fn.call(null,G__22670,G__22671,G__22672,G__22673,G__22674,G__22675,G__22676,G__22677));
});
var G__23446__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__22678 = a;
var G__22679 = b;
var G__22680 = c;
var G__22681 = d;
var G__22682 = e;
var G__22683 = f;
var G__22684 = g;
var G__22685 = h;
var G__22686 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__22678,G__22679,G__22680,G__22681,G__22682,G__22683,G__22684,G__22685,G__22686) : self__.dispatch_fn.call(null,G__22678,G__22679,G__22680,G__22681,G__22682,G__22683,G__22684,G__22685,G__22686));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__22687 = a;
var G__22688 = b;
var G__22689 = c;
var G__22690 = d;
var G__22691 = e;
var G__22692 = f;
var G__22693 = g;
var G__22694 = h;
var G__22695 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__22687,G__22688,G__22689,G__22690,G__22691,G__22692,G__22693,G__22694,G__22695) : target_fn.call(null,G__22687,G__22688,G__22689,G__22690,G__22691,G__22692,G__22693,G__22694,G__22695));
});
var G__23446__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__22696 = a;
var G__22697 = b;
var G__22698 = c;
var G__22699 = d;
var G__22700 = e;
var G__22701 = f;
var G__22702 = g;
var G__22703 = h;
var G__22704 = i;
var G__22705 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__22696,G__22697,G__22698,G__22699,G__22700,G__22701,G__22702,G__22703,G__22704,G__22705) : self__.dispatch_fn.call(null,G__22696,G__22697,G__22698,G__22699,G__22700,G__22701,G__22702,G__22703,G__22704,G__22705));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__22706 = a;
var G__22707 = b;
var G__22708 = c;
var G__22709 = d;
var G__22710 = e;
var G__22711 = f;
var G__22712 = g;
var G__22713 = h;
var G__22714 = i;
var G__22715 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__22706,G__22707,G__22708,G__22709,G__22710,G__22711,G__22712,G__22713,G__22714,G__22715) : target_fn.call(null,G__22706,G__22707,G__22708,G__22709,G__22710,G__22711,G__22712,G__22713,G__22714,G__22715));
});
var G__23446__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__22716 = a;
var G__22717 = b;
var G__22718 = c;
var G__22719 = d;
var G__22720 = e;
var G__22721 = f;
var G__22722 = g;
var G__22723 = h;
var G__22724 = i;
var G__22725 = j;
var G__22726 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__22716,G__22717,G__22718,G__22719,G__22720,G__22721,G__22722,G__22723,G__22724,G__22725,G__22726) : self__.dispatch_fn.call(null,G__22716,G__22717,G__22718,G__22719,G__22720,G__22721,G__22722,G__22723,G__22724,G__22725,G__22726));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__22727 = a;
var G__22728 = b;
var G__22729 = c;
var G__22730 = d;
var G__22731 = e;
var G__22732 = f;
var G__22733 = g;
var G__22734 = h;
var G__22735 = i;
var G__22736 = j;
var G__22737 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__22727,G__22728,G__22729,G__22730,G__22731,G__22732,G__22733,G__22734,G__22735,G__22736,G__22737) : target_fn.call(null,G__22727,G__22728,G__22729,G__22730,G__22731,G__22732,G__22733,G__22734,G__22735,G__22736,G__22737));
});
var G__23446__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__22738 = a;
var G__22739 = b;
var G__22740 = c;
var G__22741 = d;
var G__22742 = e;
var G__22743 = f;
var G__22744 = g;
var G__22745 = h;
var G__22746 = i;
var G__22747 = j;
var G__22748 = k;
var G__22749 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__22738,G__22739,G__22740,G__22741,G__22742,G__22743,G__22744,G__22745,G__22746,G__22747,G__22748,G__22749) : self__.dispatch_fn.call(null,G__22738,G__22739,G__22740,G__22741,G__22742,G__22743,G__22744,G__22745,G__22746,G__22747,G__22748,G__22749));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__22750 = a;
var G__22751 = b;
var G__22752 = c;
var G__22753 = d;
var G__22754 = e;
var G__22755 = f;
var G__22756 = g;
var G__22757 = h;
var G__22758 = i;
var G__22759 = j;
var G__22760 = k;
var G__22761 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__22750,G__22751,G__22752,G__22753,G__22754,G__22755,G__22756,G__22757,G__22758,G__22759,G__22760,G__22761) : target_fn.call(null,G__22750,G__22751,G__22752,G__22753,G__22754,G__22755,G__22756,G__22757,G__22758,G__22759,G__22760,G__22761));
});
var G__23446__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__22762 = a;
var G__22763 = b;
var G__22764 = c;
var G__22765 = d;
var G__22766 = e;
var G__22767 = f;
var G__22768 = g;
var G__22769 = h;
var G__22770 = i;
var G__22771 = j;
var G__22772 = k;
var G__22773 = l;
var G__22774 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__22762,G__22763,G__22764,G__22765,G__22766,G__22767,G__22768,G__22769,G__22770,G__22771,G__22772,G__22773,G__22774) : self__.dispatch_fn.call(null,G__22762,G__22763,G__22764,G__22765,G__22766,G__22767,G__22768,G__22769,G__22770,G__22771,G__22772,G__22773,G__22774));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__22775 = a;
var G__22776 = b;
var G__22777 = c;
var G__22778 = d;
var G__22779 = e;
var G__22780 = f;
var G__22781 = g;
var G__22782 = h;
var G__22783 = i;
var G__22784 = j;
var G__22785 = k;
var G__22786 = l;
var G__22787 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__22775,G__22776,G__22777,G__22778,G__22779,G__22780,G__22781,G__22782,G__22783,G__22784,G__22785,G__22786,G__22787) : target_fn.call(null,G__22775,G__22776,G__22777,G__22778,G__22779,G__22780,G__22781,G__22782,G__22783,G__22784,G__22785,G__22786,G__22787));
});
var G__23446__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__22788 = a;
var G__22789 = b;
var G__22790 = c;
var G__22791 = d;
var G__22792 = e;
var G__22793 = f;
var G__22794 = g;
var G__22795 = h;
var G__22796 = i;
var G__22797 = j;
var G__22798 = k;
var G__22799 = l;
var G__22800 = m;
var G__22801 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__22788,G__22789,G__22790,G__22791,G__22792,G__22793,G__22794,G__22795,G__22796,G__22797,G__22798,G__22799,G__22800,G__22801) : self__.dispatch_fn.call(null,G__22788,G__22789,G__22790,G__22791,G__22792,G__22793,G__22794,G__22795,G__22796,G__22797,G__22798,G__22799,G__22800,G__22801));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__22802 = a;
var G__22803 = b;
var G__22804 = c;
var G__22805 = d;
var G__22806 = e;
var G__22807 = f;
var G__22808 = g;
var G__22809 = h;
var G__22810 = i;
var G__22811 = j;
var G__22812 = k;
var G__22813 = l;
var G__22814 = m;
var G__22815 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__22802,G__22803,G__22804,G__22805,G__22806,G__22807,G__22808,G__22809,G__22810,G__22811,G__22812,G__22813,G__22814,G__22815) : target_fn.call(null,G__22802,G__22803,G__22804,G__22805,G__22806,G__22807,G__22808,G__22809,G__22810,G__22811,G__22812,G__22813,G__22814,G__22815));
});
var G__23446__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__22816 = a;
var G__22817 = b;
var G__22818 = c;
var G__22819 = d;
var G__22820 = e;
var G__22821 = f;
var G__22822 = g;
var G__22823 = h;
var G__22824 = i;
var G__22825 = j;
var G__22826 = k;
var G__22827 = l;
var G__22828 = m;
var G__22829 = n;
var G__22830 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__22816,G__22817,G__22818,G__22819,G__22820,G__22821,G__22822,G__22823,G__22824,G__22825,G__22826,G__22827,G__22828,G__22829,G__22830) : self__.dispatch_fn.call(null,G__22816,G__22817,G__22818,G__22819,G__22820,G__22821,G__22822,G__22823,G__22824,G__22825,G__22826,G__22827,G__22828,G__22829,G__22830));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__22831 = a;
var G__22832 = b;
var G__22833 = c;
var G__22834 = d;
var G__22835 = e;
var G__22836 = f;
var G__22837 = g;
var G__22838 = h;
var G__22839 = i;
var G__22840 = j;
var G__22841 = k;
var G__22842 = l;
var G__22843 = m;
var G__22844 = n;
var G__22845 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__22831,G__22832,G__22833,G__22834,G__22835,G__22836,G__22837,G__22838,G__22839,G__22840,G__22841,G__22842,G__22843,G__22844,G__22845) : target_fn.call(null,G__22831,G__22832,G__22833,G__22834,G__22835,G__22836,G__22837,G__22838,G__22839,G__22840,G__22841,G__22842,G__22843,G__22844,G__22845));
});
var G__23446__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__22846 = a;
var G__22847 = b;
var G__22848 = c;
var G__22849 = d;
var G__22850 = e;
var G__22851 = f;
var G__22852 = g;
var G__22853 = h;
var G__22854 = i;
var G__22855 = j;
var G__22856 = k;
var G__22857 = l;
var G__22858 = m;
var G__22859 = n;
var G__22860 = o;
var G__22861 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__22846,G__22847,G__22848,G__22849,G__22850,G__22851,G__22852,G__22853,G__22854,G__22855,G__22856,G__22857,G__22858,G__22859,G__22860,G__22861) : self__.dispatch_fn.call(null,G__22846,G__22847,G__22848,G__22849,G__22850,G__22851,G__22852,G__22853,G__22854,G__22855,G__22856,G__22857,G__22858,G__22859,G__22860,G__22861));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__22862 = a;
var G__22863 = b;
var G__22864 = c;
var G__22865 = d;
var G__22866 = e;
var G__22867 = f;
var G__22868 = g;
var G__22869 = h;
var G__22870 = i;
var G__22871 = j;
var G__22872 = k;
var G__22873 = l;
var G__22874 = m;
var G__22875 = n;
var G__22876 = o;
var G__22877 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__22862,G__22863,G__22864,G__22865,G__22866,G__22867,G__22868,G__22869,G__22870,G__22871,G__22872,G__22873,G__22874,G__22875,G__22876,G__22877) : target_fn.call(null,G__22862,G__22863,G__22864,G__22865,G__22866,G__22867,G__22868,G__22869,G__22870,G__22871,G__22872,G__22873,G__22874,G__22875,G__22876,G__22877));
});
var G__23446__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__22878 = a;
var G__22879 = b;
var G__22880 = c;
var G__22881 = d;
var G__22882 = e;
var G__22883 = f;
var G__22884 = g;
var G__22885 = h;
var G__22886 = i;
var G__22887 = j;
var G__22888 = k;
var G__22889 = l;
var G__22890 = m;
var G__22891 = n;
var G__22892 = o;
var G__22893 = p;
var G__22894 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__22878,G__22879,G__22880,G__22881,G__22882,G__22883,G__22884,G__22885,G__22886,G__22887,G__22888,G__22889,G__22890,G__22891,G__22892,G__22893,G__22894) : self__.dispatch_fn.call(null,G__22878,G__22879,G__22880,G__22881,G__22882,G__22883,G__22884,G__22885,G__22886,G__22887,G__22888,G__22889,G__22890,G__22891,G__22892,G__22893,G__22894));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__22895 = a;
var G__22896 = b;
var G__22897 = c;
var G__22898 = d;
var G__22899 = e;
var G__22900 = f;
var G__22901 = g;
var G__22902 = h;
var G__22903 = i;
var G__22904 = j;
var G__22905 = k;
var G__22906 = l;
var G__22907 = m;
var G__22908 = n;
var G__22909 = o;
var G__22910 = p;
var G__22911 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__22895,G__22896,G__22897,G__22898,G__22899,G__22900,G__22901,G__22902,G__22903,G__22904,G__22905,G__22906,G__22907,G__22908,G__22909,G__22910,G__22911) : target_fn.call(null,G__22895,G__22896,G__22897,G__22898,G__22899,G__22900,G__22901,G__22902,G__22903,G__22904,G__22905,G__22906,G__22907,G__22908,G__22909,G__22910,G__22911));
});
var G__23446__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__22912 = a;
var G__22913 = b;
var G__22914 = c;
var G__22915 = d;
var G__22916 = e;
var G__22917 = f;
var G__22918 = g;
var G__22919 = h;
var G__22920 = i;
var G__22921 = j;
var G__22922 = k;
var G__22923 = l;
var G__22924 = m;
var G__22925 = n;
var G__22926 = o;
var G__22927 = p;
var G__22928 = q;
var G__22929 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__22912,G__22913,G__22914,G__22915,G__22916,G__22917,G__22918,G__22919,G__22920,G__22921,G__22922,G__22923,G__22924,G__22925,G__22926,G__22927,G__22928,G__22929) : self__.dispatch_fn.call(null,G__22912,G__22913,G__22914,G__22915,G__22916,G__22917,G__22918,G__22919,G__22920,G__22921,G__22922,G__22923,G__22924,G__22925,G__22926,G__22927,G__22928,G__22929));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__22930 = a;
var G__22931 = b;
var G__22932 = c;
var G__22933 = d;
var G__22934 = e;
var G__22935 = f;
var G__22936 = g;
var G__22937 = h;
var G__22938 = i;
var G__22939 = j;
var G__22940 = k;
var G__22941 = l;
var G__22942 = m;
var G__22943 = n;
var G__22944 = o;
var G__22945 = p;
var G__22946 = q;
var G__22947 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__22930,G__22931,G__22932,G__22933,G__22934,G__22935,G__22936,G__22937,G__22938,G__22939,G__22940,G__22941,G__22942,G__22943,G__22944,G__22945,G__22946,G__22947) : target_fn.call(null,G__22930,G__22931,G__22932,G__22933,G__22934,G__22935,G__22936,G__22937,G__22938,G__22939,G__22940,G__22941,G__22942,G__22943,G__22944,G__22945,G__22946,G__22947));
});
var G__23446__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__22948 = a;
var G__22949 = b;
var G__22950 = c;
var G__22951 = d;
var G__22952 = e;
var G__22953 = f;
var G__22954 = g;
var G__22955 = h;
var G__22956 = i;
var G__22957 = j;
var G__22958 = k;
var G__22959 = l;
var G__22960 = m;
var G__22961 = n;
var G__22962 = o;
var G__22963 = p;
var G__22964 = q;
var G__22965 = r;
var G__22966 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__22948,G__22949,G__22950,G__22951,G__22952,G__22953,G__22954,G__22955,G__22956,G__22957,G__22958,G__22959,G__22960,G__22961,G__22962,G__22963,G__22964,G__22965,G__22966) : self__.dispatch_fn.call(null,G__22948,G__22949,G__22950,G__22951,G__22952,G__22953,G__22954,G__22955,G__22956,G__22957,G__22958,G__22959,G__22960,G__22961,G__22962,G__22963,G__22964,G__22965,G__22966));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__22967 = a;
var G__22968 = b;
var G__22969 = c;
var G__22970 = d;
var G__22971 = e;
var G__22972 = f;
var G__22973 = g;
var G__22974 = h;
var G__22975 = i;
var G__22976 = j;
var G__22977 = k;
var G__22978 = l;
var G__22979 = m;
var G__22980 = n;
var G__22981 = o;
var G__22982 = p;
var G__22983 = q;
var G__22984 = r;
var G__22985 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__22967,G__22968,G__22969,G__22970,G__22971,G__22972,G__22973,G__22974,G__22975,G__22976,G__22977,G__22978,G__22979,G__22980,G__22981,G__22982,G__22983,G__22984,G__22985) : target_fn.call(null,G__22967,G__22968,G__22969,G__22970,G__22971,G__22972,G__22973,G__22974,G__22975,G__22976,G__22977,G__22978,G__22979,G__22980,G__22981,G__22982,G__22983,G__22984,G__22985));
});
var G__23446__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__22986 = a;
var G__22987 = b;
var G__22988 = c;
var G__22989 = d;
var G__22990 = e;
var G__22991 = f;
var G__22992 = g;
var G__22993 = h;
var G__22994 = i;
var G__22995 = j;
var G__22996 = k;
var G__22997 = l;
var G__22998 = m;
var G__22999 = n;
var G__23000 = o;
var G__23001 = p;
var G__23002 = q;
var G__23003 = r;
var G__23004 = s;
var G__23005 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__22986,G__22987,G__22988,G__22989,G__22990,G__22991,G__22992,G__22993,G__22994,G__22995,G__22996,G__22997,G__22998,G__22999,G__23000,G__23001,G__23002,G__23003,G__23004,G__23005) : self__.dispatch_fn.call(null,G__22986,G__22987,G__22988,G__22989,G__22990,G__22991,G__22992,G__22993,G__22994,G__22995,G__22996,G__22997,G__22998,G__22999,G__23000,G__23001,G__23002,G__23003,G__23004,G__23005));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23006 = a;
var G__23007 = b;
var G__23008 = c;
var G__23009 = d;
var G__23010 = e;
var G__23011 = f;
var G__23012 = g;
var G__23013 = h;
var G__23014 = i;
var G__23015 = j;
var G__23016 = k;
var G__23017 = l;
var G__23018 = m;
var G__23019 = n;
var G__23020 = o;
var G__23021 = p;
var G__23022 = q;
var G__23023 = r;
var G__23024 = s;
var G__23025 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__23006,G__23007,G__23008,G__23009,G__23010,G__23011,G__23012,G__23013,G__23014,G__23015,G__23016,G__23017,G__23018,G__23019,G__23020,G__23021,G__23022,G__23023,G__23024,G__23025) : target_fn.call(null,G__23006,G__23007,G__23008,G__23009,G__23010,G__23011,G__23012,G__23013,G__23014,G__23015,G__23016,G__23017,G__23018,G__23019,G__23020,G__23021,G__23022,G__23023,G__23024,G__23025));
});
var G__23446__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__23446 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__23446__1.call(this,self__);
case 2:
return G__23446__2.call(this,self__,a);
case 3:
return G__23446__3.call(this,self__,a,b);
case 4:
return G__23446__4.call(this,self__,a,b,c);
case 5:
return G__23446__5.call(this,self__,a,b,c,d);
case 6:
return G__23446__6.call(this,self__,a,b,c,d,e);
case 7:
return G__23446__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__23446__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__23446__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__23446__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__23446__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__23446__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__23446__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__23446__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__23446__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__23446__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__23446__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__23446__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__23446__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__23446__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__23446__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__23446__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23446.cljs$core$IFn$_invoke$arity$1 = G__23446__1;
G__23446.cljs$core$IFn$_invoke$arity$2 = G__23446__2;
G__23446.cljs$core$IFn$_invoke$arity$3 = G__23446__3;
G__23446.cljs$core$IFn$_invoke$arity$4 = G__23446__4;
G__23446.cljs$core$IFn$_invoke$arity$5 = G__23446__5;
G__23446.cljs$core$IFn$_invoke$arity$6 = G__23446__6;
G__23446.cljs$core$IFn$_invoke$arity$7 = G__23446__7;
G__23446.cljs$core$IFn$_invoke$arity$8 = G__23446__8;
G__23446.cljs$core$IFn$_invoke$arity$9 = G__23446__9;
G__23446.cljs$core$IFn$_invoke$arity$10 = G__23446__10;
G__23446.cljs$core$IFn$_invoke$arity$11 = G__23446__11;
G__23446.cljs$core$IFn$_invoke$arity$12 = G__23446__12;
G__23446.cljs$core$IFn$_invoke$arity$13 = G__23446__13;
G__23446.cljs$core$IFn$_invoke$arity$14 = G__23446__14;
G__23446.cljs$core$IFn$_invoke$arity$15 = G__23446__15;
G__23446.cljs$core$IFn$_invoke$arity$16 = G__23446__16;
G__23446.cljs$core$IFn$_invoke$arity$17 = G__23446__17;
G__23446.cljs$core$IFn$_invoke$arity$18 = G__23446__18;
G__23446.cljs$core$IFn$_invoke$arity$19 = G__23446__19;
G__23446.cljs$core$IFn$_invoke$arity$20 = G__23446__20;
G__23446.cljs$core$IFn$_invoke$arity$21 = G__23446__21;
G__23446.cljs$core$IFn$_invoke$arity$22 = G__23446__22;
return G__23446;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args22598){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22598)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23026 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__23026) : self__.dispatch_fn.call(null,G__23026));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23027 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__23027) : target_fn.call(null,G__23027));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23028 = a;
var G__23029 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__23028,G__23029) : self__.dispatch_fn.call(null,G__23028,G__23029));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23030 = a;
var G__23031 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__23030,G__23031) : target_fn.call(null,G__23030,G__23031));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23032 = a;
var G__23033 = b;
var G__23034 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__23032,G__23033,G__23034) : self__.dispatch_fn.call(null,G__23032,G__23033,G__23034));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23035 = a;
var G__23036 = b;
var G__23037 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__23035,G__23036,G__23037) : target_fn.call(null,G__23035,G__23036,G__23037));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23038 = a;
var G__23039 = b;
var G__23040 = c;
var G__23041 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__23038,G__23039,G__23040,G__23041) : self__.dispatch_fn.call(null,G__23038,G__23039,G__23040,G__23041));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23042 = a;
var G__23043 = b;
var G__23044 = c;
var G__23045 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__23042,G__23043,G__23044,G__23045) : target_fn.call(null,G__23042,G__23043,G__23044,G__23045));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23046 = a;
var G__23047 = b;
var G__23048 = c;
var G__23049 = d;
var G__23050 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__23046,G__23047,G__23048,G__23049,G__23050) : self__.dispatch_fn.call(null,G__23046,G__23047,G__23048,G__23049,G__23050));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23051 = a;
var G__23052 = b;
var G__23053 = c;
var G__23054 = d;
var G__23055 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__23051,G__23052,G__23053,G__23054,G__23055) : target_fn.call(null,G__23051,G__23052,G__23053,G__23054,G__23055));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23056 = a;
var G__23057 = b;
var G__23058 = c;
var G__23059 = d;
var G__23060 = e;
var G__23061 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__23056,G__23057,G__23058,G__23059,G__23060,G__23061) : self__.dispatch_fn.call(null,G__23056,G__23057,G__23058,G__23059,G__23060,G__23061));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23062 = a;
var G__23063 = b;
var G__23064 = c;
var G__23065 = d;
var G__23066 = e;
var G__23067 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__23062,G__23063,G__23064,G__23065,G__23066,G__23067) : target_fn.call(null,G__23062,G__23063,G__23064,G__23065,G__23066,G__23067));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23068 = a;
var G__23069 = b;
var G__23070 = c;
var G__23071 = d;
var G__23072 = e;
var G__23073 = f;
var G__23074 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__23068,G__23069,G__23070,G__23071,G__23072,G__23073,G__23074) : self__.dispatch_fn.call(null,G__23068,G__23069,G__23070,G__23071,G__23072,G__23073,G__23074));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23075 = a;
var G__23076 = b;
var G__23077 = c;
var G__23078 = d;
var G__23079 = e;
var G__23080 = f;
var G__23081 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__23075,G__23076,G__23077,G__23078,G__23079,G__23080,G__23081) : target_fn.call(null,G__23075,G__23076,G__23077,G__23078,G__23079,G__23080,G__23081));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23082 = a;
var G__23083 = b;
var G__23084 = c;
var G__23085 = d;
var G__23086 = e;
var G__23087 = f;
var G__23088 = g;
var G__23089 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__23082,G__23083,G__23084,G__23085,G__23086,G__23087,G__23088,G__23089) : self__.dispatch_fn.call(null,G__23082,G__23083,G__23084,G__23085,G__23086,G__23087,G__23088,G__23089));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23090 = a;
var G__23091 = b;
var G__23092 = c;
var G__23093 = d;
var G__23094 = e;
var G__23095 = f;
var G__23096 = g;
var G__23097 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__23090,G__23091,G__23092,G__23093,G__23094,G__23095,G__23096,G__23097) : target_fn.call(null,G__23090,G__23091,G__23092,G__23093,G__23094,G__23095,G__23096,G__23097));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23098 = a;
var G__23099 = b;
var G__23100 = c;
var G__23101 = d;
var G__23102 = e;
var G__23103 = f;
var G__23104 = g;
var G__23105 = h;
var G__23106 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__23098,G__23099,G__23100,G__23101,G__23102,G__23103,G__23104,G__23105,G__23106) : self__.dispatch_fn.call(null,G__23098,G__23099,G__23100,G__23101,G__23102,G__23103,G__23104,G__23105,G__23106));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23107 = a;
var G__23108 = b;
var G__23109 = c;
var G__23110 = d;
var G__23111 = e;
var G__23112 = f;
var G__23113 = g;
var G__23114 = h;
var G__23115 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__23107,G__23108,G__23109,G__23110,G__23111,G__23112,G__23113,G__23114,G__23115) : target_fn.call(null,G__23107,G__23108,G__23109,G__23110,G__23111,G__23112,G__23113,G__23114,G__23115));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23116 = a;
var G__23117 = b;
var G__23118 = c;
var G__23119 = d;
var G__23120 = e;
var G__23121 = f;
var G__23122 = g;
var G__23123 = h;
var G__23124 = i;
var G__23125 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__23116,G__23117,G__23118,G__23119,G__23120,G__23121,G__23122,G__23123,G__23124,G__23125) : self__.dispatch_fn.call(null,G__23116,G__23117,G__23118,G__23119,G__23120,G__23121,G__23122,G__23123,G__23124,G__23125));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23126 = a;
var G__23127 = b;
var G__23128 = c;
var G__23129 = d;
var G__23130 = e;
var G__23131 = f;
var G__23132 = g;
var G__23133 = h;
var G__23134 = i;
var G__23135 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__23126,G__23127,G__23128,G__23129,G__23130,G__23131,G__23132,G__23133,G__23134,G__23135) : target_fn.call(null,G__23126,G__23127,G__23128,G__23129,G__23130,G__23131,G__23132,G__23133,G__23134,G__23135));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23136 = a;
var G__23137 = b;
var G__23138 = c;
var G__23139 = d;
var G__23140 = e;
var G__23141 = f;
var G__23142 = g;
var G__23143 = h;
var G__23144 = i;
var G__23145 = j;
var G__23146 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__23136,G__23137,G__23138,G__23139,G__23140,G__23141,G__23142,G__23143,G__23144,G__23145,G__23146) : self__.dispatch_fn.call(null,G__23136,G__23137,G__23138,G__23139,G__23140,G__23141,G__23142,G__23143,G__23144,G__23145,G__23146));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23147 = a;
var G__23148 = b;
var G__23149 = c;
var G__23150 = d;
var G__23151 = e;
var G__23152 = f;
var G__23153 = g;
var G__23154 = h;
var G__23155 = i;
var G__23156 = j;
var G__23157 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__23147,G__23148,G__23149,G__23150,G__23151,G__23152,G__23153,G__23154,G__23155,G__23156,G__23157) : target_fn.call(null,G__23147,G__23148,G__23149,G__23150,G__23151,G__23152,G__23153,G__23154,G__23155,G__23156,G__23157));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23158 = a;
var G__23159 = b;
var G__23160 = c;
var G__23161 = d;
var G__23162 = e;
var G__23163 = f;
var G__23164 = g;
var G__23165 = h;
var G__23166 = i;
var G__23167 = j;
var G__23168 = k;
var G__23169 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__23158,G__23159,G__23160,G__23161,G__23162,G__23163,G__23164,G__23165,G__23166,G__23167,G__23168,G__23169) : self__.dispatch_fn.call(null,G__23158,G__23159,G__23160,G__23161,G__23162,G__23163,G__23164,G__23165,G__23166,G__23167,G__23168,G__23169));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23170 = a;
var G__23171 = b;
var G__23172 = c;
var G__23173 = d;
var G__23174 = e;
var G__23175 = f;
var G__23176 = g;
var G__23177 = h;
var G__23178 = i;
var G__23179 = j;
var G__23180 = k;
var G__23181 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__23170,G__23171,G__23172,G__23173,G__23174,G__23175,G__23176,G__23177,G__23178,G__23179,G__23180,G__23181) : target_fn.call(null,G__23170,G__23171,G__23172,G__23173,G__23174,G__23175,G__23176,G__23177,G__23178,G__23179,G__23180,G__23181));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23182 = a;
var G__23183 = b;
var G__23184 = c;
var G__23185 = d;
var G__23186 = e;
var G__23187 = f;
var G__23188 = g;
var G__23189 = h;
var G__23190 = i;
var G__23191 = j;
var G__23192 = k;
var G__23193 = l;
var G__23194 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__23182,G__23183,G__23184,G__23185,G__23186,G__23187,G__23188,G__23189,G__23190,G__23191,G__23192,G__23193,G__23194) : self__.dispatch_fn.call(null,G__23182,G__23183,G__23184,G__23185,G__23186,G__23187,G__23188,G__23189,G__23190,G__23191,G__23192,G__23193,G__23194));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23195 = a;
var G__23196 = b;
var G__23197 = c;
var G__23198 = d;
var G__23199 = e;
var G__23200 = f;
var G__23201 = g;
var G__23202 = h;
var G__23203 = i;
var G__23204 = j;
var G__23205 = k;
var G__23206 = l;
var G__23207 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__23195,G__23196,G__23197,G__23198,G__23199,G__23200,G__23201,G__23202,G__23203,G__23204,G__23205,G__23206,G__23207) : target_fn.call(null,G__23195,G__23196,G__23197,G__23198,G__23199,G__23200,G__23201,G__23202,G__23203,G__23204,G__23205,G__23206,G__23207));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23208 = a;
var G__23209 = b;
var G__23210 = c;
var G__23211 = d;
var G__23212 = e;
var G__23213 = f;
var G__23214 = g;
var G__23215 = h;
var G__23216 = i;
var G__23217 = j;
var G__23218 = k;
var G__23219 = l;
var G__23220 = m;
var G__23221 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__23208,G__23209,G__23210,G__23211,G__23212,G__23213,G__23214,G__23215,G__23216,G__23217,G__23218,G__23219,G__23220,G__23221) : self__.dispatch_fn.call(null,G__23208,G__23209,G__23210,G__23211,G__23212,G__23213,G__23214,G__23215,G__23216,G__23217,G__23218,G__23219,G__23220,G__23221));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23222 = a;
var G__23223 = b;
var G__23224 = c;
var G__23225 = d;
var G__23226 = e;
var G__23227 = f;
var G__23228 = g;
var G__23229 = h;
var G__23230 = i;
var G__23231 = j;
var G__23232 = k;
var G__23233 = l;
var G__23234 = m;
var G__23235 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__23222,G__23223,G__23224,G__23225,G__23226,G__23227,G__23228,G__23229,G__23230,G__23231,G__23232,G__23233,G__23234,G__23235) : target_fn.call(null,G__23222,G__23223,G__23224,G__23225,G__23226,G__23227,G__23228,G__23229,G__23230,G__23231,G__23232,G__23233,G__23234,G__23235));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23236 = a;
var G__23237 = b;
var G__23238 = c;
var G__23239 = d;
var G__23240 = e;
var G__23241 = f;
var G__23242 = g;
var G__23243 = h;
var G__23244 = i;
var G__23245 = j;
var G__23246 = k;
var G__23247 = l;
var G__23248 = m;
var G__23249 = n;
var G__23250 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__23236,G__23237,G__23238,G__23239,G__23240,G__23241,G__23242,G__23243,G__23244,G__23245,G__23246,G__23247,G__23248,G__23249,G__23250) : self__.dispatch_fn.call(null,G__23236,G__23237,G__23238,G__23239,G__23240,G__23241,G__23242,G__23243,G__23244,G__23245,G__23246,G__23247,G__23248,G__23249,G__23250));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23251 = a;
var G__23252 = b;
var G__23253 = c;
var G__23254 = d;
var G__23255 = e;
var G__23256 = f;
var G__23257 = g;
var G__23258 = h;
var G__23259 = i;
var G__23260 = j;
var G__23261 = k;
var G__23262 = l;
var G__23263 = m;
var G__23264 = n;
var G__23265 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__23251,G__23252,G__23253,G__23254,G__23255,G__23256,G__23257,G__23258,G__23259,G__23260,G__23261,G__23262,G__23263,G__23264,G__23265) : target_fn.call(null,G__23251,G__23252,G__23253,G__23254,G__23255,G__23256,G__23257,G__23258,G__23259,G__23260,G__23261,G__23262,G__23263,G__23264,G__23265));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23266 = a;
var G__23267 = b;
var G__23268 = c;
var G__23269 = d;
var G__23270 = e;
var G__23271 = f;
var G__23272 = g;
var G__23273 = h;
var G__23274 = i;
var G__23275 = j;
var G__23276 = k;
var G__23277 = l;
var G__23278 = m;
var G__23279 = n;
var G__23280 = o;
var G__23281 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__23266,G__23267,G__23268,G__23269,G__23270,G__23271,G__23272,G__23273,G__23274,G__23275,G__23276,G__23277,G__23278,G__23279,G__23280,G__23281) : self__.dispatch_fn.call(null,G__23266,G__23267,G__23268,G__23269,G__23270,G__23271,G__23272,G__23273,G__23274,G__23275,G__23276,G__23277,G__23278,G__23279,G__23280,G__23281));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23282 = a;
var G__23283 = b;
var G__23284 = c;
var G__23285 = d;
var G__23286 = e;
var G__23287 = f;
var G__23288 = g;
var G__23289 = h;
var G__23290 = i;
var G__23291 = j;
var G__23292 = k;
var G__23293 = l;
var G__23294 = m;
var G__23295 = n;
var G__23296 = o;
var G__23297 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__23282,G__23283,G__23284,G__23285,G__23286,G__23287,G__23288,G__23289,G__23290,G__23291,G__23292,G__23293,G__23294,G__23295,G__23296,G__23297) : target_fn.call(null,G__23282,G__23283,G__23284,G__23285,G__23286,G__23287,G__23288,G__23289,G__23290,G__23291,G__23292,G__23293,G__23294,G__23295,G__23296,G__23297));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23298 = a;
var G__23299 = b;
var G__23300 = c;
var G__23301 = d;
var G__23302 = e;
var G__23303 = f;
var G__23304 = g;
var G__23305 = h;
var G__23306 = i;
var G__23307 = j;
var G__23308 = k;
var G__23309 = l;
var G__23310 = m;
var G__23311 = n;
var G__23312 = o;
var G__23313 = p;
var G__23314 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__23298,G__23299,G__23300,G__23301,G__23302,G__23303,G__23304,G__23305,G__23306,G__23307,G__23308,G__23309,G__23310,G__23311,G__23312,G__23313,G__23314) : self__.dispatch_fn.call(null,G__23298,G__23299,G__23300,G__23301,G__23302,G__23303,G__23304,G__23305,G__23306,G__23307,G__23308,G__23309,G__23310,G__23311,G__23312,G__23313,G__23314));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23315 = a;
var G__23316 = b;
var G__23317 = c;
var G__23318 = d;
var G__23319 = e;
var G__23320 = f;
var G__23321 = g;
var G__23322 = h;
var G__23323 = i;
var G__23324 = j;
var G__23325 = k;
var G__23326 = l;
var G__23327 = m;
var G__23328 = n;
var G__23329 = o;
var G__23330 = p;
var G__23331 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__23315,G__23316,G__23317,G__23318,G__23319,G__23320,G__23321,G__23322,G__23323,G__23324,G__23325,G__23326,G__23327,G__23328,G__23329,G__23330,G__23331) : target_fn.call(null,G__23315,G__23316,G__23317,G__23318,G__23319,G__23320,G__23321,G__23322,G__23323,G__23324,G__23325,G__23326,G__23327,G__23328,G__23329,G__23330,G__23331));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23332 = a;
var G__23333 = b;
var G__23334 = c;
var G__23335 = d;
var G__23336 = e;
var G__23337 = f;
var G__23338 = g;
var G__23339 = h;
var G__23340 = i;
var G__23341 = j;
var G__23342 = k;
var G__23343 = l;
var G__23344 = m;
var G__23345 = n;
var G__23346 = o;
var G__23347 = p;
var G__23348 = q;
var G__23349 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__23332,G__23333,G__23334,G__23335,G__23336,G__23337,G__23338,G__23339,G__23340,G__23341,G__23342,G__23343,G__23344,G__23345,G__23346,G__23347,G__23348,G__23349) : self__.dispatch_fn.call(null,G__23332,G__23333,G__23334,G__23335,G__23336,G__23337,G__23338,G__23339,G__23340,G__23341,G__23342,G__23343,G__23344,G__23345,G__23346,G__23347,G__23348,G__23349));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23350 = a;
var G__23351 = b;
var G__23352 = c;
var G__23353 = d;
var G__23354 = e;
var G__23355 = f;
var G__23356 = g;
var G__23357 = h;
var G__23358 = i;
var G__23359 = j;
var G__23360 = k;
var G__23361 = l;
var G__23362 = m;
var G__23363 = n;
var G__23364 = o;
var G__23365 = p;
var G__23366 = q;
var G__23367 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__23350,G__23351,G__23352,G__23353,G__23354,G__23355,G__23356,G__23357,G__23358,G__23359,G__23360,G__23361,G__23362,G__23363,G__23364,G__23365,G__23366,G__23367) : target_fn.call(null,G__23350,G__23351,G__23352,G__23353,G__23354,G__23355,G__23356,G__23357,G__23358,G__23359,G__23360,G__23361,G__23362,G__23363,G__23364,G__23365,G__23366,G__23367));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23368 = a;
var G__23369 = b;
var G__23370 = c;
var G__23371 = d;
var G__23372 = e;
var G__23373 = f;
var G__23374 = g;
var G__23375 = h;
var G__23376 = i;
var G__23377 = j;
var G__23378 = k;
var G__23379 = l;
var G__23380 = m;
var G__23381 = n;
var G__23382 = o;
var G__23383 = p;
var G__23384 = q;
var G__23385 = r;
var G__23386 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__23368,G__23369,G__23370,G__23371,G__23372,G__23373,G__23374,G__23375,G__23376,G__23377,G__23378,G__23379,G__23380,G__23381,G__23382,G__23383,G__23384,G__23385,G__23386) : self__.dispatch_fn.call(null,G__23368,G__23369,G__23370,G__23371,G__23372,G__23373,G__23374,G__23375,G__23376,G__23377,G__23378,G__23379,G__23380,G__23381,G__23382,G__23383,G__23384,G__23385,G__23386));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23387 = a;
var G__23388 = b;
var G__23389 = c;
var G__23390 = d;
var G__23391 = e;
var G__23392 = f;
var G__23393 = g;
var G__23394 = h;
var G__23395 = i;
var G__23396 = j;
var G__23397 = k;
var G__23398 = l;
var G__23399 = m;
var G__23400 = n;
var G__23401 = o;
var G__23402 = p;
var G__23403 = q;
var G__23404 = r;
var G__23405 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__23387,G__23388,G__23389,G__23390,G__23391,G__23392,G__23393,G__23394,G__23395,G__23396,G__23397,G__23398,G__23399,G__23400,G__23401,G__23402,G__23403,G__23404,G__23405) : target_fn.call(null,G__23387,G__23388,G__23389,G__23390,G__23391,G__23392,G__23393,G__23394,G__23395,G__23396,G__23397,G__23398,G__23399,G__23400,G__23401,G__23402,G__23403,G__23404,G__23405));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23406 = a;
var G__23407 = b;
var G__23408 = c;
var G__23409 = d;
var G__23410 = e;
var G__23411 = f;
var G__23412 = g;
var G__23413 = h;
var G__23414 = i;
var G__23415 = j;
var G__23416 = k;
var G__23417 = l;
var G__23418 = m;
var G__23419 = n;
var G__23420 = o;
var G__23421 = p;
var G__23422 = q;
var G__23423 = r;
var G__23424 = s;
var G__23425 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__23406,G__23407,G__23408,G__23409,G__23410,G__23411,G__23412,G__23413,G__23414,G__23415,G__23416,G__23417,G__23418,G__23419,G__23420,G__23421,G__23422,G__23423,G__23424,G__23425) : self__.dispatch_fn.call(null,G__23406,G__23407,G__23408,G__23409,G__23410,G__23411,G__23412,G__23413,G__23414,G__23415,G__23416,G__23417,G__23418,G__23419,G__23420,G__23421,G__23422,G__23423,G__23424,G__23425));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23426 = a;
var G__23427 = b;
var G__23428 = c;
var G__23429 = d;
var G__23430 = e;
var G__23431 = f;
var G__23432 = g;
var G__23433 = h;
var G__23434 = i;
var G__23435 = j;
var G__23436 = k;
var G__23437 = l;
var G__23438 = m;
var G__23439 = n;
var G__23440 = o;
var G__23441 = p;
var G__23442 = q;
var G__23443 = r;
var G__23444 = s;
var G__23445 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__23426,G__23427,G__23428,G__23429,G__23430,G__23431,G__23432,G__23433,G__23434,G__23435,G__23436,G__23437,G__23438,G__23439,G__23440,G__23441,G__23442,G__23443,G__23444,G__23445) : target_fn.call(null,G__23426,G__23427,G__23428,G__23429,G__23430,G__23431,G__23432,G__23433,G__23434,G__23435,G__23436,G__23437,G__23438,G__23439,G__23440,G__23441,G__23442,G__23443,G__23444,G__23445));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__23447 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__23447);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__4337__auto__,writer__4338__auto__,opt__4339__auto__){
return cljs.core._write(writer__4338__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__23452 = msg;
return Error(G__23452);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__23457 = x;
var G__23458 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__23457,G__23458) : pred.call(null,G__23457,G__23458));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__23459 = y;
var G__23460 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__23459,G__23460) : pred.call(null,G__23459,G__23460));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return cljs.core.constant$keyword$20;
} else {
return cljs.core.constant$keyword$21;
}
});
